var _LC = LyteComponent;
var _LyteComponent = Lyte.Component;
_LC.core._constructor.prototype.executeBlockHelpers = function(updateHelpers, node) {
    var originalUpdateHelpers = Array.from(updateHelpers);
    _LC.core.executeBlockHelpers.call(this,updateHelpers);
    if(node){
        for(var i=0;i<originalUpdateHelpers.length;i++) {
            var lastNode = originalUpdateHelpers[i].lastNode;
            if(lastNode._placeHolder) {
                lastNode = lastNode._placeHolder;
            }
            lastNode.__lyteHelper = node;
        }
    }   
}
_LC.core._constructor.prototype.updateForHelper = function(node, options, contextSwitchInfo, establishBindings, staticTempArr, yieldComp, initialRender) {
    if(options){
        if(options.type !== "remove" && node._forContent && node._forContent.length === 1 && node._forContent[0].length === 1 && node._forContent[0][0].__lyteHelper === node &&
        node._forContent[0][0].nodeType === 3) {
            node._forContent[0][0].remove();
            node._forContent=[];
        }
    }
    var ret =  _LC.core.updateForHelper.call(this, node, options, contextSwitchInfo, establishBindings, staticTempArr, yieldComp, initialRender)
    if(node.tagName !== "TEMPLATE") {
        node  = node._origTemplate;
    }
    node._placeHolder.__lytehelper = node._placeHolder._helper;
    node._placeHolder._actTemplate = node;
    if(options && options.type !== "remove") {
        if(!node._fRender){
            node._forContent.forEach(function(arr){
                arr.forEach(function(ele){
                    ele.__lyteHelper = node;	
                })  
            })
        } 
    }
    var lastNode = node;
    var items =  node._attributes.items; //node._items;
    if(!items || items.length === 0){
        var emptyTextNode = document.createTextNode("");
        node._forContent[0]=[emptyTextNode];
        emptyTextNode.__lyteHelper = node; 
        // _LC.unbound = initialUnbound;
        if(options.type !== "default") { 
            lastNode._placeHolder.parentNode.insertBefore(emptyTextNode, lastNode._placeHolder)
        }
    }
    return ret;
}
_LC.core._constructor.prototype.updateForInHelper = function(node, options, contextSwitchInfo, establishBindings, yieldComp, initialRender) {
    if(options){
        if(options.type !== "delete" && node._forContent && node._forContent.helperLink && node._forContent.helperLink[0].__lyteHelper === node &&
            node._forContent.helperLink[0].nodeType === 3) {
              node._forContent.helperLink[0].remove();
              delete node._forContent.helperLink;
          }
    }
    var ret = _LC.core.updateForInHelper.call(this,node, options, contextSwitchInfo, establishBindings, yieldComp, initialRender);
    if(node.tagName !== "TEMPLATE") {
        node  = node._origTemplate;
    }
    node._placeHolder.__lytehelper = node._placeHolder._helper;
    node._placeHolder._actTemplate = node;
    if(node._currentObject && options && options.type !== "delete") {
        node._keysArray.forEach(function(itemKey){
            node._forContent[itemKey].forEach(function(item) {		
                item.__lyteHelper = node;		        
            });
        })
    }
    var lastNode = node;
        if((!node._keysArray || node._keysArray.length === 0)){
            var emptyTextNode = document.createTextNode("");
            node._forContent.helperLink = [emptyTextNode];
            emptyTextNode.__lyteHelper = node;
            if(options.type !== "default") {   
                lastNode._placeHolder.parentNode.insertBefore(emptyTextNode, lastNode._placeHolder)
            }  	
        }
    return ret; 
}
    _LC.core._constructor.prototype.updateSwitchHelper = function(type,node, contextSwitchInfo, update, establishBindings){
        var ret = _LC.core.updateSwitchHelper.call(this,type,node, contextSwitchInfo, update, establishBindings);
        if(node.tagName !== "TEMPLATE") {
            node  = node._origTemplate;
        }
        node._placeHolder.__lytehelper = node._placeHolder._helper;
        node._placeHolder._actTemplate = node;
        node._caseContent.forEach(function(item) {		
            item.__lyteHelper = node;		
        })
        return ret;
    }

_LC.modifyTemplate = function(componentName,template,intelligenceObj){
    if(_LC._reRegisteredComponents.indexOf(componentName) == -1){
        _LC._reRegisteredComponents.push(componentName);
    }
    if(_LyteComponent.registeredComponents[componentName]) {
        var comp = _LC._registeredComponents[componentName];
        if(comp.activeInstances > 0) {
            console.warn("There are active instances of the component " + componentName + " and hence cannot be unregistered");
        }
        else{
            if(Lyte.Compile.getDynamicNodes) {
                var returnVal = Lyte.Compile.getDynamicNodes(componentName, undefined, template, intelligenceObj);
                if(returnVal.errors){
                    console.error("Error in the component",returnVal.componentName,returnVal.errors);
                    return false;
                }else{  
                    var docTemplate = _LC.lyteComponentsDiv.querySelector("template[tag-name="+componentName+ "]")
                    if(docTemplate) {
                        var docTemplateCopy = Array.from(_LC.lyteComponentsDiv.querySelectorAll("template[tag-name="+componentName+ "]"));
                        // Array.from(document.querySelectorAll("template[tag-name="+componentName+ "]")).forEach(el => el.remove());	
                        docTemplateCopy.forEach(function(el){
                            el.remove()
                        });
                    }
                    if(comp._depthTemp) {
                        comp._depthTemp.remove();    
                    }
                    comp._depthTemp = document.createElement("template");
                    comp.originalDef._template =returnVal.template;
                    comp.originalDef._dynamicNodes = returnVal.dynamicNodes;
                    comp.originalDef._templateAttributes = returnVal._templateAttributes;
                    if(Lyte.getConfig("lazyComponentRegister")){
                        var lazyScheduler = Lyte.Component.lazyRegisterScheduler;
                        if(lazyScheduler.currentTask && lazyScheduler.currentTask.id === componentName){
                            Lyte.Component.lazyRegisterScheduler.currentTask.addEventListener("done", function(){
                                _LC.registerComponent(componentName,comp.originalDef,comp.originalOpt);
                            });
                        }
                        else{
                            _LC.registerComponent(componentName,comp.originalDef,comp.originalOpt);
                        }
                    }
                    else{
                        _LC.registerComponent(componentName,comp.originalDef,comp.originalOpt)
                    }
                    return returnVal;
                }
            }
        }
    }
    else{
    console.warn(componentName , "is not registered");
    }
}
Lyte.Component.modifyTemplate = _LC.modifyTemplate;
// _LC.core._constructor._registerComponent = function(a,b){
//     if(_LC._reRegisteredComponents.indexOf(a) != -1){
//         this.component._template = JSON.parse(b.component._template);
//     }
//     if(Lyte.getConfig("lazyComponentRegister")){
//         if(_LC._reRegisteredComponents.indexOf(a) != -1){
//             _LC._reRegisteredComponents.splice(_LC._reRegisteredComponents.indexOf(a),1);
//         }
//     }
//     _LC.core._registerComponent.call(this,a,b);
// }
_LC.registerComponent = function(componentName, definition, options, widget, classDef){
    var def = Lyte.deepCopyObject(definition);
    var originalOpt;
    if(options && options.mixins){
        originalOpt = Lyte.deepCopyObject(options);
    }
    _LC.core.registerComponent.call(this,componentName, definition, options, widget, classDef);
    _LC._registeredComponents[componentName].originalDef = def;
    _LC._registeredComponents[componentName].originalOpt = originalOpt;
    if(!Lyte.getConfig("lazyComponentRegister")){
        if(_LC._reRegisteredComponents.indexOf(componentName) != -1){
            _LC._reRegisteredComponents.splice(_LC._reRegisteredComponents.indexOf(componentName),1);
        }        
    }
}


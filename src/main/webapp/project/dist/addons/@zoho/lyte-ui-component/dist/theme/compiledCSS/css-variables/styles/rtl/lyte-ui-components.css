/* Default theme imported */
/*	Icon Colors */
/* Loading theme in configuration */
/* Themes of components */
/* Loading custom themes */
/* import theme overrides */
/* import custom css */
/* UI Components' variables are prefixed with lyte except for global variables

Eg: lyteDropdownPadding

*/
/* Import Component Variables */
.lytecol-yield {
  display: block;
  width: 100%;
  height: 100%;
}
.lyterow-yield {
  overflow: hidden;
}
/* Loading theme in configuration */
/* rtl files loading */
.lyteTextEllipsisNode,
.lyteTextWrapper,
lyte-text {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
}
lyte-text {
  max-width: 100%;
}
lyte-text::after {
  content: '';
  display: block ;
}
.lyteTextNoSpace {
  display: inline-flex;
}
.lyteTextWrapper {
  vertical-align: text-bottom;
}
.lyteTextSuffix {
  vertical-align: text-bottom;
  display: inline-block;
  pointer-events: none;
}
.lyteTextNoSpace .lyteTextSuffix {
  margin-left: 3px;
}
.lyteTextSuffix > span {
  pointer-events: all;
}
.lyteTextIndividual:last-child .lyteTextComma {
  display: none;
}
.lyteTextRenderDiv {
  position: absolute;
  z-index: -1;
  opacity: 0;
  overflow: hidden;
}
.lyteTextIndividual {
  display: flex;
}
.lyteTextComma {
  white-space: pre;
}
.lyteTextTagWrapper {
  display: inline-flex;
}
.lyteTextNoSpace .lyteTextTagWrapper {
  overflow: hidden;
}
.lyteTextTagElement {
  background: #f1f1f1;
  color: var(--lyte-common-text-color);
  padding: 2px 8px;
  border-radius: 2px;
  margin-left: 5px;
  border: 1px solid #e8e8e8;
}
.lyteTextWithMultipleLineContent {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
  white-space: normal;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* Make changes to override predefined styles */
lyte-accordion {
  display: block;
  position: relative;
}
lyte-accordion-item {
  margin: 3px;
  border-bottom: 1px solid var(--lyte-accordion-border-color);
  display: block;
  background: var(--lyte-accordion-bg);
}
lyte-accordion-item:hover {
  border-bottom-color: var(--lyte-accordion-hover-border-color);
}
.lyteAccordionNested lyte-accordion:last-child lyte-accordion-item:last-child {
  border-bottom: 0;
}
.lyteAccordionNested .lyteAccordionActive lyte-accordion-header,
lyte-accordion-header {
  padding: 15px 15px 10px;
  font-family: var(--lyte-primary-font);
  color: var(--lyte-accordion-header-text-color);
  font-size: var(--lyte-accordion-header-font-size);
  text-align: right;
  outline: 0;
  position: relative;
  display: block;
  cursor: pointer;
}
.lyteAccordionNested .lyteAccordionActive lyte-accordion-header:hover,
lyte-accordion-header:hover {
  color: var(--lyte-accordion-header-hover-text-color);
}
.lyteAccordionActive {
  border-bottom-color: var(--lyte-accordion-active-border-color);
}
.lyteAccordionNested .lyteAccordionActive > lyte-accordion-header:hover,
.lyteAccordionNested .lyteAccordionActive > lyte-accordion-header,
.lyteAccordionActive lyte-accordion-header {
  color: var(--lyte-accordion-header-active-text-color);
}
lyte-accordion-body {
  width: 400px;
  padding: 0 15px;
  color: var(--lyte-accordion-color);
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-accordion-body-font-size);
  text-align: right;
  display: block;
  overflow: hidden;
  transition: height ease-out 0.3s, padding ease-out 0.3s;
}
.lyteAccordionNested lyte-accordion-body {
  width: 100%;
  box-sizing: border-box;
}
.lyteAccordionNested .lyteAccordionActive lyte-accordion-body {
  padding-bottom: 0;
}
.lyteAccordionNested .lyteAccordionActive > lyte-accordion-body,
.lyteAccordionActive lyte-accordion-body {
  padding-bottom: 10px;
}
.lyteAccordionNested .lyteAccordionActive lyte-icon.lyteAccordionArrow,
lyte-icon.lyteAccordionArrow {
  background-image: var(--lyte-sprite-image);
  background-position: -42px 0;
  width: 6px;
  height: 10px;
  position: absolute;
  right: 0;
  margin-top: 7px;
  display: inline-block;
  transform: rotate(180deg);
}
.lyteAccordionNested .lyteAccordionActive > lyte-accordion-header lyte-icon.lyteAccordionArrow,
.lyteAccordionActive lyte-icon.lyteAccordionArrow {
  background-position: -28px 0px;
  width: 9px;
  height: 7px;
  transform: rotate(0deg);
}
.lyteAccordionBodyHide {
  display: none;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/accordion.less file
 */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* Make changes to override predefined styles */
.lyte-svg {
  background-image: var(--lyte-sprite-image);
}
lyte-alert {
  display: none;
}
.alertWrapper {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  text-align: center;
  z-index: var(--lyte-alert-popup-zindex);
}
.alertPopup {
  padding: 20px 25px 25px;
  background: var(--lyte-alert-popup-bg);
  border: 1px solid var(--lyte-alert-popup-border-color);
  border-radius: 3px;
  box-shadow: 0px 2px 15px 0px var(--lyte-alert-popup-boxshadow-color);
  display: inline-block;
  text-align: right;
  min-width: 350px;
  max-width: 550px;
  transition-duration: 0.3s;
  transition-timing-function: ease-out;
  position: relative;
  z-index: 10;
}
.alertPopup.lyteAlertSlideDown {
  top: -100%;
  transition-property: top;
}
.alertPopup.lyteAlertZoomIn {
  transition-property: opacity, transform;
  opacity: 0;
  transform: scale(0);
}
.alertPopup.lyteAlertZoomIn.alertOpened {
  opacity: 1;
  transform: scale(1);
}
lyte-alert-header,
.alertHeader,
.alertPrimaryMsg {
  font-family: var(--lyte-secondary-font);
  font-size: var(--lyte-alert-header-font-size);
  color: var(--lyte-alert-popup-header-color);
  margin-bottom: 15px;
  font-weight: normal;
  display: block;
  word-break: break-word;
  overflow-wrap: anywhere;
}
.alertPrimaryMsg {
  margin-bottom: 5px;
  font-size: var(--lyte-alert-primarymsg-font-size);
}
lyte-alert-content,
.alertSecondaryMsg {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-alert-secondarymsg-font-size);
  color: var(--lyte-alert-popup-content-color);
}
lyte-alert-footer,
.alertFooter {
  text-align: left;
  padding-top: 25px;
  display: block;
}
.alertFooter lyte-button {
  margin-right: 7px;
}
.alertFooter lyte-button:first-of-type {
  margin-right: 0;
}
lyte-alert-footer.left,
.alertFooter.left {
  text-align: right;
}
lyte-alert-footer.center,
.alertFooter.center,
.alertPopup.lyteAlertCenterContent {
  text-align: center;
}
.alertPopup .alertContent {
  display: flex;
  align-items: center;
}
.lyteAlertCenterContent .alertContent {
  justify-content: center;
}
.alertFreezeLayer {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 5;
  background: var(--lyte-alert-freeze-bg);
  opacity: 0;
}
.lyteStatusIcon {
  background: var(--lyte-sprite-image);
  width: 28px;
  height: 28px;
  margin-left: 10px;
  display: block;
}
.successAlertIcon {
  background-position: var(--lyte-alert-success-icon-position);
}
.errorAlertIcon {
  background-position: var(--lyte-alert-error-icon-position);
}
.warningAlertIcon {
  background-position: var(--lyte-alert-warning-icon-position);
}
.infoAlertIcon {
  background-position: var(--lyte-alert-info-icon-position);
}
.confirmAlertIcon {
  background-position: var(--lyte-alert-confirm-icon-position);
}
.alertClose {
  background-position: -52px 0px;
  width: 13px;
  height: 13px;
  opacity: 0.5;
  cursor: pointer;
  position: absolute;
  top: 27px;
  left: 23px;
  display: inline-block;
  transform: scale(1.3);
}
.alertClose:hover {
  opacity: 1;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/alert.less file
 */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* Make changes to override predefined styles */
/* BUTTON STYLES BEGINS   */
lyte-button {
  display: inline-block;
}
lyte-button button {
  border-radius: var(--lyte-button-border-radius);
  font-size: var(--lyte-button-font-size);
  padding: 5px 15px;
  font-family: var(--lyte-primary-font);
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  border-width: var(--lyte-button-border-width);
  border-style: var(--lyte-button-border-style);
}
lyte-button button:disabled {
  opacity: 0.5;
  pointer-events: none;
}
/*Specific type*/
.lyteDefaultBtn {
  background: var(--lyte-button-default-bg);
  color: var(--lyte-button-default-text-color);
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) var(--lyte-button-default-border-color);
}
.lyteDefaultBtn:hover {
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) var(--lyte-button-default-hover-border-color);
}
.lytePrimaryBtn {
  background: var(--lyte-button-primary-bg);
  color: var(--lyte-button-primary-text-color);
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) var(--lyte-button-primary-border-color);
}
.lytePrimaryBtn:hover {
  background: var(--lyte-button-primary-hover-bg);
  color: var(--lyte-button-primary-hover-text-color);
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) var(--lyte-button-primary-hover-border-color);
}
.lyte-button.lyteSecondary {
  background: var(--lyte-button-secondary-bg);
  color: var(--lyte-button-secondary-text-color);
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) var(--lyte-button-secondary-border-color);
}
.lyte-button.lyteSecondary:hover {
  background: var(--lyte-button-secondary-hover-bg);
  color: var(--lyte-button-secondary-hover-color);
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) var(--lyte-button-secondary-hover-border-color);
}
.lyteSuccess {
  background: var(--lyte-button-success-bg);
  color: var(--lyte-button-success-text-color);
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) var(--lyte-button-success-border-color);
}
.lyteSuccess:hover {
  background: var(--lyte-button-success-hover-bg);
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) var(--lyte-button-success-hover-border-color);
}
.lyteDefaultBtn.lyteSuccess {
  background: var(--lyte-button-outline-success-bg);
  color: var(--lyte-button-outline-success-text-color);
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) var(--lyte-button-outline-success-border-color);
}
.lyteDefaultBtn.lyteSuccess:hover {
  background: var(--lyte-button-outline-success-hover-bg);
  color: var(--lyte-button-outline-success-hover-text-color);
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) var(--lyte-button-outline-success-hover-border-color);
}
.lyteFailure {
  background: var(--lyte-button-failure-bg);
  color: var(--lyte-button-failure-text-color);
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) var(--lyte-button-failure-border-color);
}
.lyteFailure:hover {
  background: var(--lyte-button-failure-hover-bg);
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) var(--lyte-button-failure-hover-border-color);
}
.lyteDefaultBtn.lyteFailure {
  background: var(--lyte-button-outline-failure-bg);
  color: var(--lyte-button-outline-failure-text-color);
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) var(--lyte-button-outline-failure-border-color);
}
.lyteDefaultBtn.lyteFailure:hover {
  background: var(--lyte-button-outline-failure-hover-bg);
  color: var(--lyte-button-outline-failure-hover-text-color);
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) var(--lyte-button-outline-failure-hover-border-color);
}
.lyteWarningBtn {
  background: #FF9318;
  color: #fff;
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) #FF9318;
}
.lyteWarningBtn:hover {
  background: #FF8800;
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) #FF8800;
}
.lyteDefaultBtn.lyteWarningBtn {
  background: #fff;
  color: #FF9318;
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) #FF9318;
}
.lyteDefaultBtn.lyteWarningBtn:hover {
  background: #FF9318;
  color: #fff;
  border: var(--lyte-button-border-width) var(--lyte-button-border-style) #FF9318;
}
.lyteLg {
  padding: 7px 20px;
  font-size: var(--lyte-button-lg-font-size);
}
.lyteSm {
  padding: 3px 10px;
  font-size: var(--lyte-button-sm-font-size);
}
.lyteExsm {
  padding: 2px 8px;
  font-size: var(--lyte-button-exsm-font-size);
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/button.less file
 */
/* BUTTON STYLES ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/*  Input related CSS BEGINS    */
lyte-input {
  position: relative;
  display: inline-flex;
  font-family: var(--lyte-primary-font);
}
lyte-input .lyteLabel {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-input-font-size);
  padding-left: 30px;
  color: var(--lyte-input-label-text-color);
  flex-grow: 1;
}
lyte-input .lyteField {
  flex-grow: 1;
}
lyte-input input,
lyte-input textarea {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-input-font-size);
  color: var(--lyte-input-text-color);
  outline: none;
  box-sizing: border-box;
}
.lyteInputBox .lyteField {
  border: 1px solid var(--lyte-input-border-color);
  border-radius: var(--lyte-input-border-radius);
}
.lyteInputBox input,
lyte-input textarea {
  background: var(--lyte-input-bg);
  border: 0;
  border-radius: var(--lyte-input-border-radius);
  padding: 7px 10px;
  width: 100%;
  display: block;
  box-shadow: none;
}
lyte-input input:disabled {
  background: var(--lyte-input-disabled-bg);
  cursor: not-allowed;
  color: var(--lyte-input-disabled-text-color);
}
.lyteInputWithPasswordToggleButton .lyteField,
lyte-input .ltIconShow.lyteField,
lyte-input[lt-prop-type="search"] .lyteField {
  position: relative;
}
lyte-input[lt-prop-type="textarea"] .lyteField {
  position: relative;
  overflow: hidden;
}
lyte-input textarea {
  min-height: 70px;
  resize: both;
}
lyte-input[lt-prop-type="textarea"] .lyteField::after {
  content: '';
  width: 17px;
  height: 17px;
  background: var(--lyte-input-bg);
  position: absolute;
  left: 0;
  bottom: 0;
  z-index: 5;
  border-radius: 0 0 0 2px;
  -webkit-clip-path: polygon(100% 0, 100% 100%, 0 100%);
  clip-path: polygon(100% 0, 100% 100%, 0 100%);
}
lyte-input.lyteTextareaNoResize .lyteField::after {
  content: none;
}
.lyteTextareaNoResize textarea {
  resize: none;
}
.lyteInputBox .lyteField:hover {
  border: 1px solid var(--lyte-input-hover-border-color);
}
.lyteInputBox.lyteInputFocus .lyteField {
  border: 1px solid var(--lyte-input-focus-border-color);
}
.lyteInputBox input:hover,
lyte-input textarea:hover {
  border: 0;
}
.lyteInputBox input:focus,
lyte-input textarea:focus {
  border: 0;
}
.lyteTextareaResize {
  background-image: var(--lyte-sprite-image);
  background-position: -267px -4px;
  width: 13px;
  height: 13px;
  left: 1px;
  bottom: 1px;
  display: inline-block;
  position: absolute;
  cursor: sw-resize;
  opacity: 0.5;
  z-index: 10;
  transform: rotate(90deg);
}
.lyteTextareaResizeHorizontal {
  cursor: ew-resize;
}
.lyteTextareaResizeVertical {
  cursor: ns-resize;
}
.lyteInputBox.lyteInputDisabled .lyteField:hover {
  border: 1px solid var(--lyte-input-border-color);
}
lyte-input input::placeholder {
  font-family: var(--lyte-primary-font);
  color: var(--lyte-input-placeholder-text-color);
}
lyte-input input:-ms-input-placeholder {
  font-family: var(--lyte-primary-font);
  color: var(--lyte-input-placeholder-text-color);
}
lyte-input input::-ms-input-placeholder {
  font-family: var(--lyte-primary-font);
  color: var(--lyte-input-placeholder-text-color);
}
lyte-input input::-ms-clear {
  display: none;
}
lyte-input textarea::placeholder {
  font-family: var(--lyte-primary-font);
  color: var(--lyte-input-placeholder-text-color);
}
lyte-input textarea:-ms-input-placeholder {
  font-family: var(--lyte-primary-font);
  color: var(--lyte-input-placeholder-text-color);
}
lyte-input textarea::-ms-input-placeholder {
  font-family: var(--lyte-primary-font);
  color: var(--lyte-input-placeholder-text-color);
}
.lyteInputBox.horizontal {
  align-items: center;
}
.lyteInput.horizontal {
  align-items: flex-end;
}
lyte-input.horizontal .lyteLabel {
  min-width: 40%;
  width: 40%;
  box-sizing: border-box;
}
lyte-input.horizontal .lyteField {
  min-width: 60%;
  width: 60%;
}
lyte-input input[type='number']::-webkit-outer-spin-button,
lyte-input input[type='number']::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
lyte-input input[type='number'] {
  -moz-appearance: textfield;
}
.lyteInput .lyteField {
  border-bottom: 1px solid var(--lyte-input-border-color);
}
.lyteInput input {
  background: var(--lyte-input-bg);
  border: 0;
  padding: 6px 10px;
  box-shadow: none;
  width: 100%;
}
.lyteInput.horizontal .lyteLabel {
  border-bottom: 1px solid var(--lyte-input-border-color);
  padding: 5px 10px 5px 50px;
}
.lyteInput .lyteField:hover {
  border-bottom: 1px solid var(--lyte-input-hover-border-color);
}
.lyteInput.lyteInputDisabled .lyteField:hover {
  border-bottom: 1px solid var(--lyte-input-border-color);
}
.lyteInput.lyteInputFocus .lyteField {
  border-bottom: 1px solid var(--lyte-input-focus-border-color);
}
lyte-input.vertical {
  flex-direction: column;
  text-align: right;
}
lyte-input.vertical .lyteLabel {
  padding-left: 0;
  margin-bottom: 10px;
}
.lyteInput.vertical .lyteLabel {
  padding: 0;
  margin-bottom: 0;
  border-bottom: 0;
}
.lyteInput.vertical textarea,
.lyteInput.vertical input {
  padding-right: 0;
}
.lyteInput.vertical[lt-prop-type="search"] input,
lyte-input[lt-prop-type="search"] input {
  padding-right: 35px;
}
lyte-input[lt-prop-type="search"] .searchIcon {
  position: absolute;
  background-image: var(--lyte-sprite-image);
  background-position: -180px -4px;
  width: 15px;
  height: 15px;
  right: 10px;
  top: calc(50% - 8px);
  opacity: 0.6;
  margin: 0;
  pointer-events: none;
}
.lyteInputWithClearIcon input,
lyte-input[lt-prop-close-icon="true"] input {
  padding-left: 30px;
}
lyte-input .inputCloseIcon {
  position: absolute;
  cursor: pointer;
  padding: 8px;
  z-index: 10;
  opacity: 0.7;
  top: calc(50% - 12px);
  left: 4px;
}
lyte-input .inputCloseIcon:hover {
  opacity: 1;
}
lyte-input .inputCloseIcon::before {
  content: '';
  display: block;
  background-image: var(--lyte-sprite-image);
  background-position: -54px -2px;
  width: 8px;
  height: 8px;
  transform: scale(1.25);
}
lyte-input.lyteInputDisabled .inputCloseIcon {
  pointer-events: none;
}
lyte-input.lyteInputReadonly .inputCloseIcon {
  display: none !important;
}
.lyteInputCalendar {
  position: absolute;
  z-index: var(--lyte-calendar-zindex);
  top: -999px;
}
lyte-input[lt-prop-type="datetime"] .lyteField {
  display: flex;
}
lyte-input[lt-prop-type="datetime"] .lyteField input {
  width: 50%;
}
.lyteInputBox[lt-prop-type="datetime"] input:first-child {
  border-radius: 0 var(--lyte-input-border-radius) var(--lyte-input-border-radius) 0;
  border-left: 1px solid var(--lyte-input-border-color);
}
.lyteInputDateTimePlaceholder {
  display: flex;
  position: absolute;
  left: 1px;
  right: 1px;
  top: 1px;
  bottom: 1px;
  font-size: var(--lyte-input-datetime-placeholder-font-size);
  color: var(--lyte-input-placeholder-text-color);
  align-items: center;
  pointer-events: none;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  padding: 9px 10px;
  background: var(--lyte-input-bg);
}
.lyteInputFocus .lyteInputDateTimePlaceholder {
  opacity: 0;
}
.lyteInputWithPasswordToggleButton.lyteInputBox input,
.lyteInputWithPasswordToggleButton.lyteInput input {
  padding-left: 25px;
}
.lyteInputWithPasswordToggleButton.lyteInputWithClearIcon input,
.lyteInputWithPasswordToggleButton.lyteInputBox[lt-prop-close-icon="true"] input,
.lyteInputWithPasswordToggleButton.lyteInput[lt-prop-close-icon="true"] input {
  padding-left: 50px;
}
.lyteInputWithPasswordToggleButton .inputCloseIcon {
  left: 26px;
}
.lyteInputPasswordToggleIcon {
  padding: 5px;
  position: absolute;
  left: 0;
  top: calc(50%);
  transform: translateY(-50%);
  cursor: pointer;
}
.lyteInputPasswordToggleIcon::after {
  content: '';
  background-image: var(--lyte-sprite-image);
  width: 16px;
  opacity: 0.7;
  display: block;
}
.lyteInputPasswordToggleIcon:hover::after {
  opacity: 1;
}
.lyteInputShowPasswordIcon::after {
  height: 12px;
  background-position: -212px -63px;
}
.lyteInputHidePasswordIcon::after {
  height: 16px;
  background-position: -238px -61px;
}
.lyteInputCalendarIcon {
  -webkit-mask-image: var(--lyte-defaultTheme-sprite-image);
  mask-image: var(--lyte-defaultTheme-sprite-image);
  -webkit-mask-position: -224px -81px;
  mask-position: -224px -81px;
  background-color: var(--lyte-input-calendar-icon-color);
  width: 16px;
  height: 17px;
  display: block;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  cursor: pointer;
}
.lyteInputWithCalendarIcon[lt-prop-type="datetime"] input:first-child,
.lyteInputWithCalendarIcon[lt-prop-type="date"] input {
  padding-left: 30px;
}
.lyteInputCalendarIcon:hover {
  background-color: var(--lyte-input-calendar-icon-hover-color);
}
.calendarOpen .lyteInputCalendarIcon,
.lyteInputCalendarIcon:focus {
  outline: 0;
  background-color: var(--lyte-input-calendar-icon-focus-color);
}
.lyteInput .lyteInputCalendarIcon {
  left: 0;
}
.lyteInputBox .lyteInputCalendarIcon {
  left: 10px;
}
lyte-input[lt-prop-type="datetime"] .lyteInputCalendarIcon {
  right: unset;
  left: calc(50% - 10px);
  transform: translate(100%, -50%);
}
.lyteInputTimeDropdown,
.lyteInputDateTimeDropdown {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  visibility: hidden;
  pointer-events: none;
  z-index: -1;
}
.lyteInputDateTimeDropdown {
  right: 50%;
}
.lyteInputDisabled.resizeStart textarea {
  pointer-events: none;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/input .less file
 */
/*  Input related CSS ENDS    */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-image-player {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  min-height: 200px;
}
lyte-image-player.lyteFullScreenElement {
  display: flex !important;
}
lyte-image-item {
  overflow: auto;
}
lyte-image-item img {
  width: 100%;
  display: block;
}
.lyteImagePlayerSlider {
  flex-grow: 1;
  height: 3px;
  background: #dee2ed;
  position: relative;
  outline: none;
  border-radius: 10px;
  cursor: pointer;
  transition: 0.1s ease;
}
.lyteImagePlayerSlider:hover {
  height: 7px;
}
.lyteImagePlayerFill {
  --lyte-image-player-fill-width: 0;
  height: 100%;
  background: #5ba1e5;
  border-radius: 10px;
  transition-property: width;
  transition-timing-function: linear;
  width: var(--lyte-image-player-fill-width);
}
.lyteImagePlayerControl {
  display: flex;
  align-items: center;
  position: relative;
  /* background: linear-gradient(to bottom, rgba(0, 0, 0, 0), #797979); */
  background-color: #666;
  padding: 10px;
  font-size: 12px;
  color: #fff;
  gap: 10px;
}
.lyteImagePlayerHighlight {
  position: absolute;
  display: inline-block;
  width: 5px;
  height: 15px;
  border: 3px solid red;
  border-top: none;
  border-bottom: none;
  left: var(--lyte-image-player-highlight-position);
}
.lyteImagePlayerSliderHandler {
  --lyte-image-player-slider-handler-position: 0;
  width: 8px;
  height: 8px;
  top: 50%;
  background: #fff;
  cursor: pointer;
  position: absolute;
  transform: translateX(-50%) translateY(-50%);
  border-radius: 50%;
  transition-property: left,right;
  transition-timing-function: linear;
  left: var(--lyte-image-player-slider-handler-position);
  outline: none;
}
.lyteImagePlayerSlider:hover .lyteImagePlayerSliderHandler {
  width: 16px;
  height: 16px;
}
.lyteImagePlayerPlayIcon {
  border: 0;
  background-color: transparent;
  cursor: pointer;
  padding: 0 3px;
}
.lyteImagePlayerPlayIcon::after {
  content: "";
  -webkit-mask-image: var(--lyte-video-sprite);
  -webkit-mask-position: -210px -5px;
  mask-image: var(--lyte-video-sprite);
  mask-position: -210px -5px;
  width: 14px;
  height: 19px;
  background-color: #fff;
  display: block;
}
.lyteImagePlayerFinished .lyteImagePlayerPlayIcon::after,
.lyteImagePlayerPaused .lyteImagePlayerPlayIcon::after {
  mask-position: -186px -4px;
}
lyte-image-player lyte-loader,
.lytePlayerImageLoaded .lyteImagePlayerControl {
  display: none;
}
lyte-image-player.lytePlayerImageLoading lyte-loader,
lyte-image-player.lytePlayerImageLoading,
.lyteImagePlayerFinished .lyteImagePlayerControl,
.lyteImagePlayerPaused .lyteImagePlayerControl,
.lytePlayerImageLoaded:hover .lyteImagePlayerControl {
  display: flex;
}
lyte-image-player .lyteLoaderFreeze {
  background-color: #444;
}
lyte-image-player .lyteLoaderTimeoutMessage {
  color: #eee;
}
.lyteImagePlayerFullscreen {
  -webkit-mask-image: var(--lyte-video-sprite);
  -webkit-mask-position: -33px -6px;
  mask-image: var(--lyte-video-sprite);
  mask-position: -33px -6px;
  background-color: #fff;
  border: 0;
  width: 19px;
  height: 18px;
  cursor: pointer;
}
:fullscreen .lyteImagePlayerFullscreen {
  -webkit-mask-position: -59px -5px;
  mask-position: -59px -5px;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-datetime-input {
  display: inline-block;
}
.lyteDateTimeInputWrapper {
  display: flex;
  position: relative;
}
.lyteDateTimeInputBox .lyteDateTimeInputWrapper {
  border: 1px solid var(--lyte-datetime-input-border-color);
  border-radius: var(--lyte-datetime-input-border-radius);
  align-items: center;
}
.lyteDateTimeInputBox:hover .lyteDateTimeInputWrapper {
  border: 1px solid var(--lyte-datetime-input-hover-border-color);
}
.lyteDateInputOpened.lyteDateTimeInputBox .lyteDateTimeInputWrapper,
.lyteDateInputFocused.lyteDateTimeInputBox .lyteDateTimeInputWrapper {
  border: 1px solid var(--lyte-datetime-input-focus-border-color);
}
.lyteDateTimeInputBox .lyteDateTimeInputWrapper > input {
  border-left: 1px solid var(--lyte-datetime-input-border-color);
  border-radius: var(--lyte-datetime-input-border-radius) 0 0 var(--lyte-datetime-input-border-radius);
}
.lyteDateTimeInputBox .lyteDateTimeInputWrapper > div input {
  border-radius: 0 var(--lyte-datetime-input-border-radius) var(--lyte-datetime-input-border-radius) 0;
}
.lyteDateTimeInputFlat .lyteDateTimeInputWrapper {
  border-bottom: 1px solid var(--lyte-datetime-input-border-color);
  align-items: flex-end;
}
.lyteDateTimeInputFlat:hover .lyteDateTimeInputWrapper {
  border-bottom: 1px solid var(--lyte-datetime-input-hover-border-color);
}
.lyteDateInputOpened.lyteDateTimeInputFlat .lyteDateTimeInputWrapper,
.lyteDateInputFocused.lyteDateTimeInputFlat .lyteDateTimeInputWrapper {
  border-bottom: 1px solid var(--lyte-datetime-input-focus-border-color);
}
.lyteDateTimeInputWrapper input {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-datetime-input-font-size);
  background: var(--lyte-datetime-input-bg);
  color: var(--lyte-datetime-input-text-color);
  border: 0;
  box-shadow: none;
  outline: 0;
}
.lyteDateTimeInputBox input {
  padding: 9px 10px;
}
.lyteDateTimeInputFlat input {
  padding: 9px 0;
}
.lyteDateTimeInputWrapper lyte-drop-button {
  padding: 0;
}
.lyteDateTimeInputWrapper .lyteDummyEventContainer:focus lyte-drop-button,
.lyteDateTimeInputWrapper .lyteDummyEventContainer:focus lyte-drop-button:hover,
.lyteDateTimeInputWrapper lyte-drop-button:hover,
.lyteDateTimeInputWrapper lyte-drop-button {
  border: 0;
  box-shadow: none;
}
.lyteDateTimeInputWormhole {
  position: absolute;
  left: -9999px;
  top: -9999px;
  z-index: var(--lyte-calendar-zindex);
}
.lyteDateTimeInputHidden {
  display: none;
}
.lyteDateTimezone {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  padding: 0 5px;
  color: var(--lyte-datetime-input-text-color);
}
.lyteDateInputCalendarIcon {
  -webkit-mask: var(--lyte-sprite-image) no-repeat -224px -81px;
  mask: var(--lyte-sprite-image) no-repeat -224px -81px;
  width: 16px;
  height: 17px;
  background-color: #585858;
  position: absolute;
  right: calc(50% - 25px);
  cursor: pointer;
}
.lyteDateTimeInputBox[lt-prop-aria="true"] .lyteDateTimeInputWrapper > input {
  padding-left: 30px;
  width: 50%;
  box-sizing: border-box;
}
[lt-prop-aria="true"] .lyteDateTimeInputWrapper div {
  width: 50%;
}
.lyteDateTimeInputFlat[lt-prop-aria="true"] .lyteDateInputCalendarIcon {
  bottom: 10px;
}
.lyteDateInputCalendarIcon:hover {
  background-color: #333;
}
.lyteDateInputOpened .lyteDateInputCalendarIcon,
.lyteDateInputFocused .lyteDateInputCalendarIcon {
  outline: 0;
  background-color: var(--lyte-theme-active-element-bg);
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-number {
  position: relative;
  display: inline-flex;
  font-family: var(--lyte-primary-font);
}
lyte-number .lyteLabel {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-number-font-size);
  padding-left: 30px;
  color: var(--lyte-number-label-text-color);
  flex-grow: 1;
}
lyte-number .lyteField {
  flex-grow: 1;
  display: flex;
}
lyte-number input {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-number-font-size);
  color: var(--lyte-number-input-text-color);
  outline: none;
  box-sizing: border-box;
}
lyte-number input:disabled {
  background: var(--lyte-number-disabled-bg);
  cursor: not-allowed;
  color: var(--lyte-number-disabled-text-color);
}
lyte-number input::placeholder {
  font-family: var(--lyte-primary-font);
  color: var(--lyte-number-placeholder-text-color);
}
lyte-number input:-ms-input-placeholder {
  font-family: var(--lyte-primary-font);
  color: var(--lyte-number-placeholder-text-color);
}
lyte-number input::-ms-input-placeholder {
  font-family: var(--lyte-primary-font);
  color: var(--lyte-number-placeholder-text-color);
}
lyte-number input::-ms-clear {
  display: none;
}
lyte-number.horizontal .lyteLabel {
  min-width: 40%;
  width: 40%;
  box-sizing: border-box;
}
lyte-number.horizontal .lyteField {
  min-width: 60%;
  width: 60%;
}
lyte-number.vertical {
  flex-direction: column;
  text-align: right;
}
lyte-number.vertical .lyteLabel {
  padding-left: 0;
  margin-bottom: 10px;
}
.lyteInputFocus.lyteErrorInput .lyteField,
.lyteErrorInput .lyteField:hover,
.lyteErrorInput .lyteField {
  border-color: #E74C3C;
  position: relative;
}
.lyteErrorInput .lyteField::after {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: -263px -31px;
  width: 16px;
  height: 15px;
  display: block;
  position: absolute;
  left: 10px;
  top: 50%;
  transform: translateY(-50%);
}
.lyteErrorInput input {
  padding-left: 35px;
}
.lyteNumberErrorMessage {
  color: #E74C3C;
  font-size: var(--lyte-number-error-msg-font-size);
  margin-top: 5px;
  display: block;
}
.lyteNumberArrowContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-end;
  padding: 0px 15px;
}
.lyteNumberUpArrow,
.lyteNumberDownArrow {
  background-image: var(--lyte-sprite-image);
  width: 8px;
  height: 15px;
  rotate: -90deg;
  scale: 0.7;
  opacity: 0.7;
  cursor: pointer;
}
.lyteNumberUpArrow:hover,
.lyteNumberDownArrow:hover {
  opacity: 1;
}
.lyteNumberUpArrow {
  background-position: -41px -29px;
}
.lyteNumberDownArrow {
  background-position: -58px -29px;
}
.lyteNumberArrowDisabled:hover,
.lyteNumberArrowDisabled {
  opacity: 0.4;
  cursor: not-allowed;
}
.lyteNumberWithArrowKeys.lyteErrorInput .lyteField::after {
  left: 40px;
}
.lyteNumberUnitElem {
  align-self: center;
}
.lyteNumberUnitElem:last-child {
  margin-left: 10px;
}
.lyteNumberSuffix.lyteField {
  align-items: center;
}
.lyteNumberSuffixDummyWrapper {
  position: absolute;
  padding: 7px 10px;
  pointer-events: none;
  right: 1px;
  left: 1px;
  display: flex;
}
.lyteNumberWithArrowKeys .lyteNumberSuffixDummyWrapper {
  left: 39px;
}
.lyteNumberSuffixDummyElem {
  opacity: 0;
  max-width: 100%;
}
.lyteNumberSuffixDummyWrapper .lyteNumberUnitElem {
  margin-right: 5px;
  pointer-events: auto;
  margin-left: 0;
}
.lyteInputFocus .lyteNumberSuffixDummyWrapper {
  display: none;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* Make changes to override predefined styles */
/*  Navbar related CSS BEGINS */
lyte-nav {
  display: flex;
  background: var(--lyte-navbar-bg);
}
lyte-nav-group,
lyte-nav > lyte-yield {
  display: flex;
}
lyte-nav lyte-nav-item {
  padding: 10px 20px;
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-nav-item-font-size);
  color: var(--lyte-navbar-text-color);
  cursor: pointer;
}
lyte-nav lyte-nav-item:hover {
  background: var(--lyte-navbar-hover-bg);
}
lyte-nav-item.lyteNavActive,
lyte-nav-item.lyteNavActive:hover {
  background: var(--lyte-navbar-active);
  color: var(--lyte-navbar-active-text-color);
}
.lyteNavVertical {
  height: 200px;
  overflow: hidden;
  flex-direction: column;
}
.lyteNavVertical > lyte-yield {
  flex-direction: column;
}
.lyteNavDiv {
  display: flex;
  flex-direction: column;
}
lyte-nav lyte-arrow {
  position: relative;
  height: 15px;
  box-shadow: 0 1px 1px 1px var(--lyte-navbar-boxshadow-color);
  -webkit-user-select: none;
  -webkit-touch-callout: none;
}
.lyteNavDiv + lyte-arrow {
  box-shadow: 0 -1px 1px 1px var(--lyte-navbar-boxshadow-color);
}
.arrow-down,
.arrow-up {
  position: absolute;
  width: 0;
  height: 0;
  top: 5px;
  left: calc(50% - 5px);
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-bottom: 5px solid var(--lyte-navbar-triangle-bg);
}
.arrow-down {
  top: 4px;
  border-bottom: 0;
  border-top: 5px solid var(--lyte-navbar-triangle-bg);
}
.lyteNavKebabMenu {
  background-image: var(--lyte-sprite-image);
  background-position: var(--lyte-navbar-threedots-icon-position);
  width: 17px;
  height: 5px;
}
.lyteNavIconContainer {
  display: inline-flex;
  align-items: center;
  padding: 10px 20px;
  cursor: pointer;
}
.lyteNavIconContainer:hover,
.lyteNavIconContainer.lyteMenuSelected {
  background: var(--lyte-navbar-hover-bg);
}
lyte-nav[lt-prop-alignment="vertical"] .lyteNavDivFullHeight.lyteNavDiv {
  height: 100%;
}
.lyteVisuallyHidden {
  position: absolute;
  top: auto;
  overflow: hidden;
  width: 0;
  height: 0;
  white-space: nowrap;
}
lyte-nav-menu-icon {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: 20px;
  height: 20px;
  border-radius: 2px;
  margin-inline-start: 5px;
}
lyte-nav-menu-icon::after {
  content: "";
  -webkit-mask-image: var(--lyte-sprite-image);
  mask-image: var(--lyte-sprite-image);
  -webkit-mask-position: -94px -109px;
  mask-position: -94px -109px;
  background-color: #000;
  width: 9px;
  height: 11px;
  transform: rotate(-90deg);
}
lyte-nav-item.lyteMenuSelected {
  background: #dfeaf5;
}
lyte-nav-item.lyteNavActive.lyteMenuSelected {
  background: #5ba1e5;
}
lyte-nav-menu-icon:hover {
  background: #c4ced7;
}
.lyteMenuSelected lyte-nav-menu-icon {
  background: #5ba1e5;
}
.lyteMenuSelected lyte-nav-menu-icon::after {
  background-color: #fff;
}
lyte-nav-menu-icon:hover::after {
  background-color: #000;
}
.lyteNavActive lyte-nav-menu-icon {
  background: transparent;
}
.lyteNavActive lyte-nav-menu-icon::after {
  background-color: #fff;
}
.lyteNavActive.lyteMenuSelected lyte-nav-menu-icon,
.lyteNavActive lyte-nav-menu-icon:hover {
  background: #4881b8;
}
.lyteNavActive.lyteMenuSelected lyte-nav-menu-icon::after,
.lyteNavActive lyte-nav-menu-icon:hover::after {
  background-color: #fff;
}
.lyteNavHorizontal {
  align-items: center;
}
.lyteNavBento {
  width: 16px;
  height: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  position: relative;
  margin: 0 10px 0 auto;
}
.lyteNavCandyboxIcon {
  width: 15px;
  height: 15px;
  position: absolute;
  background: radial-gradient(circle at 2px 2px, #000 1px, transparent 2px, transparent 5px) 0 0 / 5px 5px;
  opacity: 1;
  transition: 0.6s;
}
.lyteNavCandyboxZIcon {
  position: absolute;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
}
.lyteNavCandyboxZIconPath1,
.lyteNavCandyboxZIconPath2 {
  fill: none;
  stroke: #555;
  stroke-width: 8;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-miterlimit: 10;
  animation: zline0-r 0.5s 0.15s linear forwards;
  transition: opacity 0.5s 0.15s ease-in-out;
  opacity: 0;
}
.lyteNavCandyboxZIconPath1 {
  stroke-dasharray: 600;
}
.lyteNavCandyboxZIconPath2 {
  stroke-dasharray: 300;
}
.lyteNavBento:hover .lyteNavCandyboxIcon {
  transform: scale(0);
  opacity: 0;
}
.lyteNavBento:hover .lyteNavCandyboxZIconPath1 {
  animation: zline0 0.5s 0.15s linear forwards;
  transition: opacity 0.5s 0.15s ease-in-out;
  opacity: 1;
}
.lyteNavBento:hover .lyteNavCandyboxZIconPath2 {
  animation: zline1 0.5s 0.15s linear forwards;
  transition: opacity 0.5s 0.15s ease-in-out;
  opacity: 1;
}
@keyframes zline0 {
  from {
    stroke-dashoffset: -300;
  }
  to {
    stroke-dashoffset: 0;
  }
}
@keyframes zline0-r {
  from {
    stroke-dashoffset: 0;
  }
  to {
    stroke-dashoffset: -300;
  }
}
@keyframes zline1 {
  from {
    stroke-dashoffset: 300;
  }
  to {
    stroke-dashoffset: 0;
  }
}
/* import theme overrides - styles */
/* import custom css */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/nav.less file
 */
/*  Navbar related CSS BEGINS */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* Make changes to override predefined styles */
/*  Checkbox related CSS BEGINS   */
lyte-checkbox {
  color: var(--lyte-chbox-label-text-color);
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-chbox-font-size);
  display: inline-block;
  position: relative;
}
lyte-checkbox label {
  display: inline-block;
  cursor: pointer;
  -ms-user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  user-select: none;
}
lyte-checkbox input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  z-index: -1;
}
.lyteCheckBoxDefault::before {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: -335px -4px;
  width: 14px;
  height: 14px;
  display: inline-block;
  vertical-align: middle;
  margin-left: 5px;
  border-radius: 2px;
}
lyte-checkbox input[type="checkbox"]:active + .lyteCheckBoxDefault::before,
.lyteCheckBoxDefault:hover::before {
  background-position: -359px -4px;
}
lyte-checkbox input[type="checkbox"]:focus + .lyteCheckBoxDefault::before {
  background-position: -359px -4px;
  box-shadow: 0 0 3px 1px #5aaaf9;
}
lyte-checkbox input[type="checkbox"]:disabled + .lyteCheckBoxDefault:hover::before {
  background-position: -335px -4px;
}
lyte-checkbox input[type="checkbox"]:checked:disabled + .lyteCheckBoxDefault:hover::before,
lyte-checkbox input[type="checkbox"]:checked + .lyteCheckBoxDefault::before {
  background-position: -384px -4px;
}
.lyteCheckDisabled label {
  cursor: not-allowed;
}
.lyteCheckBoxPrimary::before {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: var(--lyte-chbox-primary-icon-position);
  width: 14px;
  height: 14px;
  margin-right: 3px;
  display: inline-block;
  vertical-align: middle;
  border-radius: 2px;
  margin-left: 3px;
}
lyte-checkbox input[type="checkbox"]:checked + .lyteCheckBoxPrimary::before {
  background-position: var(--lyte-chbox-primary-checked-icon-position);
  width: 17px;
  margin-right: 0;
}
lyte-checkbox input[type="checkbox"]:focus + .lyteCheckBoxPrimary::before {
  box-shadow: 0 0 3px 1px #b0b0b0;
}
.lyteCheckBoxPrimary span,
.lyteCheckBoxDefault span {
  display: inline-block;
  vertical-align: middle;
  -ms-user-select: auto;
  -moz-user-select: auto;
  -webkit-user-select: auto;
  user-select: auto;
}
lyte-checkbox:hover span {
  color: var(--lyte-chbox-label-hover-text-color);
}
lyte-checkbox[lt-prop-disabled="true"]:hover span {
  color: var(--lyte-chbox-label-text-color);
}
.lyteCheckSwitch {
  vertical-align: middle;
  width: 28px;
  height: 16px;
  display: inline-block;
  border-radius: 10px;
  position: relative;
  background: var(--lyte-chbox-switch-bg);
}
.lyteCheckSwitch .on-btn {
  width: 12px;
  height: 12px;
  background: var(--lyte-chbox-circle-bg);
  display: inline-block;
  border-radius: 50%;
  position: absolute;
  right: 2px;
  top: calc(50% - 6px);
  left: auto;
  transition: right 200ms ease;
}
input[type="checkbox"].on-off-sw:checked + .lyteCheckSwitch {
  background: var(--lyte-chbox-switch-bg-on-mode);
}
input[type="checkbox"].on-off-sw:focus + .lyteCheckSwitch {
  box-shadow: 0 0 5px 2px #d3d3d3;
}
input[type="checkbox"].on-off-sw:checked:focus + .lyteCheckSwitch {
  box-shadow: 0 0 5px 2px #5aaaf9;
}
input[type="checkbox"].on-off-sw:checked + .lyteCheckSwitch .on-btn {
  right: 14px;
}
.lyteCheckSwitch + span {
  vertical-align: middle;
  display: inline-block;
  margin-right: 5px;
}
.lyteCheckSliderLabel {
  box-sizing: border-box;
  position: relative;
}
.lyteCheckSlider {
  position: relative;
  display: inline-flex;
  align-items: center;
  height: 1.4rem;
}
.lyteCheckSlider::before {
  content: '';
  display: inline-block;
  position: absolute;
  z-index: 1;
  width: 1.4rem;
  height: 1.4rem;
  background: var(--lyte-chbox-slider-circle-bg);
  box-shadow: 0 1px 2px 0 var(--lyte-chbox-slider-circle-boxshadow-color), 0 0 0 1px var(--lyte-chbox-slider-circle-boxshadow-color) inset;
  border-radius: 50%;
  right: 0;
  transition: right 200ms ease;
}
input[type="checkbox"]:checked + .lyteCheckSlider::before {
  right: 2.25rem;
}
.lyteCheckSlider::after {
  content: '';
  cursor: pointer;
  display: inline-block;
  position: absolute;
  z-index: 0;
  width: 3.5rem;
  height: 0.2rem;
  background: var(--lyte-chbox-slider-bar-bg);
  top: 0.6rem;
  right: 0;
}
input[type="checkbox"]:checked + .lyteCheckSlider::after {
  background: var(--lyte-chbox-slider-checked-bar-bg);
}
.lyteCheckSliderText {
  padding-right: 4.25rem;
  vertical-align: middle;
}
.lyteCheckDisabled .lyteCheckSlider::after,
.lyteCheckDisabled .lyteCheckSwitch,
.lyteCheckDisabled .lyteCheckBoxDefault::before,
.lyteCheckDisabled .lyteCheckBoxPrimary::before {
  opacity: 0.5;
}
.lyteCheckDisabled .lyteCheckSlider::before {
  background: var(--lyte-chbox-slider-circle-disabled-bg);
}
.lyteCkBoxLabelBiggerCase .lyteCheckbox,
.lyteCkBoxLabelBiggerCase {
  max-width: 100%;
}
.lyteCkBoxLabelBiggerCase .lyteCheckBoxDefault,
.lyteCkBoxLabelBiggerCase .lyteCheckBoxPrimary {
  display: flex;
  max-width: 100%;
}
.lyteCkBoxLabelBiggerCase .lyteCheckBoxDefault::before,
.lyteCkBoxLabelBiggerCase .lyteCheckBoxPrimary::before {
  flex-shrink: 0;
  margin-top: 2px;
}
.lyteCkBoxLabelBiggerCase .lyteCheckBoxDefault span,
.lyteCkBoxLabelBiggerCase .lyteCheckBoxPrimary span {
  overflow: auto;
  overflow-wrap: break-word;
  white-space: normal;
  margin-right: 5px;
}
.lyteCheckboxLabelEllipsis .lyteCheckbox,
.lyteCheckboxLabelEllipsis {
  max-width: 100%;
}
.lyteCheckboxLabelEllipsis .lyteCheckBoxDefault,
.lyteCheckboxLabelEllipsis .lyteCheckBoxPrimary {
  display: flex;
  align-items: center;
}
.lyteCheckboxLabelEllipsis .lyteCheckBoxDefault::before,
.lyteCheckboxLabelEllipsis .lyteCheckBoxPrimary::before {
  flex-shrink: 0;
}
.lyteCheckboxLabelEllipsis .lyteCheckBoxPrimary::before {
  margin-right: 5px;
}
lyte-checkbox.lyteCheckboxLabelEllipsis input[type="checkbox"]:checked + .lyteCheckBoxPrimary::before {
  margin-right: 2px;
}
.lyteCheckboxLabelEllipsis .lyteCheckBoxDefault span,
.lyteCheckboxLabelEllipsis .lyteCheckBoxPrimary span {
  max-width: 100%;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
.lyteCheckSwitch.lyteCheckboxSwitchWithStateLabel {
  min-width: 28px;
  min-height: 16px;
  width: auto;
  height: auto;
  display: inline-grid;
  grid-auto-flow: row;
  padding: 2px;
}
input[type="checkbox"].on-off-sw:checked + .lyteCheckSwitch.lyteCheckboxSwitchWithStateLabel .on-btn {
  right: calc(100% - 14px);
}
.lyteCheckboxStateLabel {
  font-size: var(--lyte-chbox-label-font-size);
  padding-right: 17px;
  padding-left: 2px;
  grid-row: 1;
  grid-column: 1;
  transition: visibility 0.3s ease, opacity 0.3s ease;
}
input[type="checkbox"].on-off-sw:checked + .lyteCheckboxSwitchWithStateLabel .lyteCheckboxStateLabel {
  padding-left: 17px;
  padding-right: 2px;
  color: #fff;
}
.on-off-sw + .lyteCheckSwitch .lyteCheckboxOnStateLabel,
.on-off-sw:checked + .lyteCheckSwitch .lyteCheckboxOffStateLabel {
  visibility: hidden;
  opacity: 0;
}
.on-off-sw:checked + .lyteCheckSwitch .lyteCheckboxOnStateLabel {
  visibility: visible;
  opacity: 1;
}
.lyteCheckboxEmptyLabel .lyteCheckSwitch + span,
.lyteCheckboxEmptyLabel .lyteCheckBoxDefault span,
.lyteCheckboxEmptyLabel .lyteCheckBoxPrimary span,
.lyteCheckboxEmptyLabel .lyteCheckSliderText {
  display: none;
}
.lyteCheckboxEmptyLabel .lyteCheckBoxPrimary::before,
.lyteCheckboxEmptyLabel .lyteCheckBoxDefault::before {
  margin-left: 0;
  display: block;
}
/* import theme overrides - styles */
/* import custom css */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/checkbox.less file
 */
/*  Checkbox related CSS ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* Make changes to override predefined styles */
/*  Calendar related CSS BEGINS     */
lyte-calendar {
  display: inline-block;
}
.lyteCalendarPopup {
  background: var(--lyte-calendar-popup-bg);
  z-index: var(--lyte-calendar-zindex);
  box-shadow: 0 1px 3px 1px var(--lyte-calendar-popup-boxshadow-color);
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-calendar-popup-font-size);
  border: 1px solid var(--lyte-calendar-popup-border-color);
}
.lyteCalendarNavigator {
  padding: 15px 20px 10px 20px;
  display: flex;
  align-items: center;
}
.lyteCalMonthDD {
  max-width: 150px;
  width: auto;
}
.lyteCalYearDD {
  width: auto;
}
.lyteCalendarPopup lyte-dropdown lyte-drop-button {
  box-sizing: border-box;
  color: var(--lyte-calendar-dropdown-text-color);
  padding: 3px 1px 3px 25px;
  border: 0;
}
.lyteCalMonthDD lyte-drop-button {
  font-size: var(--lyte-calendar-month-font-size);
}
.lyteCalYearDD lyte-drop-button {
  font-size: var(--lyte-calendar-year-font-size);
}
.lyteCalendarPopup lyte-dropdown lyte-icon.dropdown {
  top: calc(50% - 2px);
}
.lyteCalendarPopup lyte-dropdown lyte-drop-button.lyteDropButtonDown,
.lyteCalendarPopup lyte-dropdown lyte-drop-button.lyteDropButtonUp,
.lyteCalendarPopup lyte-dropdown lyte-drop-button:hover {
  color: var(--lyte-calendar-dropdown-hover-text-color);
  padding: 3px 1px 3px 25px;
  border: 0;
}
.lyteCalendarDropdown lyte-drop-item {
  min-width: 40px;
}
.lyteCalNav {
  width: 20px;
  height: 20px;
  display: inline-block;
  cursor: pointer;
  position: relative;
  order: 2;
  border: 1px solid var(--lyte-calendar-nav-border-color);
  border-radius: 50%;
  transform: rotate(180deg);
}
.lyteCalNav:hover {
  border: 1px solid var(--lyte-calendar-nav-hover-border-color);
}
.lyteCaldLft::before,
.lyteCaldRgt::before {
  content: '';
  position: absolute;
  top: 6px;
  right: 5px;
  width: 10px;
  height: 10px;
  background-image: var(--lyte-sprite-image);
  background-position: -40px -1px;
  opacity: 0.5;
}
.lyteCalyearNavLft::before,
.lyteCalyearNavRgt::before {
  content: '';
  position: absolute;
  top: 5px;
  right: 5px;
  width: 10px;
  height: 10px;
  background-image: var(--lyte-sprite-image);
  background-position: -351px -278px;
  opacity: 0.5;
}
.lyteCaldRgt {
  margin-right: 10px;
}
.lyteCalyearNavRgt {
  margin-right: 5px;
}
.lyteCalyearNavLft {
  margin-left: 5px;
}
.lyteCalyearNavLft::before {
  transform: rotate(180deg);
}
.lyteCaldLft::before {
  top: 5px;
  transform: rotate(180deg);
}
.lyteCalNav:hover::before {
  opacity: 1;
}
.lyteCalsCalMon {
  flex-grow: 3;
  text-align: right;
  order: 1;
  cursor: default;
  color: var(--lyte-calendar-text-color);
}
.lyteCalsCalMonth {
  font-size: var(--lyte-calendar-month-font-size);
}
.lyteCalsCalYear {
  font-size: var(--lyte-calendar-year-font-size);
}
.lyteCalTableContainer {
  border-spacing: var(--lyte-calendar-horizontal-cell-spacing) 5px;
  box-sizing: border-box;
  display: table;
  padding: 0 12px 8px;
  width: 100%;
}
.lyteCalTableRow,
.lyteCalTableRowHeader {
  display: table-row;
}
.lyteCalTableCellHeader {
  color: var(--lyte-calender-weeklabel-text-color);
  cursor: default;
  display: table-cell;
  font-size: var(--lyte-calendar-weeklabel-font-size);
  text-transform: uppercase;
  text-align: center;
  padding-bottom: 6px;
}
.lyteCalTableCell {
  border: 1px solid transparent;
  color: var(--lyte-calendar-text-color);
  cursor: pointer;
  font-size: var(--lyte-calendar-weeknumber-font-size);
  display: table-cell;
  vertical-align: middle;
  padding: 0;
  text-align: center;
  width: 30px;
  min-width: 30px;
  height: 30px;
  border-radius: var(--lyte-calendar-datecell-border-radius);
}
.lyteCalGray {
  opacity: 0.4;
}
.lyteCalGray:hover,
.lyteCalGray.lyteCalSel {
  opacity: 1;
}
.lyteCalToday {
  background: var(--lyte-calendar-popup-bg);
  color: var(--lyte-calendar-selected-elem-bg);
  border: 1px solid var(--lyte-calendar-selected-elem-bg);
}
.lyteCalTableCell:hover,
.lyteCalToday:hover {
  background: var(--lyte-calendar-hover-elem-bg);
}
.lyteCalDisabled.lyteCalSel,
.lyteCalHoliday.lyteCalSel,
.lyteCalWeekend.lyteCalSel,
.lyteCalSel,
.lyteCalSel:hover {
  background: var(--lyte-calendar-selected-elem-bg);
  color: var(--lyte-calendar-selected-element-text-color);
  border: 1px solid var(--lyte-calendar-selected-elem-bg);
}
.lyteCalBtns .lyteCalCurrentDate {
  padding: 10px;
  border-top: 1px solid var(--lyte-calendar-footer-btn-border-color);
  text-align: center;
}
.lyteCalCurrentDate a {
  color: var(--lyte-theme-active-element-color);
  cursor: pointer;
}
.lyteCalEmpty {
  display: table-cell;
}
.lyteCalendarHidden {
  display: none;
}
.lyteCalendarPopup .lyteDummyEventContainer:focus lyte-drop-button,
.lyteCalendarPopup .lyteDummyEventContainer:focus lyte-drop-button:hover,
.lyteCalendarPopup lyte-drop-button.lyteDropButtonUp,
.lyteCalendarPopup lyte-drop-button.lyteDropButtonDown {
  border: 0;
  box-shadow: none;
}
.lyteCalTableRowGroup {
  display: table-row-group;
}
.lyteCalDisabled {
  background: transparent;
  pointer-events: none;
  opacity: 0.5;
}
.lyteCalendarDisabledDate {
  background: transparent;
  opacity: 0.5;
  cursor: default;
}
.lyteCalendarDisabledDate:hover {
  background: transparent;
}
/*  Drilldown calendar CSS BEGINS   */
.lyteDrillCalYearView,
.lyteDrillCalMonthView {
  border-spacing: 20px 40px;
}
.lyteDrillCalYearView .lyteCalTableCell,
.lyteDrillCalMonthView .lyteCalTableCell {
  height: auto;
  width: 40px;
  padding: 0 5px;
  border-radius: 3px;
}
.lyteDrillCalCurrentYear,
.lyteDrillCalCurrentMonth {
  color: var(--lyte-calendar-selected-elem-bg);
  border: 1px solid var(--lyte-calendar-selected-elem-bg);
}
.lyteDrillCalHeaderButton {
  background: transparent;
  padding: 2px 10px;
  color: var(--lyte-calendar-drilldown-button-text-color);
  border: 1px solid var(--lyte-calendar-drilldown-button-border-color);
  border-radius: 3px;
  font-size: var(--lyte-calendar-drill-header-font-size);
  cursor: pointer;
}
.lyteDrillCalHeaderButton:hover {
  background: var(--lyte-calendar-drilldown-button-hover-bg);
}
.lyteDrillCalYearListHeader:hover,
.lyteDrillCalYearListHeader {
  border-color: transparent;
  background: transparent;
  cursor: default;
}
.lyteDrillCalHeaderButton .lyteCalsCalMonth {
  font-size: var(--lyte-calendar-drill-header-font-size);
}
.lyteCalDisableNav {
  pointer-events: none;
  opacity: 0.5;
}
/*  Drilldown calendar CSS ENDS   */
.lyteVisuallyHidden {
  position: absolute;
  top: auto;
  overflow: hidden;
  width: 0;
  height: 0;
  white-space: nowrap;
}
/*	Calendar weekly selection CSS Begins */
.lyteCalWeekSelType .lyteCalTableCell {
  position: relative;
  border-radius: 0;
}
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalTableCell {
  background: var(--lyte-calendar-hover-elem-bg);
  color: var(--lyte-calendar-text-color);
}
.lyteCalWeekSelType .lyteCalToday.lyteCalWeekSel,
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalToday {
  border-color: transparent;
  border-radius: 0;
  color: var(--lyte-calendar-text-color);
}
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalWeekSel,
.lyteCalWeekSel {
  background: var(--lyte-calendar-hover-elem-bg);
}
.lyteWeekNumContainer .lyteCalWeekSel:nth-child(2),
.lyteWeekNumContainer .lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalTableCell:nth-child(2),
.lyteCalWeekSelType .lyteCalToday.lyteCalWeekSel:first-child,
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalToday:first-child,
.lyteCalWeekSelType .lyteCalTableCell:first-child {
  border-radius: 0 50% 50% 0;
}
.lyteCalWeekSelType .lyteCalToday.lyteCalWeekSel:last-child,
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalToday:last-child,
.lyteCalWeekSelType .lyteCalTableCell:last-child {
  border-radius: 50% 0 0 50%;
}
.lyteCalWeekSelType .lyteCalToday,
.lyteCalWeekSelType .lyteCalToday:first-child,
.lyteCalWeekSelType .lyteCalToday:last-child {
  border-radius: 50%;
}
.lyteWeekNumContainer .lyteCalWeekSel:nth-child(2),
.lyteCalWeekSelType .lyteCalWeekSel:first-child,
.lyteCalWeekSelType .lyteCalWeekSel:last-child {
  color: var(--lyte-calendar-selected-element-text-color);
  z-index: 0;
}
.lyteWeekNumContainer .lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalWeekSel:nth-child(2),
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalWeekSel:first-child,
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalWeekSel:last-child {
  color: var(--lyte-calendar-selected-element-text-color);
}
.lyteCalWeekSel:last-child::before,
.lyteCalWeekSel:first-child::before,
.lyteWeekNumContainer .lyteCalWeekSel:nth-child(2)::before {
  content: '';
  background: var(--lyte-calendar-selected-elem-bg);
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  z-index: -1;
}
.lyteWeekNumContainer .lyteCalWeekSel:nth-child(2)::before,
.lyteCalWeekSel:first-child::before {
  right: 0;
  top: 0;
}
.lyteCalWeekSel:last-child::before {
  left: 0;
  top: 0;
}
.lyteCalWeekSelType .lyteCalTableRow .lyteCalTableCell::after {
  content: '';
  position: absolute;
  right: calc(100% + 1px);
  width: var(--lyte-calendar-horizontal-cell-spacing);
  top: -1px;
  bottom: -1px;
}
.lyteCalWeekSel::after,
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalTableCell::after {
  background: var(--lyte-calendar-hover-elem-bg);
}
.lyteCalWeekSelType .lyteCalTableRow .lyteCalTableCell:last-child::after {
  content: none;
}
/*	Calendar weekly selection CSS Ends */
/*	Calendar Monthly selection, Yearly Selection CSS Begins */
.lyteCalYearSelType,
.lyteCalMonthSelType {
  border-spacing: 16px 40px;
}
.lyteCalYearSelType .lyteCalTableCell,
.lyteCalMonthSelType .lyteCalTableCell {
  height: auto;
  width: 40px;
  padding: 0 5px;
  border-radius: 3px;
}
.lyteCalYearSel:hover,
.lyteCalYearSel,
.lyteCalMonthSel:hover,
.lyteCalMonthSel {
  background: var(--lyte-calendar-selected-elem-bg);
  color: var(--lyte-calendar-selected-element-text-color);
}
.lyteCalWeekendHeader,
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalHoliday,
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalWeekend,
.lyteCalHoliday,
.lyteCalWeekend {
  color: #E74C3C;
}
.lyteWeekNumContainer .lyteCalTableContainer {
  padding-right: 0;
  position: relative;
}
.lyteCalTableRowGroup .lyteWeekNumberGrid {
  color: #7B7C7D;
  font-size: var(--lyte-calendar-weeknumber-font-size);
  display: table-cell;
  vertical-align: middle;
  padding: 0;
  text-align: center;
  width: 30px;
  min-width: 30px;
  height: 30px;
  padding-left: 10px;
}
.lyteWeekNumContainer .lyteCalTableContainer::before {
  content: "";
  position: absolute;
  border-radius: 5px 0 0 0;
  border: 1px solid #DCDBDC;
  border-right: none;
  background: #F5F7F9;
  width: 42px;
  right: 0;
  display: inline-block;
  height: calc(100% - 6px);
  z-index: 0;
}
.lyteWeekNumberGrid {
  position: relative;
  z-index: 1;
}
.lyteCalTableCellHeader.lyteWeekNumberGrid {
  padding-left: 10px;
}
.lyteWeekNumberGrid.lyteCalCurWeekNum {
  color: #4497DD;
}
.lyteWeekNumContainer .lyteCalTableContainer.lyteCalYearSelType::before,
.lyteWeekNumContainer .lyteCalTableContainer.lyteCalMonthSelType::before {
  content: none;
}
.lyteCalHeaderCenterAlign .lyteCalNav {
  order: 1;
}
.lyteCalHeaderCenterAlign .lyteCalsCalMon {
  text-align: center;
}
/*	Calendar Monthly selection, Yearly Selection CSS Ends */
/* import theme overrides - styles */
/* import custom css */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/calendar.less file
 */
/*  Calendar related CSS ENDS     */
lyte-datemultiselect {
  display: inline-block;
}
.lyteDMSButton {
  border: 1px solid var(--lyte-dms-button-border-color);
  background-color: var(--lyte-dms-button-bg);
  padding: 10px;
  border-radius: 5px;
  cursor: pointer;
}
.lyteDMSButton:hover {
  border: 1px solid var(--lyte-dms-button-hover-border-color);
}
.lyteDmsWrap {
  display: flex;
  position: absolute;
  box-shadow: 0 0 4px 0px var(--lyte-dms-wrap-box-shadow);
  border: 1px solid var(--lyte-dms-wrap-border-color);
  border-radius: 0 5px 5px 5px;
}
.lyteDmsSelectionContainer {
  background-color: var(--lyte-dms-selection-container-bg);
  border-radius: 0 5px 5px 0;
  box-shadow: none;
  display: inline-flex;
  flex-direction: column;
  overflow: auto;
  box-sizing: border-box;
  font-size: var(--lyte-dms-selection-container-font-size);
  max-height: 350px;
  border-left: 1px solid var(--lyte-dms-selection-container-border-left-color);
}
.lyteDmsCalcWrap {
  display: flex;
  align-items: center;
  padding: 15px 20px;
  border-bottom: 1px solid var(--lyte-dms-calc-wrap-border-bottom-color);
}
.lyteDmsDateCalc {
  color: var(--lyte-dms-date-calc-color);
  border-radius: 5px;
  border: 1px solid var(--lyte-dms-date-calc-border-color);
  width: 30px;
  height: 30px;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
}
.lyteDmsDayCalc {
  margin-right: 30px;
  color: var(--lyte-dms-day-calc-color);
}
.lyteDmsRightPanelContentWrap {
  overflow: auto;
  flex-grow: 1;
}
.lyteDmsRightDate {
  display: flex;
  flex-direction: column;
  padding: 10px 20px;
}
.lyteDmsSelectedDays {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px 20px;
  color: var(--lyte-dms-selected-days-color);
}
.lyteDMSRemoveIcon {
  width: 12px;
  height: 12px;
  -webkit-mask-image: var(--lyte-sprite-image);
  -webkit-mask-position: -324px -109px;
  mask-image: var(--lyte-sprite-image);
  mask-position: -324px -109px;
  background-color: var(--lyte-dms-remove-icon-bg);
  cursor: pointer;
}
.lyteDMSRemoveAll {
  color: var(--lyte-dms-remove-all-color);
  text-align: center;
  padding: 10px;
  cursor: pointer;
}
.lyteDMSHide {
  display: none;
}
.lyteDmsWrap .lyteCalendarPopup {
  border: 0;
  border-radius: 0 0 0 5px;
  box-shadow: none;
  border-right: 1px solid var(--lyte-dms-calender-popup-border-right-color);
}
.lyteDmsWrap {
  position: relative;
}
.lyteDMSButtonPlaceholder {
  color: var(--lyte-dms-button-placeholder-color);
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/*  Calculator related style BEGINS   */
lyte-calculator {
  font-family: var(--lyte-primary-font);
  display: inline-block;
  border-radius: 3px;
  user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  padding-right: 17px;
}
.lyteCalculator {
  border: 1px solid var(--lyte-calculator-border-color);
  box-shadow: 0 0 6px 1px rgba(0, 0, 0, 0.1);
  border-radius: 3px;
  outline: 0;
  width: 220px;
  box-sizing: content-box;
}
.lyteCalculator.advanced {
  width: 450px;
}
.lyteCalculator.basic .advancedCalculator {
  display: none;
}
.calculatorDisplay {
  position: relative;
  background: var(--lyte-calculator-display-bg);
  border-bottom: 1px solid var(--lyte-calculator-border-color);
  padding: 5px 20px;
  border-radius: 3px 3px 0 0;
  height: 45px;
  box-sizing: content-box;
}
.calculatorrad {
  font-size: var(--lyte-calculator-rad-font-size);
  position: absolute;
  bottom: 5px;
}
.lyteCalculator.advanced .calculatorDisplay {
  padding: 5px 15px;
}
.lyteCalculatorTextField {
  width: 100%;
  border: 0;
  outline: 0;
  box-shadow: none;
  text-align: left;
  background: var(--lyte-calculator-display-bg);
  font-size: var(--lyte-calculator-textfield-font-size);
  color: var(--lyte-calculator-main-text-color);
  height: 25px;
  direction: ltr;
}
.lyteCalculatorTextField::-ms-clear {
  display: none;
}
.calculatorDisplay.equalBtn .lyteCalculatorTextField {
  font-size: var(--lyte-calculator-equalbtn-textfield-font-size);
  color: var(--lyte-calculator-display-secondary-text-color);
  height: 21px;
}
.calculatorbuttons,
.basicCalculator,
.advancedCalculator {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  position: relative;
}
.advancedCalculator {
  width: 250px;
}
.basicCalculator {
  align-content: baseline;
}
.advancedCalculator span,
.basicCalculator span {
  width: 55px;
  height: 38px;
  border-left: 1px solid var(--lyte-calculator-border-color);
  border-bottom: 1px solid var(--lyte-calculator-border-color);
  box-sizing: border-box;
  background: var(--lyte-calculator-button-bg);
  text-align: center;
  line-height: 40px;
  cursor: pointer;
  font-size: var(--lyte-calculator-btn-font-size);
  color: var(--lyte-calculator-main-text-color);
  direction: ltr;
}
.basicCalculator span.calcClearAc {
  font-size: var(--lyte-calculator-clear-font-size);
}
.basicCalculator span.doubleWidth {
  width: 110px;
}
.advancedCalculator span {
  width: 50px;
  font-size: var(--lyte-calculator-advanced-btn-font-size);
}
.lyteCalculator.advanced .basicCalculator span {
  width: 50px;
}
.lyteCalculator.advanced .basicCalculator span.doubleWidth {
  width: 100px;
}
.lyteCalculator.advanced .basicCalculator {
  width: 200px;
}
.advancedCalculator span:hover,
.basicCalculator span:hover {
  background: var(--lyte-calculator-button-hover-bg);
}
.basicCalculator span.basicOp {
  background: var(--lyte-calculator-operator-button-bg);
  border-left: 0;
  font-size: var(--lyte-calculator-basic-operator-font-size);
}
.basicCalculator span.basicOp.calcEqual {
  color: #fff;
}
.basicCalculator span.lastrow,
.advancedCalculator span.lastrow {
  border-bottom: 0;
}
.calculatorDispspan {
  text-align: left;
  font-size: var(----lyte-calculator-display-font-size);
  color: var(--lyte-calculator-display-secondary-text-color);
  height: 22px;
}
.calculatorDisplay.equalBtn .calculatorDispspan {
  font-size: var(--lyte-calculator-equal-font-size);
  color: var(--lyte-calculator-main-text-color);
  height: 25px;
}
.calculatorToggle {
  display: block;
  position: absolute;
  right: -18px;
  border: 1px solid var(--lyte-calculator-border-color);
  padding: 5px 3px;
  background: var(--lyte-calculator-toggle-btn-bg);
  border-left: 0;
  top: 43px;
  cursor: pointer;
}
.calculatorsmaller {
  color: #f0f0f0;
  background-image: var(--lyte-sprite-image);
  background-position: -40px -1px;
  opacity: 0.7;
  width: 10px;
  height: 10px;
  display: inline-block;
  transform: rotate(0deg);
}
.lyteCalculator.advanced .calculatorsmaller {
  transform: rotate(180deg);
}
.advancedCalculator span.CalculatorBtn15 {
  font-size: 15px;
}
.advancedCalculator span.CalculatorBtn16 {
  font-size: 16px;
}
.advancedCalculator span.CalculatorBtn17 {
  font-size: 17px;
}
.advancedCalculator span.calc-second {
  background: var(--lyte-calculator-advance-inverse-btn-active-bg);
}
.memorymr.active,
.memorymr.active:hover {
  background: var(--lyte-calculator-advance-memory-btn-active-bg);
  position: relative;
}
.memorymr.active::before {
  content: '';
  position: absolute;
  left: 5px;
  top: 5px;
  background: var(--lyte-calculator-advance-memory-btn-active-circle-bg);
  width: 5px;
  height: 5px;
  border-radius: 50%;
}
.calcLeft {
  border-bottom-right-radius: 2px;
}
.lyteCalculator.advanced .basicCalculator .calcLeft {
  border-bottom-right-radius: 0px;
}
.calcRight {
  border-bottom-left-radius: 2px;
}
.basicCalculator span.basicOp:not(.calcEqual),
.advancedCalculator span.squareroot.inverse,
.advancedCalculator span.cuberoot.inverse,
.basicCalculator span.calcBackspace,
.advancedCalculator span.pieButton {
  position: relative;
  color: transparent;
}
.pieButton::after,
.basicCalculator span.basicOp:not(.calcEqual)::after,
.basicCalculator span.calcBackspace::after {
  content: '';
  position: absolute;
  background-image: var(--lyte-sprite-image);
}
.calcMultiply::after {
  background-position: -325px -110px;
  width: 14px;
  height: 12px;
  top: calc(50% - 6px);
  left: calc(50% - 7px);
}
.calcDivide::after {
  background-position: -348px -108px;
  width: 14px;
  height: 14px;
  top: calc(50% - 7px);
  left: calc(50% - 7px);
}
.calcAdd::after {
  background-position: -73px -58px;
  width: 11px;
  height: 11px;
  top: calc(50% - 5px);
  left: calc(50% - 5px);
}
.calcSub::after {
  background-position: -309px -116px;
  width: 12px;
  height: 2px;
  top: calc(50% - 1px);
  left: calc(50% - 6px);
}
.squareroot.inverse::before,
.cuberoot.inverse::before {
  content: '2';
  background-image: var(--lyte-sprite-image);
  background-position: -374px -107px;
  width: 20px;
  height: 18px;
  top: calc(50% - 9px);
  left: calc(50% - 10px);
  color: var(--lyte-calculator-main-text-color);
  font-size: var(--lyte-calculator-squareroot-inverse-font-size);
  line-height: 10px;
  text-align: left;
  text-indent: -2px;
}
.cuberoot.inverse::before {
  content: 'y';
  line-height: 6px;
}
.squareroot.inverse::after,
.cuberoot.inverse::after {
  content: 'x';
  position: absolute;
  color: var(--lyte-calculator-main-text-color);
  top: 14px;
  line-height: 6px;
  left: calc(50%);
  text-indent: 1px;
}
.basicCalculator span.calcBackspace::after {
  background-position: -98px -134px;
  width: 16px;
  height: 12px;
  left: calc(50% - 8px);
  top: calc(50% - 6px);
}
.lyteCalculatorTextField.hideCursor,
.lyteCalculatorTextField.hideCursorNonEditable {
  color: transparent;
  text-shadow: 0 0 0 var(--lyte-calculator-main-text-color);
}
.equalBtn .lyteCalculatorTextField.hideCursorNonEditable {
  color: transparent;
  text-shadow: 0 0 0 var(--lyte-calculator-display-secondary-text-color);
}
.lyteCalculatorTextField.lyteScrollBar {
  height: 25px;
  overflow: hidden;
}
.toggleBtns {
  position: relative;
}
.toggleBtns sup {
  font-size: 0;
}
.cuberoot:not(.inverse)::after,
.squareroot:not(.inverse)::after,
.logbtn.inverse::after,
.naturallog.inverse::after,
.hyperbolic.inverse::after,
.trignometry.inverse::after {
  content: '-1';
  position: absolute;
  top: -7px;
  right: 7px;
  color: var(--lyte-calculator-main-text-color);
  font-size: var(--lyte-calculator-toggle-btn-font-size);
}
.hyperbolic.inverse::after {
  right: 5px;
}
.logbtn.inverse::after,
.naturallog.inverse::after {
  content: 'x';
  top: -7px;
  right: 10px;
}
.naturallog.inverse::after {
  right: 12px;
}
.squareroot:not(.inverse)::after {
  content: '2';
  right: 12px;
}
.cuberoot:not(.inverse)::after {
  content: 'y';
  right: 12px;
}
.pieButton::after {
  display: block;
  width: 10px;
  height: 10px;
  background-position: -124px -137px;
  top: calc(50% - 3px);
  left: calc(50% - 4px);
}
/* import theme overrides - styles */
/* import custom css */
/*  Calculator related style ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* Radiobutton CSS BEGINS */
lyte-radiobutton {
  color: var(--lyte-radio-text-color);
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-radio-button-font-size);
  display: inline-block;
  position: relative;
}
lyte-radiobutton label {
  cursor: pointer;
}
lyte-radiobutton.lyteRadioDisabled label {
  cursor: not-allowed;
}
lyte-radiobutton input[type="radio"] {
  position: absolute;
  opacity: 0;
}
.lyteRadioLayer {
  width: 15px;
  height: 15px;
  border: 1px solid var(--lyte-radio-border-color);
  border-radius: 50%;
  display: inline-block;
  margin-left: 7px;
  vertical-align: middle;
  background: var(--lyte-radio-bg);
  position: relative;
}
.lyteRadioLayer .lyteRadioCheck {
  width: 9px;
  height: 9px;
  border-radius: 50%;
  position: absolute;
  top: calc(50% - 4.5px);
  right: calc(50% - 4.5px);
  background: var(--lyte-radio-default-bg-on-mode);
  transform: scale(0);
  transition: transform 0.2s ease;
}
.lyteRadioDisabled input[type="radio"]:checked + .lyteRadioLayer,
lyte-radiobutton label:hover .lyteRadioLayer,
lyte-radiobutton input[type="radio"]:focus + .lyteRadioLayer,
lyte-radiobutton input[type="radio"]:active + .lyteRadioLayer,
lyte-radiobutton input[type="radio"]:checked + .lyteRadioLayer {
  border: 1px solid var(--lyte-radio-default-bg-on-mode);
}
lyte-radiobutton input[type="radio"]:focus + .lyteRadioLayer {
  box-shadow: 0 0 4px 0 var(--lyte-radio-default-bg-on-mode);
}
lyte-radiobutton input[type="radio"]:checked + .lyteRadioLayer .lyteRadioCheck {
  transform: scale(1);
}
.lyteRadioLabel {
  display: inline-block;
  vertical-align: middle;
}
lyte-radiobutton input[type="radio"]:focus ~ .lyteRadioLabel,
lyte-radiobutton label:hover .lyteRadioLabel {
  color: var(--lyte-radio-text-hover-color);
}
lyte-radiobutton .lytePrimary .lyteRadioLayer .lyteRadioCheck {
  background: var(--lyte-radio-primary-bg-on-mode);
}
lyte-radiobutton label.lytePrimary:hover .lyteRadioLayer,
lyte-radiobutton .lytePrimary input[type="radio"]:focus + .lyteRadioLayer,
lyte-radiobutton .lytePrimary input[type="radio"]:active + .lyteRadioLayer,
lyte-radiobutton .lytePrimary input[type="radio"]:checked + .lyteRadioLayer {
  border: 1px solid var(--lyte-radio-primary-bg-on-mode);
}
lyte-radiobutton .lytePrimary input[type="radio"]:focus + .lyteRadioLayer {
  box-shadow: 0 0 4px 0 var(--lyte-radio-primary-bg-on-mode);
}
lyte-radiobutton .lyteSecondary .lyteRadioLayer .lyteRadioCheck {
  background: var(--lyte-radio-secondary-bg-on-mode);
}
lyte-radiobutton label.lyteSecondary:hover .lyteRadioLayer,
lyte-radiobutton .lyteSecondary input[type="radio"]:focus + .lyteRadioLayer,
lyte-radiobutton .lyteSecondary input[type="radio"]:active + .lyteRadioLayer,
lyte-radiobutton .lyteSecondary input[type="radio"]:checked + .lyteRadioLayer {
  border: 1px solid var(--lyte-radio-secondary-bg-on-mode);
}
lyte-radiobutton .lyteSecondary input[type="radio"]:focus + .lyteRadioLayer {
  box-shadow: 0 0 4px 0 var(--lyte-radio-secondary-bg-on-mode);
}
.lyteRadioSwitch {
  display: inline-block;
  vertical-align: middle;
  position: relative;
  width: 28px;
  height: 16px;
  border-radius: 20px;
  background: var(--lyte-radio-switch-bg);
}
.lyteRadioSwitch .on-btn {
  display: inline-block;
  position: absolute;
  width: 12px;
  height: 12px;
  background: var(--lyte-radio-switch-circle-bg);
  border-radius: 50%;
  right: 2px;
  top: calc(50% - 6px);
  left: auto;
  transition: right 200ms ease;
}
lyte-radiobutton .on-off-sw:focus + .lyteRadioSwitch {
  box-shadow: 0 0 3px 1px #d3d3d3;
}
.on-off-sw:checked + .lyteRadioSwitch {
  background: var(--lyte-radio-switch-bg-on-mode);
}
lyte-radiobutton .on-off-sw:checked:focus + .lyteRadioSwitch {
  box-shadow: 0 0 3px 1px var(--lyte-radio-switch-bg-on-mode);
}
lyte-radiobutton .on-off-sw:checked + .lyteRadioSwitch .on-btn {
  right: 14px;
}
.lyteRadioSliderLabel {
  box-sizing: border-box;
  cursor: pointer;
  position: relative;
}
.lyteRadioSlider {
  position: relative;
  display: inline-flex;
  align-items: center;
  height: 1.4rem;
}
.lyteRadioSlider::before {
  content: '';
  position: absolute;
  display: inline-block;
  z-index: 1;
  width: 1.4rem;
  height: 1.4rem;
  background: var(--lyte-radio-slider-circle-bg);
  box-shadow: var(--lyte-radio-slider-boxshadow-color);
  border-radius: 50%;
  right: 0;
  transition: right 200ms ease;
}
input[type="radio"]:checked + .lyteRadioSlider::before {
  right: 2.25rem;
}
.lyteRadioSlider::after {
  content: '';
  position: absolute;
  display: inline-block;
  z-index: 0;
  width: 3.5rem;
  height: 0.2rem;
  top: 0.6rem;
  right: 0;
  background: var(--lyte-radio-slider-bar-bg);
}
input[type="radio"]:checked + .lyteRadioSlider::after {
  background: var(--lyte-radio-slider-bar-checked-bg);
}
.lyteRadioSliderText {
  padding-right: 4.25rem;
  vertical-align: middle;
}
.lyteRadioDisabled .lyteRadioSlider::after,
.lyteRadioDisabled .lyteRadioSwitch,
.lyteRadioDisabled .lyteRadioLayer {
  opacity: 0.5;
}
.lyteRadioDisabled .lyteRadioSlider::before {
  opacity: 0.8;
  background: #f5f5f5;
}
.lyteRadioDisabled input[type="radio"]:active + .lyteRadioLayer,
.lyteRadioDisabled .lytePrimary input[type="radio"]:active + .lyteRadioLayer,
.lyteRadioDisabled .lyteSecondary input[type="radio"]:active + .lyteRadioLayer,
.lyteRadioDisabled label.lyteSecondary:hover .lyteRadioLayer,
.lyteRadioDisabled label.lytePrimary:hover .lyteRadioLayer,
.lyteRadioDisabled label:hover .lyteRadioLayer {
  border: 1px solid var(--lyte-radio-border-color);
}
.lyteRadioDisabled label:hover .lyteRadioLabel {
  color: var(--lyte-radio-text-color);
}
/*	CSS for handling bigger labels in Radio button BEGINS	*/
lyte-radiobutton.lyteRadioLabelBiggerCase {
  max-width: 100%;
}
lyte-radiobutton.lyteRadioLabelBiggerCase label {
  display: flex;
}
lyte-radiobutton.lyteRadioLabelBiggerCase .lyteRadioLayer {
  flex-shrink: 0;
}
lyte-radiobutton.lyteRadioLabelBiggerCase .lyteRadioLabel {
  overflow: auto;
  overflow-wrap: break-word;
  white-space: normal;
}
/*	CSS for handling bigger labels in Radio button ENDS	*/
.lyteRadioCheckbox {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: 1px solid #aaa;
  width: 14px;
  height: 14px;
  border-radius: 2px;
}
input[type="radio"]:checked + .lyteRadioCheckbox {
  border: 1px solid #5ba1e5;
  background-color: #5ba1e5;
}
input[type="radio"]:hover + .lyteRadioCheckbox {
  border: 1px solid #5ba1e5;
}
lyte-radiobutton input[type="radio"]:checked + .lyteRadioCheckbox::after {
  -webkit-mask-image: var(--lyte-sprite-image);
  -webkit-mask-position: -33px -15px;
  mask-image: var(--lyte-sprite-image);
  mask-position: -33px -15px;
  display: block;
  content: "";
  background-color: #fcfdff;
  width: 9px;
  height: 7px;
}
/* import theme overrides - styles s*/
/* import custom css */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/radiobutton.less file
 */
/* Radiobutton CSS ENDS */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* Make changes to override predefined styles */
/*  Dropdown related style BEGINS   */
lyte-dropdown,
lyte-drop-box {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-dropdown-dropbox-font-size);
  color: var(--lyte-dropdown-text-color);
  display: inline-block;
  max-width: 430px;
}
lyte-dropdown {
  max-width: 330px;
}
lyte-drop-button {
  border: 1px solid var(--lyte-dropdown-btn-border-color);
  border-radius: var(--lyte-dropbox-border-radius);
  cursor: pointer;
  text-align: right;
  position: relative;
  display: inline-block;
  padding: 7px 10px 7px 25px;
  width: 100%;
  box-sizing: border-box;
  color: var(--lyte-dropdown-text-color);
  background: var(--lyte-dropdown-bg);
}
lyte-dropdown lyte-drop-button:hover {
  border: 1px solid var(--lyte-dropdown-btn-hover-border-color);
}
lyte-drop-button.lyteDropButtonUp {
  border-radius: 0 0 var(--lyte-dropbox-border-radius) var(--lyte-dropbox-border-radius);
  box-shadow: 0px 0px 6px 0px var(--lyte-dropbox-box-shadow-color);
}
lyte-drop-button.lyteDropButtonDown {
  border-radius: var(--lyte-dropbox-border-radius) var(--lyte-dropbox-border-radius) 0 0;
  box-shadow: 0px 0px 6px 0px var(--lyte-dropbox-box-shadow-color);
}
.lyteMultiSearchDropButtonFocused:hover,
.lyteMultiSearchDropButtonFocused,
lyte-dropdown .lyteDummyEventContainer:focus lyte-drop-button,
lyte-dropdown .lyteDummyEventContainer:focus lyte-drop-button:hover {
  border: 1px solid var(--lyte-dropdown-btn-border-color);
  box-shadow: 0px 0px 6px 0px var(--lyte-dropbox-box-shadow-color);
}
lyte-drop-button.lyteDropButtonUp:hover,
lyte-drop-button.lyteDropButtonDown:hover {
  border: 1px solid var(--lyte-dropdown-btn-border-color);
}
lyte-dropdown.calloutDrop lyte-drop-button {
  box-shadow: none;
  border-radius: var(--lyte-dropbox-border-radius);
}
.lyteDropPlaceholderNormal,
.lyteDropdownLabel {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  display: block;
}
.lyteDummyEventContainer {
  outline: none;
}
lyte-drop-item {
  position: relative;
  cursor: pointer;
  display: block;
  text-align: right;
  color: var(--lyte-dropdown-text-color);
  padding: 7px 25px 7px 15px;
  font-size: var(--lyte-dropdown-dropitem-font-size);
  max-width: 100%;
  -ms-word-wrap: break-word;
  overflow-wrap: break-word;
}
lyte-drop-item.lyteDropdownActive,
lyte-drop-item.lyteSearchHidden {
  display: none;
}
.lyteDropdownSelection {
  background: var(--lyte-dropbox-item-hover-bg);
}
lyte-drop-item[selected="true"]::before {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: -33px -15px;
  width: 9px;
  height: 7px;
  position: absolute;
  right: 10px;
  top: 15px;
}
lyte-dropdown lyte-icon.dropdown {
  background-image: var(--lyte-sprite-image);
  background-position: -1px -2px;
  width: 8px;
  height: 4px;
  top: calc(50% - 2px);
  display: inline-block;
  opacity: 0.5;
  position: absolute;
  left: 10px;
}
/*  Multi select releated CSS--BEGINS   */
lyte-dropdown[lt-prop-type="multisearch"] lyte-drop-button,
lyte-dropdown[lt-prop-type="multiple"] lyte-drop-button {
  padding-left: 17px;
  min-height: 25px;
  white-space: normal;
}
lyte-dropdown[lt-prop-type="multisearch"] lyte-drop-button::after,
lyte-dropdown[lt-prop-type="multiple"] lyte-drop-button::after {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: -1px -2px;
  width: 8px;
  height: 4px;
  display: inline-block;
  position: absolute;
  left: 10px;
  top: 15px;
  opacity: 0.5;
}
lyte-dropdown lyte-drop-button.ltDropdownIconNodePresent::after {
  content: none;
}
.lyteMultipleSelect li {
  background: var(--lyte-dropdown-multiselect-li-bg);
  color: var(--lyte-dropdown-text-color);
  border: 1px solid var(--lyte-dropdown-multiselect-li-border-color);
  margin: 3px 1px;
  border-radius: var(--lyte-dropbox-border-radius);
  font-size: var(--lyte-dropdown-multiselect-li-font-size);
  padding: 1px 7px 3px 25px;
  display: inline-block;
  position: relative;
  cursor: default;
  max-width: 100%;
  box-sizing: border-box;
}
.lyteMultipleSelect .lyteDropdownVisible {
  display: block;
  max-width: 100%;
  -ms-word-wrap: break-word;
  overflow-wrap: break-word;
}
lyte-dropdown[lt-prop-remove-multiple="true"] .lyteMultipleSelect li {
  cursor: pointer;
}
lyte-dropdown[lt-prop-type="multisearch"] .lyteMultipleSelect li.lyteMultiselectInput {
  background: var(--lyte-dropdown-bg);
  border: 0;
  padding: 0;
  margin: 0;
  width: 150px;
}
lyte-dropdown[lt-prop-type="multisearch"] .lyteMultipleSelect .lyteMultiselectInput:only-of-type {
  width: 100%;
}
.lyteDropPlaceholderMultiple {
  padding-right: 0;
  font-size: var(--lyte-dropdown-multiselect-placeholder-font-size);
  color: var(--lyte-dropdown-multiselect-placeholder-text-color);
  vertical-align: top;
}
.lyteMultipleSelect .lyteCloseIcon {
  position: absolute;
  cursor: pointer;
  top: 0;
  bottom: 0;
  left: 0;
  height: 100%;
  width: 18px;
  border-radius: var(--lyte-dropbox-border-radius) 0 0 var(--lyte-dropbox-border-radius);
}
.lyteMultipleSelect li:hover .lyteCloseIcon {
  background: var(--lyte-dropdown-multiselect-remove-hover-bg);
}
.lyteMultipleSelect .lyteCloseIcon::before {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: -54px -2px;
  width: 8px;
  height: 8px;
  top: calc(50% - 4px);
  left: 5px;
  opacity: 0.7;
  display: inline-block;
  position: absolute;
  cursor: pointer;
}
.lyteMultipleSelect .lyteCloseIcon:hover::before {
  opacity: 1;
}
.lyteDropdownNoResult {
  padding: 5px 15px 15px;
  text-align: center;
  font-size: var(--lyte-dropdown-no-result-font-size);
  color: var(--lyte-dropdown-no-result-text-color);
}
lyte-drop-button input {
  width: 100%;
  border: none;
  background: transparent;
  font-size: var(--lyte-dropdown-dropbtn-input-font-size);
  color: var(--lyte-dropdown-text-color);
  padding: 0;
  box-sizing: border-box;
}
lyte-drop-button input:focus {
  outline: none;
}
.lyte-dropdown-filtered {
  display: none !important;
}
.lyteMultiSelectDropdown lyte-drop-item {
  padding: 7px 10px;
}
/*  Multi select releated CSS--ENDS   */
/*lyte-list-box dropbox related css--BEGINS     */
lyte-drop-box {
  background: var(--lyte-dropdown-bg);
  box-sizing: border-box;
  border: 1px solid var(--lyte-dropbox-border-color);
  box-shadow: 0px 2px 6px 0px var(--lyte-dropbox-box-shadow-color);
  z-index: var(--lyte-dropbox-zindex);
  position: absolute;
  border-radius: 0 0 var(--lyte-dropbox-border-radius) var(--lyte-dropbox-border-radius);
  display: block;
  width: auto;
  transform: translate(-1000px, -1000px);
}
lyte-drop-box[lyte-hidden] {
  visibility: hidden;
}
lyte-drop-box.lyteDropdownCurve {
  border-radius: var(--lyte-dropbox-border-radius) 0 var(--lyte-dropbox-border-radius) var(--lyte-dropbox-border-radius);
}
lyte-drop-box.lyteDropdownDown {
  transform: translateY(-1px);
}
lyte-drop-box.lyteDropdownUp {
  border-radius: var(--lyte-dropbox-border-radius) var(--lyte-dropbox-border-radius) 0 0;
  box-shadow: 0px -2px 6px 0px var(--lyte-dropbox-box-shadow-color);
  transform: translateY(1px);
}
lyte-drop-box.lyteDropdownRight,
lyte-drop-box.lyteDropdownLeft {
  transform: none;
}
lyte-drop-box.lyteDropBodyCallout {
  border-radius: var(--lyte-dropbox-border-radius);
  box-shadow: 0 0 3px 0 var(--lyte-dropbox-box-shadow-color);
}
lyte-drop-box:not(.lyteDropBodyCallout) .lyteArrow {
  background: var(--lyte-dropbox-button-overlap-bg);
  width: 328px;
  height: 1px;
  display: block;
  position: absolute;
  top: -1px;
  right: -1px;
}
.lyteDropdownUp:not(.lyteDropBodyCallout) .lyteArrow {
  top: unset;
  bottom: -1px;
}
.lyteDropdownUp.lyteDropdownCurve {
  border-radius: var(--lyte-dropbox-border-radius) var(--lyte-dropbox-border-radius) 0 var(--lyte-dropbox-border-radius);
}
lyte-drop-box lyte-input.lyteInput .lyteSearch {
  padding-right: 35px;
}
lyte-drop-box.lyteDropdownUp lyte-input.lyteInput .lyteSearch {
  border-radius: var(--lyte-dropbox-border-radius) var(--lyte-dropbox-border-radius) 0 0;
}
lyte-drop-box.lyteDropdownHidden {
  display: none;
  transform: translate(-1000px, -1000px);
}
lyte-drop-footer,
lyte-drop-header {
  display: block;
}
lyte-drop-footer {
  border-top: 1px solid var(--lyte-dropbox-footer-border-color);
  text-align: center;
}
lyte-drop-body {
  padding: 5px 0;
  display: block;
  max-height: 210px;
  overflow-y: auto;
  position: relative;
}
lyte-drop-header lyte-search .searchIcon {
  top: 10px;
  right: 10px;
}
lyte-drop-box .lyteDropdownFooter {
  border-top: 1px solid var(--lyte-dropbox-footer-border-color);
}
lyte-drop-box .lyteDropdownFooter .lyteDropdownAction {
  padding: 7px 10px;
  font-size: var(--lyte-dropdown-action-font-size);
}
lyte-drop-label {
  display: block;
  height: auto;
  padding: 10px 10px 3px;
  text-align: right;
  font-size: var(--lyte-dropdown-drop-label-font-size);
  font-family: var(--lyte-secondary-font);
  overflow-wrap: break-word;
}
lyte-drop-label:first-child {
  padding-top: 5px;
}
/*lyte-list-box dropbox related css--ENDS     */
.lyteDropdownFiltered {
  display: none!important;
}
#lytedropdownfreezelayer {
  right: 0;
  left: 0;
  top: 0;
  bottom: 0;
  background: var(--lyte-dropdown-freeze-layer-bg);
  opacity: 0.1;
  position: fixed;
  overflow: hidden;
  display: none;
}
.lyteDropdownZIndex {
  z-index: calc(var(--lyte-dropbox-zindex) - 5);
}
/*Dropdown element disabled option -- BEGINS*/
.lyteDropdown-disabled lyte-drop-button {
  background: var(--lyte-dropdown-button-disabled-bg);
  color: var(--lyte-dropdown-button-disabled-text-color);
  cursor: not-allowed;
}
.lyteDropdownDisabled lyte-drop-button:hover {
  border: 1px solid var(--lyte-dropdown-btn-border-color);
}
.lyteDropdownDisabled .lyteDummyEventContainer:focus lyte-drop-button:hover,
.lyteDropdownDisabled .lyteDummyEventContainer:focus lyte-drop-button {
  box-shadow: none;
  border: 1px solid var(--lyte-dropdown-btn-border-color);
}
.lyteDropdownDisabled .lyteMultipleSelect li {
  background: var(--lyte-dropdown-multiple-disabled-li-bg);
  border: 1px solid var(--lyte-dropdown-multiple-disabled-li-border-color);
  cursor: not-allowed;
}
.lyteDropdownDisabled .lyteCloseIcon {
  pointer-events: none;
}
.lyteDropdownDisabled .lyteMultipleSelect li:hover .lyteCloseIcon {
  background: transparent;
}
lyte-dropdown .lyteDropdown-disabled lyte-icon.dropdown {
  opacity: 0.3;
}
/*Dropdown element disabled option -- ENDS*/
/*  Dropdown item disabled CSS -- BEGINS    */
lyte-drop-item.lyteDropdown-disabled {
  opacity: 0.4;
  cursor: not-allowed;
}
/*  Dropdown item disabled CSS -- ENDS    */
.lyteDropPlaceholderNormal {
  margin-left: 20px;
  color: var(--lyte-dropdown-placeholder-text-color);
}
.lyteMultipleSelect li.lyteDropMark {
  background: var(--lyte-dropdown-multiselect-li-selected-bg);
  border: 1px solid var(--lyte-dropdown-multiselect-li-selected-border-color);
}
.lyteMultipleSelect li.lyteDropMark:hover .lyteCloseIcon {
  background: var(--lyte-dropdown-multiselect-li-selected-hover-bg);
}
/*  Callout hook related CSS -- BEGINS    */
/*Dropdown with arrow */
lyte-drop-box .lyteArrowIcon {
  width: 0;
  height: 0;
  border-bottom: 8px solid var(--lyte-dropdown-bg);
  position: absolute;
}
lyte-drop-box .lyteArrowTop::after,
lyte-drop-box .lyteArrowTop::before,
lyte-drop-box .lyteArrowBottom::after,
lyte-drop-box .lyteArrowBottom::before,
lyte-drop-box .lyteArrowRight::after,
lyte-drop-box .lyteArrowRight::before,
lyte-drop-box .lyteArrowLeft::after,
lyte-drop-box .lyteArrowLeft::before {
  content: "";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none;
  border: 8px solid transparent;
}
/*Arrow Top*/
lyte-drop-box .lyteArrowTop {
  top: 0;
}
lyte-drop-box .lyteArrowTop::after,
lyte-drop-box .lyteArrowTop::before {
  bottom: 0;
  right: 0;
}
lyte-drop-box .lyteArrowTop::after {
  border-bottom-color: var(--lyte-dropdown-bg);
  margin-right: -8px;
}
lyte-drop-box .lyteArrowTop::before {
  border-bottom-color: var(--lyte-dropbox-arrow-border-color);
  border-width: 10px;
  margin-right: -10px;
}
/*Arrow bottom*/
lyte-drop-box .lyteArrowBottom {
  bottom: -8px;
  top: unset;
}
lyte-drop-box .lyteArrowBottom::after,
lyte-drop-box .lyteArrowBottom::before {
  top: 0;
  left: 0;
}
lyte-drop-box .lyteArrowBottom::after {
  border-top-color: var(--lyte-dropdown-bg);
  margin-left: -8px;
}
lyte-drop-box .lyteArrowBottom::before {
  border-top-color: var(--lyte-dropbox-arrow-border-color);
  border-width: 10px;
  margin-left: -10px;
}
/*Arrow Right*/
lyte-drop-box .lyteArrowRight {
  right: 0;
}
lyte-drop-box .lyteArrowRight::after,
lyte-drop-box .lyteArrowRight::before {
  left: 0;
  top: 0;
}
lyte-drop-box .lyteArrowRight::after {
  border-left-color: var(--lyte-dropdown-bg);
  margin-top: -8px;
}
lyte-drop-box .lyteArrowRight::before {
  border-left-color: var(--lyte-dropbox-arrow-border-color);
  border-width: 10px;
  margin-top: -10px;
}
/*Arrow Left*/
lyte-drop-box .lyteArrowLeft {
  left: 0;
}
lyte-drop-box .lyteArrowLeft::after,
lyte-drop-box .lyteArrowLeft::before {
  right: 0;
  top: 0;
}
lyte-drop-box .lyteArrowLeft::after {
  border-right-color: var(--lyte-dropdown-bg);
  margin-top: -8px;
}
lyte-drop-box .lyteArrowLeft::before {
  border-right-color: var(--lyte-dropbox-arrow-border-color);
  border-width: 10px;
  margin-top: -10px;
}
/*  Callout hook related CSS -- ENDS    */
lyte-drop-box.lyteAnimate {
  transition: top 0.4s ease;
}
lyte-drop-box.lyteDropBoxAnimate {
  transition-property: top, height;
  overflow: hidden;
}
lyte-drop-box.lyteAnimate lyte-drop-body {
  transition: height 0.4s ease;
  overflow: hidden;
}
.lyteBodyWrapper {
  overflow: hidden;
}
.lyteDropdownFFScroll {
  overflow-y: scroll;
}
.lyteDropdownFFZeroScroll {
  overflow-y: hidden;
}
.lyteDropdownHideGroup {
  display: none;
}
.lyteDropdownWithDeselectIcon lyte-drop-button {
  padding-left: 70px;
}
.lyteDropdownDeselectIcon {
  width: 18px;
  height: 18px;
  position: absolute;
  left: 25px;
  top: 50%;
  transform: translateY(-50%);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
}
.lyteDropdownDeselectIcon:hover {
  background: var(--lyte-dropdown-deselect-icon-hover-bg);
}
.lyteDropdownDeselectIcon::after {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: -54px -2px;
  width: 8px;
  height: 8px;
  display: inline-block;
}
.lyteDropdownFieldLabel {
  margin-bottom: 10px;
  color: #555;
}
.lyteDropdownHorizontal {
  display: inline-flex;
  align-items: center;
}
.lyteDropdownHorizontal .lyteDropdownFieldLabel {
  margin-bottom: 0;
  margin-left: 10px;
}
@media only screen and (max-device-width: 650px) {
  lyte-drop-body {
    max-height: 70px;
  }
}
/* import theme overrides - styles */
/* import custom css */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/dropdown.less file
 */
/*  Dropdown related style ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
.lyteDockYield {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  overflow: hidden;
  pointer-events: none;
  display: flex;
  padding: 5px;
}
.lyteDockTopAlign {
  align-items: flex-start;
  justify-content: center;
}
.lyteDockBottomAlign {
  align-items: flex-end;
  justify-content: center;
}
.lyteDockLeftAlign {
  justify-content: flex-start;
  align-items: center;
}
.lyteDockRightAlign {
  justify-content: flex-end;
  align-items: center;
}
.lyteDock {
  border: 0.5px solid #18181c;
  background: rgba(21, 19, 21, 0.313);
  display: flex;
  border-radius: 10px;
  transition: 0.2s transform linear, width 0.2s linear;
  justify-content: center;
  box-sizing: border-box;
  pointer-events: auto;
}
.lyteDockIconWrapper {
  width: calc(var(--lyte-dock-icon-wrapper-size)*1px);
  height: calc(var(--lyte-dock-icon-wrapper-size)*1px);
  display: flex;
  justify-content: flex-end;
  gap: 10px;
  align-items: center;
  position: relative;
  transition: width 0.2s linear, height 0.2s linear, padding 0.2s linear;
}
.lyteDockPreventTransition,
.lyteDockPreventTransition .lyteDockIconWrapper {
  transition: none;
}
.lyteDockRightAlign .lyteDockIconWrapper,
.lyteDockLeftAlign .lyteDockIconWrapper {
  padding: 4px 0;
}
.lyteDockTopAlign .lyteDockIconWrapper,
.lyteDockBottomAlign .lyteDockIconWrapper {
  padding: 0 4px;
}
.lyteIcon {
  width: 100%;
  height: 100%;
  pointer-events: none;
}
.lyteDockTopAlign .lyteDock,
.lyteDockBottomAlign .lyteDock {
  max-height: calc(var(--lyte-dock-icon-max-size)*1px);
  /*  --lyte-dock-icon-max-size   */
  min-height: calc(var(--lyte-dock-icon-min-size)*1px);
  /*  --lyte-dock-icon-min-size   */
  padding: 0 6px;
}
.lyteDockRightAlign .lyteDock,
.lyteDockLeftAlign .lyteDock {
  flex-direction: column;
  max-width: calc(var(--lyte-dock-icon-max-size)*1px);
  min-width: calc(var(--lyte-dock-icon-min-size)*1px);
  padding: 6px 0;
}
.lyteDockTopAlign .lyteDock {
  align-items: flex-start;
  transform: translateY(-110%);
}
.lyteDockBottomAlign .lyteDock {
  align-items: flex-end;
  transform: translateY(110%);
}
.lyteDockRightAlign .lyteDock {
  align-items: flex-end;
  transform: translateX(110%);
}
.lyteDockLeftAlign .lyteDock {
  align-items: flex-start;
  transform: translateX(-110%);
}
.lyteDockTopAlign.lyteDockZoomed {
  padding-top: 9px;
}
.lyteDockTopAlign.lyteDockZoomed1 {
  padding-top: 6px;
}
.lyteDockTopAlign.lyteDockZoomed2 {
  padding-top: 3px;
}
.lyteDockRightAlign.lyteDockZoomed {
  padding-left: 9px;
}
.lyteDockRightAlign.lyteDockZoomed1 {
  padding-left: 6px;
}
.lyteDockRightAlign.lyteDockZoomed2 {
  padding-left: 3px;
}
.lyteDockLeftAlign.lyteDockZoomed {
  padding-right: 9px;
}
.lyteDockLeftAlign.lyteDockZoomed1 {
  padding-right: 6px;
}
.lyteDockLeftAlign.lyteDockZoomed2 {
  padding-right: 3px;
}
.lyteDockBottomTransform {
  transform: translateX(-50%);
}
.lyteDockBottomAlign.lyteDockZoomed {
  padding-bottom: 9px;
}
.lyteDockBottomAlign.lyteDockZoomed1 {
  padding-bottom: 6px;
}
.lyteDockBottomAlign.lyteDockZoomed2 {
  padding-bottom: 3px;
}
.lyteIcon.lyteDockEntered {
  width: 50px;
  height: 50px;
}
.lyteDockZoomed {
  width: calc(var(--zoom)*1px);
  height: calc(var(--zoom)*1px);
}
.lyteDockZoomed1 {
  width: calc(var(--zoom1)*1px);
  height: calc(var(--zoom1)*1px);
}
.lyteDockZoomed2 {
  width: calc(var(--zoom2)*1px);
  height: calc(var(--zoom2)*1px);
}
.lyteDockHidden {
  display: none;
}
.lyteDockTooltip {
  padding: 3px 7px;
  background: #000;
  display: none;
  color: #fff;
  border-radius: 5px;
}
.lyteDockIconWrapper:hover .lyteDockTooltip {
  display: block;
}
.lyteDockLeftAlign .lyteDockIconWrapper {
  flex-direction: row-reverse;
}
.lyteDockTopAlign .lyteDockIconWrapper {
  flex-direction: column-reverse;
}
.lyteDockBottomAlign .lyteDockIconWrapper {
  flex-direction: column;
}
.lyteDock.lyteDockShow {
  transform: translate(0);
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-combobox {
  font-family: var(--lyte-primary-font);
}
lyte-combobox lyte-dropdown {
  display: block;
  width: 100%;
  max-width: unset;
}
.lyteComboboxButtonSearch.lyteComboboxSearchPresent .lyteDropPlaceholderNormal,
.lyteComboboxButtonSearch.lyteComboboxSearchPresent .lyteDropdownLabel,
lyte-combobox.buttonSearch.lyteComboboxSearchPresent .lyteDropPlaceholderNormal,
lyte-combobox.buttonSearch.lyteComboboxSearchPresent .lyteDropdownLabel {
  position: absolute;
  z-index: 5;
  pointer-events: none;
  padding-right: 20px;
}
.lyteComboboxButtonSearch .lyteDropButtonDown .lyteDropdownLabel,
.lyteComboboxButtonSearch .lyteDropButtonUp .lyteDropdownLabel,
lyte-combobox.buttonSearch .lyteDropButtonDown .lyteDropdownLabel,
lyte-combobox.buttonSearch .lyteDropButtonUp .lyteDropdownLabel {
  opacity: 0.5;
}
.lyteComboboxFiltering .lyteDropPlaceholderNormal,
.lyteComboboxButtonSearch .lyteComboboxFiltering .lyteDropdownLabel {
  opacity: 0;
}
.lyteComboboxBtnSearchInput {
  width: 100%;
}
.lyteInput.lyteComboboxBtnSearchInput[lt-prop-type="search"] .lyteComboboxBtnSearchOrigIpt {
  padding: 0;
  padding-right: 20px;
}
.lyteComboboxBtnSearchInput.lyteInputFocus .lyteField,
.lyteComboboxBtnSearchInput .lyteField:hover,
.lyteComboboxBtnSearchInput .lyteField {
  border: 0;
}
.lyteComboboxBtnSearchInput[lt-prop-type="search"] .searchIcon {
  right: 0;
}
.lyteComboboxDropboxSearch {
  box-sizing: border-box;
  width: 100%;
}
.lyteComboboxDropboxSearch.lyteInputBox {
  padding: 15px;
}
.lyteComboboxFieldLabel {
  display: inline-block;
  vertical-align: middle;
  margin-bottom: 10px;
  color: #555;
}
.lyteComboboxHorizontal {
  display: flex;
  align-items: center;
}
.lyteComboboxHorizontal .lyteComboboxFieldLabel {
  margin-bottom: 0;
  margin-left: 10px;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-dateselect lyte-dropdown {
  display: block;
}
.lyteCalendarSelected,
.lyteDateSelect lyte-item:hover {
  background: #e8e8e8;
}
.lyteDateSelectHidden {
  display: none !important;
}
#lyteDateSelect lyte-drop-body {
  max-height: none;
  overflow: visible;
}
#lyteDateSelect lyte-drop-item {
  white-space: nowrap;
}
#lyteDateSelect lyte-drop-item[selected="true"] .dateArrow {
  position: absolute;
  width: 10px;
  height: 10px;
  transform: rotate(45deg);
  background: var(--lyte-dateselect-bg);
  left: -4px;
  top: calc(50% - 5px);
  z-index: -1;
  box-shadow: -1px 1px var(--lyte-dateselect-border-color);
}
lyte-drop-item[selected="true"].lyteDateSelectTempSelection::before {
  content: none;
}
.lyteDateSelectPrevTempSelection::before {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: -33px -15px;
  width: 9px;
  height: 7px;
  position: absolute;
  right: 10px;
  top: 15px;
}
#lyteDateSelect lyte-drop-item[selected="true"] .dateArrow.arrowLeft {
  right: -4px;
  box-shadow: 1px -1px var(--lyte-dateselect-border-color);
  left: unset;
}
#lyteDateSelect lyte-drop-item[selected="true"] {
  overflow: visible;
}
.dateSelectcal {
  position: absolute;
  z-index: var(--lyte-dateselect-zindex);
}
#lyteDateSelect,
.dateSelectcal .lyteDsBeforeCal,
.dateSelectcal .specificDate,
.dateSelectcal .customRange {
  opacity: 0;
  transition: height 0.3s, opacity 0.3s, transform 0.3s;
  transform-origin: top;
}
#lyteDateSelect.lyteDateselectAnimate,
.dateSelectcal.lyteDateselectAnimate .specificDate,
.dateSelectcal.lyteDateselectAnimate .customRange {
  opacity: 1;
}
.dateSelectcal.lyteDateselectAnimate .specificDate,
.dateSelectcal.lyteDateselectAnimate .customRange,
.lyteDateselectAnimationHappening {
  overflow: hidden;
}
#lyteDateSelect.lyteDateselectUp,
.dateSelectcal.lyteDateselectUp .specificDate,
.dateSelectcal.lyteDateselectUp .customRange {
  transform-origin: bottom;
}
.dateSelectcal .lyteDsBeforeCal,
.dateSelectcal .specificDate,
.dateSelectcal .customRange {
  display: flex;
  flex-direction: column;
  box-shadow: var(--lyte-dateselect-popover-boxshadow-color);
  border-radius: 2px;
}
.dateSelectcal .lyteDsBeforeCal.lyteDropdownHidden,
.dateSelectcal .specificDate.lyteDropdownHidden,
.dateSelectcal .customRange.lyteDropdownHidden {
  display: none;
}
.dateSelectcal .lyteDsBeforeCal lyte-calendar,
.dateSelectcal lyte-daterangepicker,
.dateSelectcal .specificDate lyte-calendar {
  border: 1px solid var(--lyte-dateselect-border-color);
  border-radius: 2px 2px 0 0;
}
.dateSelectcal .lyteDateRangePickerRow,
.dateSelectcal .lyteCalendarPopup {
  border: 0;
  box-shadow: none;
  border-radius: 2px 2px 0 0;
}
.dateSelectcal lyte-button {
  padding: 10px;
  margin-right: auto;
}
.dateSelectcal .lyteCalCurrentDate {
  display: none;
}
#lyteDateSelect lyte-drop-item {
  padding-left: 25px;
}
#lyteDateSelect lyte-drop-item.lyteDS_SecondaryOptItem::after {
  content: '';
  position: absolute;
  background-image: var(--lyte-sprite-image);
  background-position: -1px -2px;
  width: 8px;
  height: 4px;
  transform: rotate(90deg);
  left: 10px;
  top: calc(50% - 2px);
  opacity: 0.5;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-file-message,
lyte-fileupload,
lyte-file-select-area {
  font-family: var(--lyte-primary-font);
  display: block;
}
.lyteFileUpdMsgWrap {
  font-size: var(--lyte-fileupload-msg-wrap-font-size);
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  background: var(--lyte-fileupload-bg);
  text-align: center;
  color: var(--lyte-fileupload-msg-text-color);
}
.lyteFileUpdBoxType .lyteFileUpdMsgWrap {
  border-radius: 10px;
  padding: 30px;
  border: 1px dashed var(--lyte-fileupload-message-wrap-border-color);
}
.lyteFileUpdBoxType .lyteFileUpdMsgWrap:hover {
  border: 1px dashed var(--lyte-fileupload-message-wrap-hover-border-color);
}
.fileDragEnter.lyteFileUpdInputType .lyteFileUpdMsgWrap,
.fileDragEnter.lyteFileUpdBoxType .lyteFileUpdMsgWrap {
  border: 1px dashed var(--lyte-fileupload-file-entered-message-wrap-border-color);
  background: var(--lyte-fileupload-file-entered-message-wrap-bg);
}
.lyteFileUpdMsg {
  position: relative;
  line-height: 21px;
}
.fileDragEnter .lyteFileUpdMsg {
  opacity: 0.7;
}
.lyteFileUpdBoxType .lyteFileUpdMsg {
  padding-right: 40px;
}
.lyteFileUpdBoxType .lyteFileUpdMsg::before {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: var(--lyte-fileupload-boxtype-icon-position);
  width: 30px;
  height: 21px;
  display: inline-block;
  position: absolute;
  right: 0;
}
.lyteFileUpdThumb {
  display: block;
  width: 23px;
  height: 23px;
  border-radius: 50%;
  border: 1px solid var(--lyte-fileupload-thumb-border-color);
}
.lyteFileUpdList {
  display: flex;
  flex-direction: column;
}
.multiFileupload .lyteFileUpdListFile {
  margin-bottom: 10px;
}
.multiFileupload .lyteFileUpdListFile:first-of-type {
  margin-top: 15px;
}
.lyteFileUpdListFile {
  position: relative;
  display: flex;
  padding: 10px 15px;
  background: var(--lyte-fileupload-list-file-bg);
  border: 1px solid var(--lyte-fileupload-list-file-border-color);
  border-radius: 10px;
  align-items: center;
}
.lyteFileUpdListFile.lyteFileError {
  background: var(--lyte-fileupload-list-file-error-bg);
  border: 1px solid var(--lyte-fileupload-list-file-error-border-color);
}
.lyteFileUpdTypePreview {
  margin-left: 10px;
}
.lyteFileUpdTypeIcon::after {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: -117px -198px;
  display: block;
  width: 21px;
  height: 26px;
}
.lyteFileUpdTypeIcon.pdf::after {
  background-position: -8px -198px;
}
.lyteFileUpdTypeIcon.video::after {
  background-position: -35px -198px;
}
.lyteFileUpdTypeIcon.image::after {
  background-position: -63px -198px;
}
.lyteFileUpdTypeIcon.zip::after {
  background-position: -90px -198px;
}
.lyteFileUpdFileName {
  color: var(--lyte-fileupload-file-name-text-color);
  font-size: var(--lyte-fileupload-file-name-font-size);
  margin-left: 10px;
  max-width: calc(100% - 300px);
  white-space: nowrap;
}
.lyteFileUpdListFile.lyteFileSuccess .lyteFileUpdFileName {
  max-width: calc(100% - 150px);
}
.lyteFileUpdFileSize {
  font-size: var(--lyte-fileupload-file-size-font-size);
  color: var(--lyte-fileupload-msg-text-color);
  margin-left: auto;
  white-space: nowrap;
}
.lyteFileUpdFileStatus {
  display: flex;
  margin-left: 10px;
}
.lyteFileUpdProgressBar {
  height: 5px;
  width: 140px;
  background: var(--lyte-fileupload-progressbar-bg);
  flex-grow: 1;
  border-radius: 5px;
}
.lyteFileUpdProgressFill {
  height: 5px;
  background: var(--lyte-fileupload-progressbar-fill-bg);
  width: 0;
  border-radius: 5px;
  transition: width 0.1s linear;
}
lyte-file-retry {
  display: inline-flex;
  margin-left: 10px;
}
.lyteFileUpdFailMsg {
  font-size: var(--lyte-fileupload-failure-msg-font-size);
  color: var(--lyte-fileupload-failure-msg-text-color);
  margin-left: 10px;
  cursor: default;
}
.lyteFileUpdRetryMsg {
  font-size: var(--lyte-fileupload-retry-msg-font-size);
  color: var(--lyte-fileupload-retry-color);
  text-decoration: underline;
  cursor: pointer;
}
.lyteFileUpdRetryMsg:hover {
  color: var(--lyte-fileupload-file-name-text-color);
}
lyte-file-close {
  cursor: pointer;
  background-image: var(--lyte-sprite-image);
  background-position: -347px -157px;
  width: 17px;
  height: 17px;
  opacity: 0.4;
  display: inline-flex;
  flex-shrink: 0;
}
.lyteFileUpdListFile.lyteFileSuccess lyte-file-close {
  visibility: hidden;
}
.lyteFileUpdListFile.lyteFileSuccess:hover lyte-file-close {
  visibility: visible;
}
lyte-file-close:hover {
  opacity: 0.7;
}
.lyteFileUpdBoxType #lyteFileUpdSelectedFile {
  background: #ddd;
  border: 1px solid #ccc;
}
.lyteFileUpdInputType .lyteFileUpdMsgWrap {
  padding: 7px 10px;
  border-radius: 3px;
  border: 1px dashed var(--lyte-fileupload-input-type-message-wrap-border-color);
  background: var(--lyte-fileupload-bg);
  text-align: right;
}
.lyteFileUpdInputType .lyteFileUpdMsgWrap:hover {
  border: 1px dashed var(--lyte-fileupload-input-type-message-wrap-hover-border-color);
}
.lyteFileUpdInputType .lyteFileUpdListFile {
  padding: 7px 10px;
  border: 1px dashed var(--lyte-fileupload-input-type-file-sucess-border-color);
  border-radius: 3px;
  background: var(--lyte-fileupload-bg);
}
.lyteFileUpdInputType .lyteFileUpdListFile.lyteFileError {
  background: var(--lyte-fileupload-list-file-error-bg);
  border: 1px dashed var(--lyte-fileupload-list-file-error-border-color);
}
.lyteFileUpdInputType .lyteFileUpdFileName {
  line-height: 21px;
  font-size: var(--lyte-fileupload-inputtype-file-name-font-size);
  max-width: calc(100% - 250px);
}
.lyteFileUpdInputType .lyteFileUpdListFile.lyteFileSuccess .lyteFileUpdFileName {
  max-width: calc(100% - 90px);
}
.lyteFileUpdInputType lyte-file-close {
  background-position: -324px -162px;
  width: 10px;
  height: 10px;
}
.lyteFileUpdBtnType .lyteFileUpdMsgWrap {
  width: 30px;
  height: 30px;
  background: #4ea2f7;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.lyteFileUpdBtnType .lyteFileUpdMsgWrap::after {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: var(--lyte-fileupload-buttontype-icon-position);
  width: 15px;
  height: 19px;
  display: block;
}
.lyteFileUpdListFile.lyteFileError .lyteFileUpdFileStatus,
.lyteFileUpdListFile.lyteFileSuccess .lyteFileUpdFileStatus,
.lyteFileUpdBtnType .lyteFileUpdMsg,
.fileuploadInput,
.lyteFileUpdInputType .lyteFileUpdTypePreview,
.lyteFileUpdBoxType .lyteFileUpdMsgWrap.lyteHide,
lyte-fileupload .lyteHide {
  display: none;
}
.lyteFileUpdDisabled {
  pointer-events: none;
  opacity: 0.6;
}
.lyteFileDragWrapper {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 15;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* Autocomplete styles BEGINS */
lyte-autocomplete {
  position: relative;
  display: inline-block;
}
lyte-autocomplete lyte-dropdown {
  /*  Since this mixin is provided, This mixin can not be removed immediately */
  display: block;
}
lyte-autocomplete lyte-dropdown lyte-drop-button {
  border: 0;
  padding: 0;
}
lyte-autocomplete lyte-input {
  display: block;
}
lyte-autocomplete lyte-input.lyteInputBox .lyteInputBoxSearch input {
  padding-right: 10px;
}
lyte-autocomplete lyte-input.lyteInputBox input {
  padding-left: 25px;
  font-size: var(--lyte-autocomplete-input-font-size);
}
lyte-autocomplete.searchPresent lyte-input.lyteInputBox input {
  padding-left: 60px;
}
lyte-autocomplete .lyteDropButtonDown lyte-input.lyteInputBox .lyteField,
lyte-autocomplete .lyteDropButtonDown lyte-input.lyteInputBox input {
  border-radius: 2px 2px 0 0;
}
lyte-autocomplete .lyteDropButtonUp lyte-input.lyteInputBox .lyteField,
lyte-autocomplete .lyteDropButtonUp lyte-input.lyteInputBox input {
  border-radius: 0 0 2px 2px;
}
lyte-autocomplete lyte-dropdown lyte-drop-button.lyteDropButtonUp,
lyte-autocomplete lyte-dropdown lyte-drop-button.lyteDropButtonDown,
lyte-autocomplete lyte-dropdown .lyteDummyEventContainer:focus lyte-drop-button,
lyte-autocomplete lyte-dropdown .lyteDummyEventContainer:focus lyte-drop-button:hover,
lyte-autocomplete lyte-dropdown lyte-drop-button:hover,
lyte-autocomplete lyte-dropdown lyte-drop-button.lyteDropButtonDown:hover,
lyte-autocomplete lyte-dropdown lyte-drop-button.lyteDropButtonUp:hover {
  border: 0;
  box-shadow: none;
}
lyte-autocomplete lyte-dropdown .lyteDummyEventContainer:focus .lyteField,
lyte-autocomplete .lyteDropButtonDown lyte-input.lyteInputBox .lyteField,
lyte-autocomplete .lyteDropButtonUp lyte-input.lyteInputBox .lyteField {
  border: 1px solid var(--lyte-autocomplete-focus-border-color);
}
.lyteAutoCompCloseIcon {
  background-image: var(--lyte-sprite-image);
  background-position: -54px -2px;
  width: 8px;
  height: 8px;
  display: inline-block;
  vertical-align: top;
}
.lyteAutoCompCloseIconWrapper {
  left: 5px;
  top: calc(50% - 12px);
  padding: 8px;
  height: 8px;
  position: absolute;
  cursor: pointer;
  z-index: 10;
  opacity: 0.5;
}
lyte-autocomplete.searchPresent .lyteAutoCompCloseIconWrapper {
  left: 40px;
}
.lyteAutoCompCloseIconWrapper:hover {
  opacity: 1;
}
lyte-autocomplete lyte-input[lt-prop-type="search"] .searchIcon {
  right: auto;
  left: 10px;
  top: calc(50% - 7.5px);
  z-index: 10;
  cursor: default;
  opacity: 0.7;
}
.iconSeparator {
  height: 24px;
  border-left: 1px solid var(--lyte-autocomplete-icon-separator-color);
  left: 35px;
  top: calc(50% - 12px);
  display: inline-block;
  position: absolute;
  z-index: 10;
}
lyte-autocomplete-description {
  opacity: 0.4;
  font-size: var(--lyte-autocomplete-description-font-size);
  align-self: center;
  white-space: nowrap;
}
.lyteautocompleteError {
  display: block;
  box-sizing: border-box;
  text-align: center;
  font-size: var(--lyte-autocomplete-error-font-size);
  color: var(--lyte-autocomplete-errormsg-color);
  padding: 5px 15px 15px;
}
lyte-drop-item .lyteAutoComplete {
  color: var(--lyte-autocomplete-text-color);
  font-family: var(--lyte-primary-font);
  max-width: 100%;
  overflow-wrap: break-word;
}
.lyteautocompleteDropdown {
  border: 1px solid var(--lyte-autocomplete-dropbox-border-color);
  border-top: 1px solid var(--lyte-autocomplete-dropbox-border-color);
  box-shadow: 0px 3px 6px 0px var(--lyte-autocomplete-box-shadow);
}
.lyteautocompleteDropdown.lyteDropdownDown {
  transform: translateY(5px);
}
.lyteautocompleteDropdown.lyteDropdownUp {
  transform: translateY(-5px);
}
.lyteautocompleteDropdown lyte-drop-item {
  padding-right: 10px;
  display: flex;
}
.lyteautocompleteDropdown lyte-drop-item[selected='true']::before {
  content: none;
}
.lyteautocompleteHighlight {
  color: var(--lyte-autocomplete-highlight-color);
  background: var(--lyte-autocomplete-highlight-bg);
}
.lyteautocompleteDropdown lyte-drop-item.lyteSearchHidden {
  display: none;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/autocomplete.less file
 */
/* Autocomplete styles ENDS */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* Breadcrumb styles BEGINS */
lyte-breadcrumb,
.lyte-breadcrumb-structure {
  display: inline-block;
}
lyte-breadcrumb-body {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-breadcrumb-body-font-size);
  color: var(--lyte-breadcrumb-text-color);
  cursor: pointer;
}
lyte-breadcrumb-body:hover {
  color: var(--lyte-breadcrumb-hover-text-color);
}
.lyteActive lyte-breadcrumb-body {
  color: var(--lyte-breadcrumb-active-text-color);
}
lyte-breadcrumb-item {
  padding: 0;
  font-size: var(--lyte-breadcrumb-item-font-size);
  margin-left: 25px;
  display: inline-block;
  position: relative;
}
lyte-breadcrumb-item::after {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: -42px -1px;
  width: 6px;
  height: 9px;
  position: absolute;
  left: -18px;
  top: calc(50% - 9px/2);
  opacity: 0.5;
  transform: rotate(180deg);
}
lyte-breadcrumb-item:last-child {
  margin-left: 0;
}
lyte-breadcrumb-item:last-child::after {
  content: none;
}
.lyteBreadcrumbCollapseSection > lyte-yield {
  display: flex;
}
.lyteBreadcrumbCollapsibleContainer lyte-breadcrumb-structure {
  display: flex;
  align-items: center;
}
.lyteBreadcrumbCollapsibleContainer lyte-breadcrumb-item {
  margin-right: 40px;
}
.lyteBreadcrumbFirst lyte-breadcrumb-item:last-of-type {
  margin-right: 38px;
}
.lyteBreadcrumbLast lyte-breadcrumb-item:last-of-type {
  margin-right: 0;
}
.lyteBreadcrumbCollapsibleContainer lyte-breadcrumb-item::after {
  right: -23px;
}
.lyteBreadcrumbShrinkButton {
  border: 1px solid transparent;
  padding: 0;
  height: 25px;
  width: 25px;
  border-radius: 3px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.lyteBreadcrumbCollapsibleContainer .lyteBreadcrumbShrinkButton:hover,
.lyteBreadcrumbCollapsibleContainer .lyteDummyEventContainer:focus .lyteBreadcrumbShrinkButton:hover,
.lyteBreadcrumbCollapsibleContainer .lyteDummyEventContainer:focus .lyteBreadcrumbShrinkButton {
  border: 1px solid transparent;
  box-shadow: none;
}
.lyteBreadcrumbCollapsibleContainer lyte-drop-button.lyteDropButtonUp,
.lyteBreadcrumbCollapsibleContainer lyte-drop-button.lyteDropButtonDown,
.lyteBreadcrumbCollapsibleContainer .lyteDummyEventContainer:focus lyte-drop-button.lyteBreadcrumbShrinkButton.lyteDropButtonDown,
.lyteBreadcrumbCollapsibleContainer .lyteDummyEventContainer:focus lyte-drop-button.lyteBreadcrumbShrinkButton.lyteDropButtonUp {
  border: 1px solid transparent;
  box-shadow: none;
  background: #DDE1E4;
  border-radius: 3px;
}
.lyteBreadcrumbCollapsibleContainer .lyteDummyEventContainer:focus-visible .lyteBreadcrumbShrinkButton {
  border: 1px solid #0984E3;
  background-color: #fff;
  box-shadow: 0px 0px 5px 1px #0984E333;
}
.lyteBreadcrumbCollapseIcon {
  -webkit-mask-image: var(--lyte-sprite-image);
  -webkit-mask-position: -295px -165px;
  mask-image: var(--lyte-sprite-image);
  mask-position: -295px -165px;
  display: inline-block;
  width: 16px;
  height: 4px;
  background-color: #7B7C7D;
}
.lyteBreadcrumbFirst lyte-breadcrumb-item:last-child::after {
  content: '';
}
.lyteBreadcrumbCollapseShowElem {
  position: relative;
  display: flex;
  align-items: center;
  padding-right: 35px;
}
.lyteBreadcrumbCollapseShowElem::after {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: -42px 0px;
  width: 6px;
  height: 11px;
  opacity: 0.5;
  position: absolute;
  right: 17px;
}
.lyteBreadcrumbCollapsibleContainer lyte-drop-button.lyteDropButtonUp .lyteBreadcrumbCollapseIcon,
.lyteBreadcrumbCollapsibleContainer lyte-drop-button.lyteDropButtonDown .lyteBreadcrumbCollapseIcon,
.lyteBreadcrumbCollapseShowElem:hover .lyteBreadcrumbCollapseIcon {
  background-color: #5B5D5F;
}
.lyteBreadcrumbDropdown.lyteDropdownUp .lyteArrow,
.lyteBreadcrumbDropdown.lyteDropdownDown .lyteArrow {
  display: none;
}
.lyteBreadcrumbDropdown.lyteDropdownDown {
  transform: translateY(5px);
}
.lyteBreadcrumbDropdown.lyteDropdownUp {
  transform: translateY(-5px);
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/breadcrumb.less file
 */
/* Breadcrumb styles ENDS */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* modal Styles BEGINS */
.lyteModal {
  background: var(--lyte-modal-bg);
  box-shadow: var(--lyte-modal-box-shadow-color);
  position: absolute;
  z-index: 10;
  opacity: 0;
  box-sizing: border-box;
  font-family: var(--lyte-primary-font);
  border-radius: 2px;
  border: 1px solid transparent;
  transition: transform 0.3s ease, opacity 0.3s ease;
}
.bodyWrapper {
  overflow: hidden;
}
.modalWrapper {
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: var(--lyte-modal-zindex);
  position: fixed;
  overflow: auto;
}
.modalWrapper.noFreeze {
  pointer-events: none;
}
.modalWrapper.noFreeze .lyteModal {
  pointer-events: auto;
}
lyte-modal-header {
  font-size: var(--lyte-modal-header-font-size);
  color: var(--lyte-modal-header-text-color);
  font-family: var(--lyte-secondary-font);
  padding: 25px 25px 15px;
  overflow-wrap: break-word;
}
lyte-modal-content {
  padding: 15px 25px;
  box-sizing: border-box;
  font-size: var(--lyte-modal-content-font-size);
  color: var(--lyte-modal-content-text-color);
}
lyte-modal-footer {
  padding: 10px 25px 25px;
}
lyte-modal-header,
lyte-modal-content,
lyte-modal-footer {
  display: block;
  box-sizing: border-box;
}
.modalWrapper.scrollable {
  overflow: hidden;
}
.modalWrapper.scrollable lyte-modal-content {
  overflow: auto;
}
.lyteModalHidden lyte-modal-freeze {
  pointer-events: none;
  opacity: 0;
}
lyte-modal-freeze {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 5;
  background: var(--lyte-modal-freeze-bg);
  display: block;
  opacity: var(--lyte-modal-freeze-opacity);
  transition: opacity ease 0.15s;
  transform: translate3d(0, 0, 0);
}
.lyteModalClose {
  background-image: var(--lyte-sprite-image);
  background-position: -52px 0px;
  width: 13px;
  height: 13px;
  opacity: 0.5;
  cursor: pointer;
  position: absolute;
  top: 30px;
  left: 30px;
  display: inline-block;
  transform: scale(1.3);
  z-index: 5;
  outline: none;
}
.lyteModalClose:hover {
  opacity: 1;
}
lyte-modal-footer.left {
  text-align: right;
}
lyte-modal-footer.center {
  text-align: center;
}
lyte-modal-footer.right {
  text-align: left;
}
lyte-modal-footer lyte-button {
  margin-right: 7px;
}
lyte-modal-footer lyte-button:first-child {
  margin-right: 0;
}
.lyteModalFromLeft,
.lyteModalFromRight,
.lyteModalFromTop,
.lyteModalFromBottom,
.lyteModalFadeIn {
  opacity: 1;
}
.lyteModalHeaderDraggable {
  cursor: move;
  touch-action: none;
}
.lyteModal.lyteZoom {
  transform-origin: center;
}
.lyteModal.lyteModalFromRight {
  left: 100%;
}
.lyteModalYieldWithPadding {
  display: flex;
  flex-direction: column;
  max-height: inherit;
  height: inherit;
  padding: var(--lyte-modal-yield-padding);
  box-sizing: border-box;
}
.lyteModalDisplayNone {
  display: none;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/modal.less file
 */
/* modal Styles ENDS */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-multi-dropdown {
  max-width: 330px;
  display: inline-block;
}
lyte-multi-dropdown lyte-dropdown {
  max-width: 100%;
  display: block;
}
lyte-multi-dropdown lyte-dropdown[lt-prop-type="multiple"] lyte-drop-button {
  padding: 9px 10px 9px 25px;
}
.lyteMultiDropdownDropbox lyte-drop-item {
  padding: 8px 25px 8px 15px;
  display: block;
}
lyte-multi-dropdown .lyteMultipleSelect {
  margin: 0;
  padding: 0;
}
lyte-multi-dropdown .lyteMultipleSelect li {
  margin-bottom: 0;
}
lyte-multi-dropdown .lyteMultipleSelect .lyteMultiDropdownNmoreElem {
  background: #5ba1e5;
  border: 1px solid transparent;
  color: #fff;
  padding: 1px 7px 2px 7px;
  cursor: pointer;
}
.lyteMultiDropdownTagHovercard.lyteHovercardPopover .lytePopover {
  background: #fff;
  border: 1px solid #e0e0e0;
}
.lyteMultiDropdownTagHovercard.lyteHovercardPopover .lytePopoverArrowIcon {
  background: #fff;
}
.lyteMultiDropdownTagHovercard .lytePopoverArrowIcon.lytePopoverArrowBottom {
  box-shadow: 1px 1px 0 0 #e0e0e0;
}
.lyteMultiDropdownTagHovercard .lytePopoverArrowIcon.lytePopoverArrowTop {
  box-shadow: -1px -1px 0 0 #e0e0e0;
}
.lyteMultiDropdownTagHovercard .hoverCardWrapper {
  max-width: 450px;
}
.lyteMultiDropdownTagHovercard .lyteMultipleSelect {
  display: flex;
  flex-wrap: wrap;
  margin: 0;
  padding: 0;
}
lyte-multi-dropdown .lyteMultipleSelect lyte-text {
  vertical-align: bottom;
}
.lyteMultiDropdownCheckBoxTypeDropbox lyte-drop-group.lyteDropdownHideGroup,
.lyteMultiDropdownDropbox lyte-drop-group.lyteDropdownHideGroup,
.lyteMultiDropdownCheckBoxTypeDropbox lyte-drop-item {
  display: block;
}
.lyteMultiDropdownCheckBoxTypeDropbox lyte-drop-item::before {
  content: none;
}
lyte-multi-dropdown .lyteDropPlaceholderMultiple {
  padding: 0;
}
.lyteMultiDropSelectedText {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  display: block;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* Gridstack styles BEGINS  */
lyte-gridstack {
  display: block;
  position: relative;
  height: auto;
  width: 1090px;
  color: var(--lyte-gridstack-text-color);
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-gridstack-font-size);
}
.lyteGridstackScope {
  outline: none;
  overflow: auto;
  position: relative;
  transition: height 0.3s ease;
  background: var(--lyte-gridstack-squares-bg);
  background-repeat: repeat;
  min-height: 600px;
}
.lyteGridstackHandler {
  background: var(--lyte-gridstack-item-bg);
  border: 1px solid var(--lyte-gridstack-item-border-color);
  position: absolute;
  overflow: auto;
  cursor: move;
  box-sizing: border-box;
  border-radius: 2px;
  transition: all 0.2s linear;
}
.lyteGridstackHandler:hover {
  border-color: var(--lyte-gridstack-item-hover-border-color);
}
.lyteGridstackHandler.gridSelected,
.lyteGridstackHandler.lyteGridFocused {
  z-index: 22;
  position: absolute;
  cursor: move;
  box-sizing: border-box;
  border: 1px solid var(--lyte-gridstack-item-focus-border-color);
  overflow: visible;
  transition: none;
}
.lyteGridstackHandler .lyteGridResize {
  display: none;
}
.lyteGridstackHandler.lyteGridFocused > .lyteGridResize {
  display: block;
}
.lyteGridstackHandler.lyteGridStackMove > .lyteGridResize {
  display: none;
}
lyte-gridstack:not(.gridFreezeMode) .lyteBestFit {
  z-index: 0;
  position: absolute;
  opacity: 0.4;
}
lyte-gridstack:not(.gridFreezeMode) .lyteBestFit.lyteGrid {
  background: var(--lyte-gridstack-bestfit-grid-bg);
}
lyte-grid-content {
  top: 0px;
  bottom: 0px;
  right: 0px;
  left: 0px;
  position: absolute;
}
lyte-gridstack .lyteGridResize {
  height: 7px;
  width: 7px;
  z-index: 20;
  border: 1px solid var(--lyte-gridstack-item-focus-border-color);
  background: var(--lyte-gridstack-resize-square-bg);
  position: absolute;
}
lyte-gridstack .lyteGridStackTop {
  right: calc(50% - 4px);
  top: -5px;
  cursor: n-resize;
}
lyte-gridstack .lyteGridStackTopLeft {
  right: -5px;
  top: -5px;
  cursor: ne-resize;
}
lyte-gridstack .lyteGridStackTopRight {
  left: -5px;
  top: -5px;
  cursor: nw-resize;
}
lyte-gridstack .lyteGridStackBottom {
  right: calc(50% - 4px);
  bottom: -5px;
  cursor: s-resize;
}
lyte-gridstack .lyteGridStackBottomLeft {
  right: -5px;
  bottom: -5px;
  cursor: se-resize;
}
lyte-gridstack .lyteGridStackBottomRight {
  left: -5px;
  bottom: -5px;
  cursor: sw-resize;
}
lyte-gridstack .lyteGridStackRight {
  top: calc(50% - 4px);
  left: -5px;
  cursor: col-resize;
}
lyte-gridstack .lyteGridStackLeft {
  top: calc(50% - 4px);
  right: -5px;
  cursor: col-resize;
}
lyte-gridstack.gridFreezeMode .lyteGridstackHandler {
  cursor: default;
}
lyte-gridstack.gridFreezeMode .lyteGridstackHandler.lyteGridFocused {
  border-color: var(--lyte-gridstack-freeze-mode-item-focused-border-color);
}
lyte-gridstack.gridFreezeMode .lyteGridstackHandler .lyteGridResize {
  display: none;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/gridstack.less file
 */
/* Gridstack styles ENDS  */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Menu CSS BEGINS  */
lyte-menu-box {
  box-sizing: border-box;
  z-index: var(--lyte-menu-zindex);
  vertical-align: middle;
  width: auto;
  position: absolute;
  top: -9999px;
  right: -9999px;
  outline: none;
  font-family: var(--lyte-primary-font);
  box-shadow: var(--lyte-menu-boxshadow-color);
  border-radius: 2px;
}
lyte-menu-body {
  overflow: auto;
  display: block;
  outline: none;
  background: var(--lyte-menu-bg);
  border: 1px solid var(--lyte-menu-border-color);
  border-radius: 2px;
  padding: 5px 0;
}
lyte-menu-item {
  position: relative;
  cursor: pointer;
  display: flex;
  white-space: nowrap;
  text-align: right;
  font-size: var(--lyte-menu-item-font-size);
  padding: 5px 15px;
  z-index: 1;
  color: var(--lyte-menu-item-text-color);
}
.lyteMenuSelection {
  background: var(--lyte-menu-item-hover-bg);
}
lyte-menu-label {
  font-size: var(--lyte-menu-label-font-size);
  color: var(--lyte-menu-label-text-color);
  margin-left: 30px;
  white-space: normal;
  word-break: break-word;
}
lyte-menu-header {
  display: block;
  height: auto;
  color: var(--lyte-menu-header-text-color);
  font-family: var(--lyte-secondary-font);
  font-size: var(--lyte-menu-header-font-size);
  text-align: right;
  cursor: default;
  padding: 3px 15px 4px 15px;
}
lyte-menu-description {
  font-size: var(--lyte-menu-description-font-size);
  margin-right: auto;
  opacity: 0.5;
  color: var(--lyte-menu-desc-text-color);
}
lyte-menu-group {
  border-bottom: 1px solid var(--lyte-menu-group-border-color);
  display: block;
  padding: 5px 0;
}
lyte-menu-group:first-of-type {
  border-top: 0;
  padding-top: 0;
}
lyte-menu-group:last-of-type {
  border-bottom: 0;
  padding-bottom: 0;
}
lyte-menu-group:last-of-type + lyte-menu-item {
  border-top: 1px solid var(--lyte-menu-group-border-color);
}
lyte-menu {
  display: none;
}
.lytemenufreezelayer {
  opacity: 0.1;
  background: var(--lyte-menu-bg);
  position: fixed;
  z-index: calc(var(--lyte-menu-zindex) - 5);
}
.lytemenufreezelayer.top {
  top: 0;
  width: 100%;
}
.lytemenufreezelayer.bottom {
  bottom: 0;
  width: 100%;
}
.lytemenufreezelayer.left {
  left: 0;
}
.lytemenufreezelayer.right {
  right: 0;
  width: 100%;
}
.lytemenufreezelayer.nogroup {
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}
.lyteMenuWrapperDiv {
  overflow: auto;
}
lyte-menu-box .lyteArrow {
  width: 11px;
  height: 11px;
  position: absolute;
  background: var(--lyte-menu-bg);
  transform: rotate(45deg);
}
lyte-menu-box .lyteArrow::after,
lyte-menu-box .lyteArrow::before {
  content: none;
}
lyte-menu-box .lyteArrow.lyteArrowTop {
  box-shadow: -1px -1px 0 0 var(--lyte-menu-border-color);
  top: -4px;
}
lyte-menu-box .lyteArrow.lyteArrowBottom {
  box-shadow: 1px 1px 0 0 var(--lyte-menu-border-color);
  bottom: -4px;
}
lyte-menu-box .lyteArrow.lyteArrowLeft {
  box-shadow: 1px -1px 0 0 var(--lyte-menu-border-color);
  right: -4px;
}
lyte-menu-box .lyteArrow.lyteArrowRight {
  box-shadow: -1px 1px 0 0 var(--lyte-menu-border-color);
  left: -4px;
  right: unset;
}
.lyteMenuHidden {
  display: none !important;
}
lyte-menu-box.lyteAnimate {
  transition: top 0.4s ease;
}
lyte-menu-box.lyteAnimate lyte-menu-body {
  transition: height 0.4s ease;
  overflow: hidden;
}
.lyteHoverMenu lyte-menu-body::before {
  content: '';
  position: absolute;
}
.lyteHoverMenu.topPlace lyte-menu-body::before,
.lyteHoverMenu.bottomPlace lyte-menu-body::before {
  height: 10px;
  left: 0;
  right: 0;
}
.lyteHoverMenu.leftPlace lyte-menu-body::before,
.lyteHoverMenu.rightPlace lyte-menu-body::before {
  width: 10px;
  top: 0;
  bottom: 0;
}
.lyteHoverMenu.bottomPlace lyte-menu-body::before {
  top: -10px;
}
.lyteHoverMenu.topPlace lyte-menu-body::before {
  bottom: -10px;
}
.lyteHoverMenu.leftPlace lyte-menu-body::before {
  right: -10px;
}
.lyteHoverMenu.rightPlace lyte-menu-body::before {
  left: -10px;
}
.lyteBodyWrapper {
  overflow: hidden;
}
.lyteMenuItemDisabled {
  opacity: 0.4;
  cursor: not-allowed;
}
.lyteMenuAccordionContainer {
  display: flex;
  flex-direction: column;
  padding: 0;
}
.lyteMenuAccordionItem {
  transition: height 0.5s linear;
  overflow: hidden;
}
.lyteMenuAccordionItem lyte-menu-item {
  padding-right: 25px;
}
.lyteMenuAccordionClosed .lyteMenuAccordionItem {
  height: 0;
}
.lyteMenuAccordionContainer.lyteMenuSelection {
  background: transparent;
}
.lyteMenuAccordionContainer > lyte-menu-label {
  padding: 5px 15px;
  margin-left: 0;
  position: relative;
}
.lyteMenuAccordionContainer.lyteMenuSelection > lyte-menu-label {
  background: #ebebeb;
}
.lyteMenuAccordionContainer > lyte-menu-label::after {
  content: '';
  display: inline-block;
  background-image: var(--lyte-sprite-image);
  background-position: -1px -2px;
  width: 8px;
  height: 4px;
  position: absolute;
  top: 50%;
  left: 15px;
  transform: translateY(-50%) rotate(360deg);
  transition: transform 0.3s ease;
}
.lyteMenuAccordionOpened.lyteMenuAccordionContainer > lyte-menu-label::after {
  transform: translate(0%, -50%) rotate(180deg);
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/menu.less file
 */
/* Menu CSS ENDS  */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* Navigator CSS BEGINS  */
lyte-navigator {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-navigator-font-size);
  cursor: default;
}
.lyteNavigator {
  display: flex;
  align-items: center;
  -webkit-user-select: none;
  -ms-user-select: none;
  -moz-user-select: none;
}
/*  Single Arrow related common code BEGINS   */
.lyteNavigator .lyteIconSingleFront::before,
.lyteNavigator .lyteIconSingleBack::before,
.lyteSingleFront lyte-nav-arrow,
.lyteSingleBack lyte-nav-arrow {
  width: 8px;
  height: 15px;
  display: inline-block;
  background-image: var(--lyte-sprite-image);
  opacity: 0.9;
  transform: scale(0.8) rotate(180deg);
  cursor: pointer;
}
.lyteNavigator .lyteIconSingleBack::before,
.lyteSingleBack lyte-nav-arrow {
  background-position: -58px -29px;
}
.lyteNavigator .lyteIconSingleBack:not(.lyteDisabled):hover::before,
.lyteSingleBack:not(.lyteDisabled):hover lyte-nav-arrow {
  background-position: -21px -77px;
  opacity: 1;
}
.lyteNavigator .lyteIconSingleFront::before,
.lyteSingleFront lyte-nav-arrow {
  background-position: -41px -29px;
}
.lyteNavigator .lyteIconSingleFront:not(.lyteDisabled):hover::before,
.lyteSingleFront:not(.lyteDisabled):hover lyte-nav-arrow {
  background-position: -4px -77px;
  opacity: 1;
}
/*  Single Arrow related common code ENDS   */
/*  Double Arrow related common code BEGINS   */
.lyteDoubleFront lyte-nav-arrow,
.lyteDoubleBack lyte-nav-arrow,
.lyteNavigator .lyteIconDoubleBack::before,
.lyteNavigator .lyteIconDoubleFront::before {
  background-image: var(--lyte-sprite-image);
  width: 12px;
  height: 13px;
  opacity: 0.7;
  display: inline-block;
  cursor: pointer;
  transform: rotate(180deg);
}
.lyteDoubleBack lyte-nav-arrow,
.lyteNavigator .lyteIconDoubleBack::before {
  background-position: -30px -135px;
}
.lyteDoubleFront lyte-nav-arrow,
.lyteNavigator .lyteIconDoubleFront::before {
  background-position: -12px -135px;
}
.lyteDoubleBack:not(.lyteDisabled):hover lyte-nav-arrow,
.lyteNavigator .lyteIconDoubleBack:not(.lyteDisabled):hover::before {
  background-position: -70px -135px;
}
.lyteDoubleFront:not(.lyteDisabled):hover lyte-nav-arrow,
.lyteNavigator .lyteIconDoubleFront:not(.lyteDisabled):hover::before {
  background-position: -52px -135px;
}
/*  Double Arrow related common code ENDS   */
/*  Default type navigator code BEGINS  */
.lyteNavigatorMidPoint {
  margin: 0 20px;
  color: var(--lyte-navigator-text-color);
  cursor: default;
}
.lyteNavigatorText {
  margin: 0 10px;
  color: var(--lyte-navigator-default-middle-text-color);
}
.lyteNavigator .lyteIconSingleBack,
.lyteNavigator .lyteIconSingleFront,
.lyteNavigator .lyteIconDoubleBack,
.lyteNavigator .lyteIconDoubleFront {
  cursor: pointer;
  position: relative;
  width: 25px;
  height: 25px;
  display: inline-flex;
  align-items: center;
}
.lyteNavigator .lyteIconDoubleBack::before,
.lyteNavigator .lyteIconDoubleFront::before,
.lyteNavigator .lyteIconSingleFront::before,
.lyteNavigator .lyteIconSingleBack::before {
  content: '';
  display: block;
  margin: auto;
}
.lyteNavigator .lyteIconSingleFront.lyteDisabled,
.lyteNavigator .lyteIconDoubleFront.lyteDisabled,
.lyteNavigator .lyteIconSingleBack.lyteDisabled,
.lyteNavigator .lyteIconDoubleBack.lyteDisabled {
  opacity: 0.4;
  cursor: not-allowed;
  pointer-events: none;
}
/*  Default type navigator code ENDS  */
/*  Border type and Simple type common code BEGINS  */
.lytepagination:not(.textNavLink) .lyteNavArrow lyte-nav-arrow,
.lytepagination:not(.textNavLink) .lyteNavArrowBorder lyte-nav-arrow {
  color: transparent;
  font-size: 14px;
  line-height: 18px;
}
.lytepagination:not(.textNavLink) .lyteNavArrowBorder.lyteSingleBack lyte-nav-arrow {
  line-height: 19px;
}
.lytepage,
.lyteNavArrowBorder,
.lyteNavArrow {
  display: inline-block;
  vertical-align: middle;
}
.lytepagination .lyteborder,
.lytepagination .lytesimple {
  text-decoration: none;
  text-align: center;
  cursor: pointer;
  color: var(--lyte-navigator-text-color);
}
.lytepagination .lyteborder.dots3,
.lytepagination .lytesimple.dots3 {
  border: 0;
  padding: 0;
  margin: 0;
  color: var(--lyte-navigator-text-color);
  vertical-align: top;
  pointer-events: none;
}
.lytepagination .lyteDisabled.lyteNavArrow,
.lytepagination .lyteDisabled.lyteNavArrowBorder {
  opacity: 0.6;
  cursor: not-allowed;
  pointer-events: none;
}
.lyteSingleFront.lyteDisabled lyte-nav-arrow,
.lyteSingleBack.lyteDisabled lyte-nav-arrow {
  opacity: 0.7;
  cursor: not-allowed;
  pointer-events: none;
}
/*  Border type and Simple type common code ENDS  */
/*  Border type navigator  BEGINS  */
.lytepagination .lyteborder {
  height: 22px;
  padding: 2.5px;
  border: 1px solid var(--lyte-navigator-arrow-border-color);
  border-radius: 3px;
  margin: 0px 5px;
  min-width: 22px;
  line-height: 22px;
  display: inline-block;
}
.lytepagination .lyteborder:hover {
  border-color: var(--lyte-navigator-num-hover-border-color);
  color: var(--lyte-navigator-text-hover-color);
}
.lyteborder.lyteNavArrowBorder {
  width: 22px;
  line-height: 27px;
}
.lyteborder.lyteNavArrowBorder:hover {
  border-color: var(--lyte-navigator-active-color);
}
.lytepagination .lyteborder.lyteActiveAdd,
.lytepagination .lyteborder.lyteActiveAdd:hover {
  border-color: var(--lyte-navigator-active-color);
  color: var(--lyte-navigator-active-color);
  cursor: default;
}
.lyteDisabled.lyteNavArrowBorder,
.lyteDisabled.lyteNavArrowBorder:hover {
  border-color: var(--lyte-navigator-arrow-border-color);
}
/*  Border type navigator ENDS  */
/*  Simple type navigator BEGINS    */
.lyteNavArrow,
.lytepagination .lytesimple {
  border: 0;
  width: 25px;
  height: 25px;
  padding: 2.5px;
  line-height: 25px;
  border-radius: 50%;
  margin: 2.5px;
  display: inline-block;
  text-align: center;
  cursor: pointer;
}
.lyteNavArrow lyte-nav-arrow {
  margin-top: 5px;
}
.lyteNavArrow.lyteDoubleFront lyte-nav-arrow,
.lyteNavArrow.lyteDoubleBack lyte-nav-arrow {
  margin-top: 6px;
}
.lytepagination .lytesimple:hover {
  background: var(--lyte-navigator-simple-item-hover-bg);
}
.lytepagination .lytesimple.lyteActiveAdd,
.lytepagination .lytesimple.lyteActiveAdd:hover {
  background: var(--lyte-navigator-active-color);
  color: var(--lyte-navigator-simple-active-item-text-color);
}
.lytepagination .lytesimple.dots3 {
  vertical-align: middle;
  line-height: 15px;
}
/*  Simple type navigator ENDS    */
/*  Navigator with Text value styles BEGINS  */
.lytepagination.textNavLink .lyteNavArrow,
.lytepagination.textNavLink .lyteborder.lyteNavArrowBorder {
  width: auto;
  height: auto;
  border: 0;
  line-height: 20px;
  color: var(--lyte-navigator-text-color);
}
.lytepagination.textNavLink .lyteNavArrow:hover,
.lytepagination.textNavLink .lyteborder.lyteNavArrowBorder:hover {
  color: var(--lyte-navigator-text-hover-color);
}
.lytepagination.textNavLink lyte-nav-arrow {
  width: auto;
  height: auto;
  background-image: none;
  transform: scale(1);
  opacity: 1;
}
.lytepagination.textNavLink .lyteNavArrow lyte-nav-arrow {
  margin-top: 0;
}
/*  Navigator with Text value styles ENDS  */
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/navigator.less file
 */
/* Navigator CSS ENDS  */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* Search CSS BEGINS */
.lyteSearchHidden {
  display: none !important;
}
lyte-search[lt-prop-close-icon="true"] input {
  padding-left: 30px;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/search.less file
 */
/* Search CSS ENDS */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* Slider CSS BEGINS  */
lyte-slider {
  display: inline-block;
}
lyte-slider * {
  box-sizing: content-box;
}
lyte-slider .lyteSlide {
  height: 100%;
}
.lyteRangeSlider,
.lyteSliderFill {
  display: block;
  border-radius: 10px;
  cursor: pointer;
}
.lyteRangeSlider {
  height: 8px;
  background: var(--lyte-range-slider-bg);
  position: relative;
  outline: none;
}
.lyteSliderFill {
  background: var(--lyte-range-slider-fill-bg);
  position: absolute;
  top: 0;
  /*  Altering this may cause alignment issue */
}
.lyteSlide,
.lyteSliderHandler {
  outline: none;
}
.lyteSliderHandler {
  z-index: 5;
}
.lyteSliderHandler.lyteMultiSliderSelected {
  z-index: 10;
}
.lyteSliderDisabled {
  pointer-events: none;
  opacity: 0.5;
}
.lyteSquare.lyteSliderHandler,
.lyteCircle.lyteSliderHandler {
  width: 12px;
  height: 12px;
  background: var(--lyte-range-slider-handle-bg);
  border-radius: 50%;
  border: 2px solid var(--lyte-range-slider-handle-border-color);
  cursor: pointer;
  position: absolute;
  top: -4px;
  left: 10px;
}
.lyteSquare.lyteSliderHandler {
  border-radius: 0;
}
.lyteRangeSlider .lyteScaleLine .lyteScalLable {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-slider-scale-label-font-size);
  color: var(--lyte-range-slider-text-color);
  padding-top: 10px;
  display: inline-block;
}
/*  Horizontal slider related CSS Starts  */
.lyteRangeSlider.lyteHorizontal .lyteScaleOption {
  position: absolute;
  top: 15px;
  left: 0;
  /*  Altering this may cause alignment issue */
  width: 100%;
  height: 10px;
}
.lyteRangeSlider .lyteScaleLine {
  width: 18px;
  height: 8px;
  text-align: center;
  display: inline-block;
  position: absolute;
  margin-right: -9px;
  left: 20px;
}
.lyteScaleLine span:first-child {
  height: 100%;
  width: 2px;
  background: var(--lyte-range-slider-tick-bg);
  display: inline-block;
  position: absolute;
  top: 0;
  left: 8px;
}
.lyteRangeSlider.lyteHorizontal .lyteSliderFill {
  height: 100%;
}
.lyteRangeSlider.lyteHorizontal .lyteArrow.lyteSliderHandler {
  border: 2px solid var(--lyte-range-slider-handle-border-color);
  width: 10px;
  height: 9px;
  border-bottom-width: 1px;
  top: -4px;
  background: var(--lyte-range-slider-handle-bg);
  cursor: pointer;
  position: absolute;
  left: 13px;
}
.lyteRangeSlider.lyteHorizontal .lyteArrow.lyteSliderHandler::after,
.lyteRangeSlider.lyteHorizontal .lyteArrow.lyteSliderHandler::before {
  content: "";
  border-style: solid;
  border-color: transparent;
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none;
  left: 0;
}
.lyteRangeSlider.lyteHorizontal .lyteArrow.lyteSliderHandler::before {
  border-top-color: var(--lyte-range-slider-handle-border-color);
  border-width: 7px;
  margin-left: -2px;
  top: 10px;
}
.lyteRangeSlider.lyteHorizontal .lyteArrow.lyteSliderHandler::after {
  border-top-color: var(--lyte-range-slider-handle-bg);
  border-width: 5px;
  margin-left: 0;
  top: 9px;
}
/*  Horizontal slider related CSS Ends  */
/*  Vertical slider related CSS  Begins  */
.lyteRangeSlider.lyteVertical {
  width: 8px;
  height: 100%;
}
.lyteVertical .lyteSliderFill {
  width: 8px;
}
.lyteVertical .lyteCircle.lyteSliderHandler {
  top: 10px;
  left: -4px;
}
.lyteVertical .lyteSquare.lyteSliderHandler {
  right: -4px;
}
.lyteVertical.lyteRangeSlider .lyteScaleLine .lyteScalLable {
  position: absolute;
  padding-top: 0;
  top: -10px;
  right: 10px;
}
.lyteVertical.lyteRangeSlider .lyteArrow .lyteScaleLine .lyteScalLable {
  top: -10px;
  right: 10px;
}
.lyteVertical .lyteArrow.lyteSliderHandler,
.lyteVertical .lyteArrowLeft.lyteSliderHandler {
  top: 13px;
  width: 9px;
  height: 10px;
  border: 2px solid var(--lyte-range-slider-handle-border-color);
  background: var(--lyte-range-slider-handle-bg);
  cursor: pointer;
  position: absolute;
}
.lyteVertical .lyteArrow.lyteSliderHandler {
  border-left-width: 1px;
  right: -4px;
}
.lyteVertical .lyteArrowLeft.lyteSliderHandler {
  border-right-width: 1px;
  right: 0;
}
.lyteVertical .lyteArrow.lyteSliderHandler::after,
.lyteVertical .lyteArrow.lyteSliderHandler::before,
.lyteVertical .lyteArrowLeft.lyteSliderHandler::after,
.lyteVertical .lyteArrowLeft.lyteSliderHandler::before {
  content: "";
  border-style: solid;
  border-color: transparent;
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none;
}
.lyteVertical .lyteArrow.lyteSliderHandler::before,
.lyteVertical .lyteArrowLeft.lyteSliderHandler::before {
  border-color: transparent;
  border-width: 7px;
  margin-top: -2px;
}
.lyteVertical .lyteArrow.lyteSliderHandler::before {
  border-right-color: var(--lyte-range-slider-handle-border-color);
  right: 10px;
}
.lyteVertical .lyteArrowLeft.lyteSliderHandler::before {
  border-left-color: var(--lyte-range-slider-handle-border-color);
  left: 10px;
}
.lyteVertical .lyteArrow.lyteSliderHandler::after,
.lyteVertical .lyteArrowLeft.lyteSliderHandler::after {
  border-color: transparent;
  border-width: 5px;
  margin-top: 0;
}
.lyteVertical .lyteArrow.lyteSliderHandler::after {
  right: 9px;
  border-right-color: var(--lyte-range-slider-handle-bg);
}
.lyteVertical .lyteArrowLeft.lyteSliderHandler::after {
  left: 9px;
  border-left-color: var(--lyte-range-slider-handle-bg);
}
.lyteVertical.lyteRangeSlider .lyteScaleOption {
  position: absolute;
  top: 0;
  /*  Altering this may cause alignment issue */
  right: 15px;
  width: 10px;
  height: 100%;
}
.lyteVertical.lyteRangeSlider .lyteScaleLine {
  width: 6px;
  height: 18px;
  position: absolute;
  margin-top: 0;
  margin-right: -6px;
  top: 20px;
  right: 6px;
}
.lyteVertical.lyteRangeSlider .lyteArrow .lyteScaleLine {
  right: 8px;
}
.lyteVertical .lyteScaleLine span:first-child {
  height: 2px;
  width: 6px;
  left: 0;
  top: -1px;
}
.lyteVertical.lyteRangeSlider .lyteArrowLeft .lyteScaleLine .lyteScalLable {
  top: -8px;
  right: unset;
  left: 10px;
}
.lyteVertical.lyteRangeSlider .lyteArrowLeft.lyteScaleOption {
  right: -15px;
}
/*  Vertical slider related CSS  Ends  */
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/slider.less file
 */
/* Slider CSS ENDS  */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* Step CSS BEGINS   */
lyte-step {
  display: inline-block;
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-step-font-size);
}
lyte-step * {
  box-sizing: content-box;
}
/*  Slash and Arrow related CSS BEGINS  */
.lyteStepArrow lyte-step-item,
.lyteStepSlash lyte-step-item {
  display: inline-block;
  color: var(--lyte-step-arrow-color);
  margin-left: 10px;
}
.lyteStepArrow lyte-step-item:hover,
.lyteStepSlash lyte-step-item:hover {
  color: var(--lyte-step-arrow-hover-color);
}
.lyteStepArrow lyte-step-item:last-of-type,
.lyteStepSlash lyte-step-item:last-of-type {
  margin-left: 0;
}
.lyteStepArrow lyte-step-body,
.lyteStepSlash lyte-step-body {
  cursor: pointer;
}
.lyteStepArrow .lyteActive,
.lyteStepSlash .lyteActive {
  color: var(--lyte-step-arrow-active-color);
}
.lyteStepArrow .lyteActive:last-of-type,
.lyteStepArrow .lyteCompleted,
.lyteStepSlash .lyteActive:last-of-type,
.lyteStepSlash .lyteCompleted {
  color: var(--lyte-step-arrow-completed-color);
}
.lyteStepSlash lyte-step-body::after {
  content: '/';
  margin-right: 10px;
}
.lyteStepArrow lyte-step-body::after {
  content: '>';
  margin-right: 10px;
}
.lyteStepArrow lyte-step-item:last-of-type lyte-step-body::after,
.lyteStepSlash lyte-step-item:last-of-type lyte-step-body::after {
  content: none;
}
/*  Slash and Arrow related CSS ENDS  */
/*   Bullet Step related CSS BEGINS    */
.lyteStepBullet {
  display: flex;
  justify-content: center;
}
.lyteStepBullet lyte-step-item {
  width: 150px;
  display: flex;
  flex-wrap: wrap;
  font-size: var(--lyte-step-bullet-item-font-size);
  align-content: flex-start;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
  z-index: 0;
}
.lyteStepBullet lyte-step-head {
  width: 20px;
  height: 20px;
  border: 2px solid transparent;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  text-indent: -10px;
  color: transparent;
  cursor: pointer;
}
.lyteStepBullet lyte-step-head::before {
  content: '';
  width: 10px;
  height: 10px;
  display: inline-block;
  border-radius: 50%;
  background: var(--lyte-step-bullet-active-bg);
  transform: scale(1);
  transition: transform 0.3s ease;
  position: relative;
  z-index: 10;
}
.lyteStepBullet lyte-step-head:hover::before {
  transform: scale(1.2);
}
.lyteStepBullet .lyteActive lyte-step-head {
  border-color: var(--lyte-step-bullet-active-bg);
  background: var(--lyte-step-bullet-bg);
}
.lyteStepBullet .lyteActive:last-of-type lyte-step-head,
.lyteStepBullet .lyteCompleted lyte-step-head {
  border-color: var(--lyte-step-bullet-active-bg);
  background: var(--lyte-step-bullet-active-bg);
}
.lyteStepBullet lyte-step-item.lyteActive:last-of-type lyte-step-head::before,
.lyteStepBullet .lyteCompleted lyte-step-head::before {
  background-image: var(--lyte-sprite-image);
  background-position: -1px -28px;
  width: 15px;
  height: 12px;
  transform: scale(1);
}
.lyteStepBullet .lyteActive lyte-step-head::before {
  transform: scale(1);
}
.lyteStepBullet lyte-step-head::after {
  content: '';
  position: absolute;
  height: 2px;
  background: var(--lyte-step-bullet-line);
  width: 140px;
  vertical-align: middle;
  right: 15px;
  z-index: -1;
}
.lyteStepBullet .lyteCompleted lyte-step-head::after {
  background: var(--lyte-step-bullet-active-bg);
}
.lyteStepBullet lyte-step-item:last-of-type {
  width: 100px;
}
.lyteStepBullet lyte-step-item:last-of-type lyte-step-head::after {
  content: none;
}
.lyteStepBullet lyte-step-body {
  font-family: var(--lyte-primary-font);
  color: var(--lyte-step-bullet-text-color);
  font-size: var(--lyte-step-bullet-label-font-size);
  display: block;
  position: relative;
  text-align: center;
  padding: 10px 0;
  transform: translateX(calc(50% - 13px));
  cursor: pointer;
}
.lyteStepBullet .lyteCompleted lyte-step-body,
.lyteStepBullet .lyteActive lyte-step-body {
  color: var(--lyte-step-bullet-active-text-color);
}
/*   Bullet Step related CSS ENDS    */
/*   Flat Step related CSS BEGINS   */
.lyteStepFlat {
  display: flex;
  counter-reset: stepSetNumber;
}
.lyteStepFlat lyte-step-item {
  background: var(--lyte-step-box-bg);
  border: 1px solid var(--lyte-step-box-triangle-color);
  border-left: none;
  border-right: none;
  padding: 0 30px;
  position: relative;
  cursor: pointer;
  color: var(--lyte-step-box-text-color);
}
.lyteStepFlat lyte-step-item:first-child {
  padding-right: 15px;
  border-right: 1px solid var(--lyte-step-box-triangle-color);
}
.lyteStepFlat lyte-step-item:last-of-type {
  border-left: 1px solid var(--lyte-step-box-triangle-color);
}
.lyteStepFlat lyte-step-item::before,
.lyteStepFlat lyte-step-item::after {
  content: '';
  width: 0;
  height: 0;
  position: absolute;
}
.lyteStepFlat lyte-step-item::before {
  border-top: 16px solid transparent;
  border-bottom: 16px solid transparent;
  border-right: 18px solid var(--lyte-step-box-bg);
  left: -18px;
  top: 0;
  z-index: 10;
}
.lyteStepFlat lyte-step-item::after {
  border-top: 17px solid transparent;
  border-bottom: 17px solid transparent;
  border-right: 19px solid var(--lyte-step-box-triangle-color);
  left: -19px;
  top: -1px;
  z-index: 9;
}
.lyteStepFlat lyte-step-item:last-of-type::before,
.lyteStepFlat lyte-step-item:last-of-type::after {
  content: none;
}
.lyteStepFlat lyte-step-item.lyteActive,
.lyteStepFlat lyte-step-item.lyteCompleted {
  background: var(--lyte-step-box-active-bg);
  border-top-color: var(--lyte-step-box-active-bg);
  border-bottom-color: var(--lyte-step-box-active-bg);
  color: var(--lyte-step-box-active-text-color);
}
.lyteStepFlat lyte-step-item.lyteActive:first-child,
.lyteStepFlat lyte-step-item.lyteCompleted:first-child {
  border-right-color: var(--lyte-step-box-active-bg);
}
.lyteStepFlat lyte-step-item.lyteActive:last-of-type,
.lyteStepFlat lyte-step-item.lyteCompleted:last-of-type {
  border-left-color: var(--lyte-step-box-active-bg);
}
.lyteStepFlat lyte-step-item.lyteActive::after,
.lyteStepFlat lyte-step-item.lyteActive::before,
.lyteStepFlat lyte-step-item.lyteCompleted::before {
  border-right-color: var(--lyte-step-box-active-bg);
}
.lyteStepFlat lyte-step-item.lyteCompleted::after {
  border-right-color: var(--lyte-step-box-active-text-color);
}
.lyteStepFlat lyte-step-body {
  display: inline-block;
  padding: 6px 30px 6px 15px;
  position: relative;
  white-space: nowrap;
}
.lyteStepFlat lyte-step-body::before {
  counter-increment: stepSetNumber;
  content: counter(stepSetNumber);
  color: var(--lyte-step-box-count-text-color);
  position: absolute;
  width: 22px;
  height: 22px;
  border: 1px solid var(--lyte-step-box-triangle-color);
  right: 0;
  top: calc(50% - 12px);
  text-align: center;
  border-radius: 50%;
}
.lyteStepFlat lyte-step-item.lyteActive lyte-step-body::before,
.lyteStepFlat lyte-step-item.lyteCompleted lyte-step-body::before {
  color: var(--lyte-step-box-active-text-color);
  border: 1px solid var(--lyte-step-box-active-text-color);
}
.lyteStepFlat lyte-step-item:hover {
  background: var(--lyte-step-box-hover-bg);
}
.lyteStepFlat lyte-step-item:hover::before {
  border-right-color: var(--lyte-step-box-hover-bg);
}
.lyteStepFlat lyte-step-item.lyteActive:hover,
.lyteStepFlat lyte-step-item.lyteCompleted:hover {
  background: var(--lyte-step-box-active-bg);
}
.lyteStepFlat lyte-step-item.lyteActive:hover::before,
.lyteStepFlat lyte-step-item.lyteCompleted:hover::before {
  border-right-color: var(--lyte-step-box-active-bg);
}
/*   Flat Step related CSS ENDS   */
/*  Advanced Step related CSS BEGINS    */
.lyteStepAdvanced lyte-step-structure {
  transition: opacity 0.3s linear;
  display: flex;
  white-space: normal;
}
.lyteStepAdvanced .lyteStepFade {
  opacity: 0;
}
.lyteStepAdvanced lyte-step-item {
  background: var(--lyte-step-advanced-bg);
  border: 1px solid var(--lyte-step-advanced-border-color);
  border-left: none;
  border-right: none;
  padding: 5px 30px;
  position: relative;
  cursor: pointer;
  color: var(--lyte-step-advanced-text-color);
}
.lyteStepAdvanced lyte-step-backward + lyte-step-item {
  border-right: 1px solid #fff;
}
.lyteStepAdvanced lyte-step-body {
  white-space: nowrap;
}
.lyteStepAdvanced lyte-step-item:hover {
  background: var(--lyte-step-advanced-hover-bg);
}
.lyteStepAdvanced lyte-step-item.lyteCompleted {
  background: var(--lyte-step-advanced-completed-bg);
}
.lyteStepAdvanced lyte-step-item.lyteActive {
  background: var(--lyte-step-advanced-active-bg);
  color: var(--lyte-step-advanced-active-text-color);
}
.lyteStepAdvanced lyte-step-forward::after,
.lyteStepAdvanced lyte-step-item::after,
.lyteStepAdvanced lyte-step-backward + lyte-step-item::before {
  content: '';
  width: 18px;
  height: 18px;
  position: absolute;
  background: inherit;
  top: 6px;
}
.lyteStepAdvanced lyte-step-forward::after,
.lyteStepAdvanced lyte-step-item::after {
  border-top: 1px solid var(--lyte-step-advanced-connector-border-color);
  border-right: 1px solid var(--lyte-step-advanced-connector-border-color);
  transform: rotate(-135deg) skew(15deg, 15deg);
  left: -10px;
  z-index: 9;
}
.lyteStepAdvanced lyte-step-backward + lyte-step-item::before {
  border-top: 1px solid var(--lyte-step-advanced-connector-border-color);
  border-left: 1px solid var(--lyte-step-advanced-connector-border-color);
  transform: rotate(-45deg) skew(-15deg, -15deg);
  right: -10px;
}
.lyteStepAdvanced lyte-step-backward + lyte-step-item.lyteWarning::before {
  border-top: 1px dashed var(--lyte-step-advanced-warning-border-color);
  border-left: 1px dashed var(--lyte-step-advanced-warning-border-color);
}
.lyteStepAdvanced .lyteStepLast::after,
.lyteStepAdvanced lyte-step-backward.lyteStepHidden + lyte-step-item::before {
  content: none;
}
.lyteStepAdvanced lyte-step-item.lyteWarning {
  border-top: 1px dashed var(--lyte-step-advanced-warning-border-color);
  border-bottom: 1px dashed var(--lyte-step-advanced-warning-border-color);
}
.lyteStepAdvanced lyte-step-backward + lyte-step-item.lyteWarning {
  border-right: 1px dashed var(--lyte-step-advanced-warning-border-color);
}
.lyteStepAdvanced lyte-step-item.lyteWarning::after {
  border-top: 1px dashed var(--lyte-step-advanced-warning-border-color);
  border-right: 1px dashed var(--lyte-step-advanced-warning-border-color);
  width: 18px;
  height: 18px;
  top: 6px;
}
.lyteStepAdvanced lyte-step-backward,
.lyteStepAdvanced lyte-step-forward {
  background: var(--lyte-step-advanced-nav-bg);
  border-top: 1px solid var(--lyte-step-advanced-nav-border-color);
  border-bottom: 1px solid var(--lyte-step-advanced-nav-border-color);
  padding: 5px 30px;
  position: relative;
  cursor: pointer;
  color: var(--lyte-step-advanced-nav-text-color);
}
.lyteStepAdvanced lyte-step-backward:hover,
.lyteStepAdvanced lyte-step-forward:hover {
  background: #b9d5f5;
}
.lyteStepAdvanced lyte-step-backward::before {
  content: '';
  width: 23px;
  height: 23px;
  position: absolute;
  background: inherit;
  border-bottom: 1px solid var(--lyte-step-advanced-connector-border-color);
  border-left: 1px solid var(--lyte-step-advanced-connector-border-color);
  transform: rotate(-135deg);
  right: -13px;
  top: 3px;
  z-index: 9;
}
.lyteStepAdvanced lyte-step-forward.lyteStepHidden,
.lyteStepAdvanced lyte-step-backward.lyteStepHidden {
  display: none;
}
/*  Advanced Step related CSS ENDS    */
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/step.less file
 */
/* Step CSS ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/*  Lyte Table CSS BEGINS   */
lyte-table {
  display: block;
  height: inherit;
  font-family: var(--lyte-primary-font);
}
lyte-table-structure {
  display: table;
  position: relative;
  background: var(--lyte-table-bg);
  box-sizing: border-box;
}
lyte-tr {
  display: table-row;
}
lyte-tr.lyteTableDummyRow {
  position: relative;
}
lyte-col {
  display: table-column;
}
lyte-colgroup {
  display: table-column-group;
}
lyte-thead {
  display: table-header-group;
}
lyte-th {
  cursor: default;
  background: var(--lyte-table-th-bg);
  text-align: right;
  color: var(--lyte-table-th-text-color);
  font-family: var(--lyte-secondary-font);
  font-size: var(--lyte-table-th-font-size);
  outline: none;
  padding: 12px 15px;
  position: relative;
  display: table-cell;
  vertical-align: middle;
  min-width: 50px;
  box-sizing: border-box;
  white-space: nowrap;
  text-transform: capitalize;
}
lyte-th.tableRowFixed {
  z-index: 6;
}
.lyteTableFixed {
  z-index: 8;
  box-shadow: -3px 0 7px -2px var(--lyte-table-fixed-column-box-shadow-color);
}
lyte-th.tableRowFixed.lyteTableFixed {
  z-index: 10;
}
lyte-th:last-of-type lyte-tablehead-resize {
  cursor: default;
  position: absolute;
  left: 0;
  height: 0px;
  width: 0;
  top: 0;
  z-index: 0;
  pointer-events: none;
}
lyte-tbody {
  display: table-row-group;
}
lyte-td {
  display: table-cell;
  border-bottom: 1px solid var(--lyte-table-border-color);
  vertical-align: middle;
  background: var(--lyte-table-bg);
  min-width: 50px;
  box-sizing: border-box;
  padding: 15px;
  font-size: var(--lyte-table-td-font-size);
  white-space: nowrap;
  color: var(--lyte-table-td-text-color);
  position: relative;
}
lyte-tfoot {
  display: table-footer-group;
}
lyte-table > .lyteTableScroll {
  overflow: auto;
  max-width: 100%;
  max-height: 100%;
  outline: none;
}
lyte-table.border .lyteTableScroll {
  border-bottom: 1px solid var(--lyte-table-border-color);
  border-left: 1px solid var(--lyte-table-border-color);
}
lyte-table > .lyteTableScroll > lyte-yield {
  display: block;
  width: 100%;
}
lyte-table.border lyte-tbody lyte-tr:last-of-type lyte-td {
  border-bottom: 0;
}
lyte-table.border lyte-thead lyte-tr lyte-td:last-of-type,
lyte-table.border lyte-tbody lyte-tr lyte-td:last-of-type {
  border-left: 0;
}
lyte-table.border lyte-th {
  border: 1px solid var(--lyte-table-border-color);
  border-bottom: none;
  border-left: none;
}
lyte-table.border lyte-th:last-of-type {
  border-left: 0;
}
lyte-table.border lyte-td {
  border: 1px solid var(--lyte-table-border-color);
  border-left: 0;
  border-top: 0;
}
.lyteDualResize lyte-th:last-of-type lyte-tablehead-resize,
lyte-tablehead-resize {
  cursor: ew-resize;
  height: 100%;
  width: 21px;
  top: 0;
  z-index: 9;
  left: -12px;
  position: absolute;
}
.lyteTableFixed lyte-tablehead-resize {
  display: none;
}
.lyteTableEnableResize .lyteTableFixed:hover {
  z-index: 9;
}
.lyteTableEnableResize .lyteTableFixed lyte-tablehead-resize {
  display: block;
}
.lyteDualResize lyte-th:last-of-type lyte-tablehead-resize {
  pointer-events: auto;
  left: 0;
}
lyte-tablehead-resize::after {
  content: '';
  position: absolute;
  width: 3px;
  height: 100%;
  left: 10px;
  background: transparent;
}
.lyteDualResize lyte-th:last-of-type lyte-tablehead-resize::after {
  left: 0;
}
lyte-th[resize="enable"]:not(.lyteTableFixed):hover {
  z-index: 7;
}
lyte-th[resize="enable"]:not(.lyteTableFixed).lyteTableResizeSelect {
  z-index: 8;
}
lyte-th[resize="enable"]:hover lyte-tablehead-resize::after {
  background: var(--lyte-theme-active-element-bg);
  opacity: 0.7;
}
lyte-th[resize="enable"] lyte-tablehead-resize:hover::after,
lyte-th[resize="enable"].resizeSelect lyte-tablehead-resize::after {
  background: var(--lyte-theme-active-element-bg);
  opacity: 1;
}
lyte-table.resizing lyte-th[resize="enable"]:not(.resizeSelect):hover lyte-tablehead-resize::after {
  background: transparent;
}
lyte-table-resize {
  width: 15px;
  height: 15px;
  bottom: 0;
  cursor: sw-resize;
  z-index: 10;
  left: 0;
  position: absolute;
}
lyte-table-resize:hover {
  border-bottom: 2px solid var(--lyte-theme-active-element-bg);
  border-left: 2px solid var(--lyte-theme-active-element-bg);
}
lyte-table-horizontal-resize {
  width: 15px;
  height: 100%;
  bottom: 0;
  cursor: col-resize;
  z-index: 9;
  left: 0;
  position: absolute;
}
lyte-table-horizontal-resize:hover {
  border-left: 2px solid var(--lyte-theme-active-element-bg);
}
lyte-table-vertical-resize {
  width: 100%;
  height: 15px;
  bottom: 0;
  cursor: row-resize;
  z-index: 9;
  left: 0;
  position: absolute;
}
lyte-table-vertical-resize:hover {
  border-bottom: 2px solid var(--lyte-theme-active-element-bg);
}
.lyteTableSortHelper {
  font-family: var(--lyte-secondary-font);
  font-size: var(--lyte-table-sort-helper-font-size);
  position: absolute;
  z-index: var(--lyte-level5-zindex);
  background: var(--lyte-table-bg);
  border: 1px solid var(--lyte-table-sort-helper-bg);
  padding: 12px 15px;
  box-sizing: border-box;
  cursor: move;
  color: var(--lyte-table-th-text-color);
}
.sortableTable lyte-th {
  cursor: move;
}
lyte-table.lyteStickyTable {
  --lyte-table-intersection: 0px;
}
.lyteStickyTable .lyteFixedColumn {
  position: sticky;
  z-index: 1;
}
.lyteIntersectionDiv {
  position: absolute;
  width: 1px;
  height: 10px;
  top: var(--lyte-table-intersection);
  opacity: 0;
  pointer-events: none;
  z-index: -1;
}
.lyteStickyTable lyte-th {
  top: 0;
  position: sticky;
  z-index: 6;
}
.lyteStickyTable lyte-th.lyteFixedColumn {
  /*	lyteFixedColumn class will be added to fixed column while rendering itself	*/
  z-index: 7;
}
.lyteStickyTable lyte-th.lyteTableFixed {
  /*	lyteTableFixed class will be added to fixed column while scrolling	*/
  z-index: 8;
}
.lyteTableRightFixed.lyteTableFixed {
  box-shadow: -3px 0 7px -2px var(--lyte-table-fixed-column-box-shadow-color);
}
.lyteStickyTableColumnMoving {
  z-index: 10;
}
lyte-th.lyteStickyTableColumnMoving {
  z-index: 15;
}
.lyteStickyTableColumnSortAnimate {
  transform: translateX(0px);
  transition: transform 0.2s linear;
}
lyte-table.lyteTableInfiniteScrollBorderReset lyte-td {
  border: 0;
  padding: 0;
}
.lyteTableInfiniteScrollBorderReset lyte-cell-wrapper {
  display: block;
  padding: 15px;
  border-bottom: 1px solid var(--lyte-table-border-color);
  height: 100%;
  box-sizing: border-box;
}
.border.lyteTableInfiniteScrollBorderReset lyte-cell-wrapper {
  border: 1px solid var(--lyte-table-border-color);
  border-left: 0;
  border-top: 0;
}
/*	Lyte Table - infinite scroll - Sortable case related CSS BEGINS */
.lyteTableWithSortableRow lyte-tr {
  cursor: move;
}
.lyteTableInfiniteScrollBorderReset .lyteTableRowSorting lyte-cell-wrapper,
.lyteTableInfiniteScrollBorderReset .lyteTableRowSorting + lyte-tr lyte-cell-wrapper,
lyte-table .lyteTableRowSorting lyte-td,
lyte-table .lyteTableRowSorting + lyte-tr lyte-td {
  border-top: 1px solid var(--lyte-table-border-color);
  padding-top: 14px;
}
.lyteTableInfiniteScrollBorderReset .lyteTableRowSorting lyte-td,
.lyteTableInfiniteScrollBorderReset .lyteTableRowSorting + lyte-tr lyte-td {
  border-top: 0;
  padding-top: 0;
}
lyte-table.border .lyteTableWithSortableRow .lyteTableRowSorting lyte-td:last-of-type {
  border-left: 1px solid var(--lyte-table-border-color);
}
lyte-tr.lyteTableRowSorting {
  position: relative;
  z-index: 10;
}
.lyteTableWithSortableRow .lyteTableSortablePlaceholder lyte-td {
  background: #f6fad2;
  border-right: 1px solid transparent;
  border-bottom: 1px solid var(--lyte-table-border-color);
}
.lyteTableWithSortableRow .lyteTableSortablePlaceholder lyte-td:first-of-type {
  border-right: 1px solid var(--lyte-table-border-color);
}
.lyteTableSortablePlaceholder {
  position: absolute;
  background: #f6fad2;
  border: 1px solid #edf2c3;
  box-sizing: border-box;
  z-index: 5;
}
.lyteTableSortablePlaceholderHidden {
  display: none;
}
/*	Lyte Table - infinite scroll - Sortable case related CSS ENDS */
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/table.less file
 */
/*  Lyte Table CSS ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
.lyteTooltip {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-tooltip-font-size);
  padding: 3px 8px;
  position: absolute;
  background: var(--lyte-tooltip-bg);
  color: var(--lyte-tooltip-text-color);
  text-align: center;
  border-radius: 2px;
  z-index: var(--lyte-tooltip-zindex);
  white-space: pre-wrap;
  right: -9999px;
  top: -9999px;
}
.lyteTooltip.lyteTooltipHidden {
  display: none !important;
}
.lyteTooltip.lyteTooltipCallout .lyteTooltipInnerSpan,
.lyteTooltip.lyteTooltipCallout::before {
  content: "";
  position: absolute;
  width: 10px;
  height: 10px;
  background: inherit;
  transform: rotate(45deg);
  z-index: -1;
}
.lyteTooltip.lyteTooltipCallout .lyteTooltipInnerSpan {
  transform: translateX(5px) rotate(45deg);
}
.lyteTooltip.lyteRight .lyteTooltipInnerSpan,
.lyteTooltip.lyteRight::before {
  right: -5px;
  top: calc(50% - 5px);
}
.lyteTooltip.lyteLeft .lyteTooltipInnerSpan,
.lyteTooltip.lyteLeft::before {
  left: -5px;
  top: calc(50% - 5px);
}
.lyteTooltip.lyteBottom .lyteTooltipInnerSpan,
.lyteTooltip.lyteBottom::before {
  right: calc(50% - 5px);
  top: -5px;
}
.lyteTooltip.lyteTop .lyteTooltipInnerSpan,
.lyteTooltip.lyteTop::before {
  right: calc(50% - 5px);
  bottom: -5px;
}
.lyteTooltip.lyteTopright .lyteTooltipInnerSpan,
.lyteTooltip.lyteTopright::before {
  right: 20%;
  bottom: -5px;
}
.lyteTooltip.lyteTopleft .lyteTooltipInnerSpan,
.lyteTooltip.lyteTopleft::before {
  bottom: -5px;
  right: 80%;
}
.lyteTooltip.lyteBottomright .lyteTooltipInnerSpan,
.lyteTooltip.lyteBottomright::before {
  top: -5px;
  right: 20%;
}
.lyteTooltip.lyteBottomleft .lyteTooltipInnerSpan,
.lyteTooltip.lyteBottomleft::before {
  top: -5px;
  right: 80%;
}
.lyteTooltip.lyteInnerToolAdded::before {
  content: none;
}
.lyteTooltip.whiteBg {
  background: var(--lyte-theme-body-bg);
  border: 1px solid #c1c1c1;
  color: var(--lyte-common-text-color2);
}
.lyteTooltip.whiteBg::before {
  background: var(--lyte-theme-body-bg);
}
.lyteTooltip.whiteBg.lyteRight::before {
  box-shadow: 1px -1px 0 0 #c1c1c1;
  right: -4px;
  top: calc(50% - 4px);
}
.lyteTooltip.whiteBg.lyteLeft::before {
  box-shadow: -1px 1px 0 0 #c1c1c1;
  left: -4px;
  top: calc(50% - 4px);
}
.lyteTooltip.whiteBg.lyteBottom::before {
  box-shadow: -1px -1px 0 0 #c1c1c1;
  right: calc(50% - 4px);
  top: -4px;
}
.lyteTooltip.whiteBg.lyteTop::before {
  box-shadow: 1px 1px 0 0 #c1c1c1;
  right: calc(50% - 4px);
  bottom: -4px;
}
.lyteTooltip.whiteBg.lyteTopright::before {
  box-shadow: 1px 1px 0 0 #c1c1c1;
  right: 20%;
  bottom: -4px;
}
.lyteTooltip.whiteBg.lyteTopleft::before {
  box-shadow: 1px 1px 0 0 #c1c1c1;
  bottom: -4px;
  right: 80%;
}
.lyteTooltip.whiteBg.lyteBottomright::before {
  box-shadow: -1px -1px 0 0 #c1c1c1;
  top: -4px;
  right: 20%;
}
.lyteTooltip.whiteBg.lyteBottomleft::before {
  box-shadow: -1px -1px 0 0 #c1c1c1;
  top: -4px;
  right: 80%;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/tooltip.less file
 */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/*  Popover related CSS BEGINS  */
.bodyWrapper {
  overflow: hidden;
}
.popoverWrapper {
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: var(--lyte-popover-zindex);
  position: fixed;
}
.popoverWrapper.noFreeze {
  pointer-events: none;
}
.lytePopover {
  background: var(--lyte-popover-bg);
  border: 1px solid var(--lyte-popover-border-color);
  box-shadow: var(--lyte-popover-boxshadow-color);
  position: absolute;
  z-index: calc(var(--lyte-popover-zindex) + 10);
  opacity: 0;
  border-radius: 3px;
  transition: opacity ease 0.4s;
  box-sizing: border-box;
  font-family: var(--lyte-primary-font);
  top: -9999px;
  left: -9999px;
}
.popoverWrapper.noFreeze .lytePopover {
  pointer-events: auto;
}
.lytePopover.lyteZoom {
  transition: transform 0.4s ease, opacity 0.4s ease;
  transform: scale(0);
}
.popoverWrapper.scrollable {
  overflow: hidden;
}
.popoverWrapper.scrollable .lytePopoverContent {
  overflow: auto;
}
.popoverWrapper.scrollable .lytePopover {
  max-height: 100%;
}
lyte-popover-header {
  padding: 15px 30px;
  font-family: var(--lyte-secondary-font);
  font-size: var(--lyte-popover-header-font-size);
  color: var(--lyte-popover-text-color);
}
lyte-popover-header,
lyte-popover-content,
lyte-popover-footer {
  display: block;
  box-sizing: border-box;
}
lyte-popover-content {
  padding: 15px 30px;
}
lyte-popover-footer {
  padding: 15px 30px;
}
lyte-popover-freeze {
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 5;
  height: auto;
  background: var(--lyte-popover-freeze-bg);
  display: block;
  opacity: var(--lyte-popover-freeze-opacity);
  transition: opacity ease 0.15s;
  transform: translate3d(0, 0, 0);
}
.lytePopoverClose {
  background-image: var(--lyte-sprite-image);
  background-position: -52px 0px;
  width: 13px;
  height: 13px;
  opacity: 0.5;
  cursor: pointer;
  position: absolute;
  left: 20px;
  top: 14px;
  display: block;
  transform: scale(1.3);
  z-index: 5;
}
.lytePopoverClose:hover {
  opacity: 1;
}
lyte-popover-footer.left {
  text-align: right;
}
lyte-popover-footer.center {
  text-align: center;
}
lyte-popover-footer.right {
  text-align: left;
}
lyte-popover-footer lyte-button {
  margin-right: 7px;
}
lyte-popover-footer lyte-button:first-child {
  margin-right: 0;
}
.lytePopoverArrowIcon {
  width: 11px;
  height: 11px;
  position: absolute;
  background: var(--lyte-popover-bg);
  transform: rotate(45deg);
  display: block;
}
.lytePopoverArrowIcon.lytePopoverArrowTop {
  box-shadow: -1px -1px 0 0 var(--lyte-popover-border-color);
  top: -5px;
}
.lytePopoverArrowIcon.lytePopoverArrowBottom {
  box-shadow: 1px 1px 0 0 var(--lyte-popover-border-color);
  bottom: -5px;
}
.lytePopoverArrowIcon.lytePopoverArrowRight {
  box-shadow: 1px -1px 0 0 var(--lyte-popover-border-color);
  right: -5px;
}
.lytePopoverArrowIcon.lytePopoverArrowLeft {
  box-shadow: -1px 1px 0 0 var(--lyte-popover-border-color);
  left: -5px;
}
.lytePopoverHeaderDraggable {
  cursor: move;
  touch-action: none;
}
.lyteStopBodyScrolling {
  overflow: hidden;
}
.lytePopoverVisible {
  opacity: 1;
}
.lytePopoverDispNone {
  display: none;
}
.lytePopoverVisibilityHidden {
  visibility: hidden;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/*  Popover related CSS ENDS  */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* LYTE-MESSAGEBOX BEGINS   */
.lyteMessageBoxContent {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-messagebox-content-font-size);
  color: var(--lyte-messagebox-content-text-color);
}
.lyteMessageBox {
  padding: 0 0 0 50px;
  z-index: var(--lyte-messagebox-zindex);
  background: var(--lyte-messagebox-bg);
  border-radius: 2px;
  color: var(--lyte-messagebox-content-text-color);
  font-size: var(--lyte-messagebox-font-size);
  transition: 0.3s all ease;
  display: block;
  animation-duration: 0.5s;
  animation-fill-mode: both;
  border: 1px solid transparent;
  position: absolute;
  min-width: 200px;
}
.lyteMessageBox.successMessageIcon {
  border-color: var(--lyte-messagebox-success-bg);
}
.lyteMessageBox.errorMessageIcon {
  border-color: var(--lyte-messagebox-error-bg);
}
.lyteMessageBox.warningMessageIcon {
  border-color: var(--lyte-messagebox-warning-bg);
}
.lyteMessageBox.infoMessageIcon {
  border-color: var(--lyte-messagebox-info-bg);
}
.lyteMessageBox .lyteMessageBoxSymbol {
  height: 100%;
  display: inline-block;
  position: absolute;
  width: 50px;
}
.lyteMessageBox.successMessageIcon .lyteMessageBoxSymbol {
  background: var(--lyte-messagebox-success-bg);
}
.lyteMessageBox.errorMessageIcon .lyteMessageBoxSymbol {
  background: var(--lyte-messagebox-error-bg);
}
.lyteMessageBox.warningMessageIcon .lyteMessageBoxSymbol {
  background: var(--lyte-messagebox-warning-bg);
}
.lyteMessageBox.infoMessageIcon .lyteMessageBoxSymbol {
  background: var(--lyte-messagebox-info-bg);
}
.lyteMessageBox .lyteMessageBoxSymbol::before {
  content: "";
  background-image: var(--lyte-sprite-image);
  position: absolute;
  display: inline-block;
  width: 22px;
  height: 20px;
  top: calc(50% - 10px);
  right: calc(50% - 11px);
}
.lyteMessageBox.successMessageIcon .lyteMessageBoxSymbol::before {
  background-position: -287px -58px;
}
.lyteMessageBox.errorMessageIcon .lyteMessageBoxSymbol::before {
  background-position: -317px -60px;
  width: 24px;
  right: calc(50% - 12px);
}
.lyteMessageBox.warningMessageIcon .lyteMessageBoxSymbol::before {
  background-position: -347px -58px;
}
.lyteMessageBox.infoMessageIcon .lyteMessageBoxSymbol::before {
  background-position: -377px -58px;
}
.lyteMessageBox .lyteMessageBoxContent {
  display: inline-block;
  max-width: 100%;
  vertical-align: top;
  padding: 10px 65px 10px 15px;
}
.lyteMessageBox .lyteMessageBoxClose {
  background-image: var(--lyte-sprite-image);
  background-position: -54px -2px;
  top: calc(50% - 4px);
  width: 8px;
  height: 8px;
  display: inline-block;
  position: absolute;
  cursor: pointer;
  left: 15px;
}
.lyteMessageBoxFadeIn {
  animation-name: lyteMsgBoxFadeIn;
}
@keyframes lyteMsgBoxFadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.lyteMessageBoxFadeOut {
  animation-name: lyteMsgBoxFadeOut;
}
@keyframes lyteMsgBoxFadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* LYTE-MESSAGEBOX ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* LYTE-TABS CSS BEGINS */
lyte-tabs {
  display: block;
  background: var(--lyte-tab-bg);
  position: relative;
  width: 100%;
  font-family: var(--lyte-primary-font);
}
lyte-tab-head {
  display: flex;
  border: 1px solid var(--lyte-tab-border-color);
  box-sizing: border-box;
}
lyte-tab-title {
  display: inline-block;
  font-size: var(--lyte-tab-title-font-size);
  color: var(--lyte-tab-title-text-color);
  padding: 10px 5px;
  margin: 0 10px;
  cursor: pointer;
  box-sizing: border-box;
  background: var(--lyte-tab-bg);
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
lyte-tab-title span {
  display: inline-block;
  vertical-align: middle;
}
lyte-tab-title:hover {
  color: var(--lyte-tab-content-text-color);
}
lyte-tab-title.lyteTabActive,
lyte-tab-title.lyteTabActive:hover {
  color: var(--lyte-tab-active-color);
  font-weight: normal;
}
lyte-tab-body {
  display: block;
  border: 1px solid var(--lyte-tab-border-color);
  padding: 15px;
  font-size: var(--lyte-tab-body-font-size);
  text-align: right;
  overflow: auto;
  box-sizing: border-box;
}
lyte-tab-content {
  color: var(--lyte-tab-content-text-color);
}
.lyteTabShow {
  display: block;
  flex-grow: 1;
}
.lyteTabTitleHide,
.lyteTabHide {
  display: none;
}
/*  Tab top starts */
.lyteTabDefaultTop lyte-tab-body {
  border-top: 0;
}
.lyteTabDefaultTop lyte-tab-head {
  border-bottom-color: var(--lyte-tab-title-border-color);
}
.lyteTabDefaultTop lyte-tab-title {
  margin-bottom: -1px;
  border-bottom: 1px solid var(--lyte-tab-title-border-color);
}
.lyteTabDefaultTop lyte-tab-title.lyteTabActive {
  border-bottom: 1px solid var(--lyte-tab-active-color);
}
.lyteTabDefaultTop lyte-tab-title:hover {
  border-bottom-color: var(--lyte-tab-title-hover-border-color);
}
.lyteTabDefaultTop lyte-tab-title.lyteTabActive:hover {
  border-bottom-color: var(--lyte-tab-active-color);
}
/*  Tab top ends */
/*  Tab bottom starts */
.lyteTabDefaultBottom lyte-yield {
  display: flex;
  flex-direction: column;
}
.lyteTabDefaultBottom lyte-tab-head {
  order: 2;
  border-top-color: var(--lyte-tab-title-border-color);
}
.lyteTabDefaultBottom lyte-tab-body {
  order: 1;
  border-bottom: 0;
}
.lyteTabDefaultBottom lyte-tab-title {
  border-top: 1px solid var(--lyte-tab-title-border-color);
  margin-top: -1px;
}
.lyteTabDefaultBottom lyte-tab-title.lyteTabActive {
  border-top: 1px solid var(--lyte-tab-active-color);
}
.lyteTabDefaultBottom lyte-tab-title:hover {
  border-top-color: var(--lyte-tab-title-hover-border-color);
}
.lyteTabDefaultBottom lyte-tab-title.lyteTabActive:hover {
  border-top-color: var(--lyte-tab-active-color);
}
/*  Tab bottom ends */
/*  Tab left and right starts */
.lyteTabDefaultLeft lyte-yield {
  display: flex;
}
.lyteTabDefaultLeft lyte-tab-head,
.lyteTabDefaultRight lyte-tab-head {
  flex-direction: column;
  flex-grow: 1;
  padding: 10px 0;
  width: 200px;
  text-align: right;
  overflow: auto;
}
.lyteTabDefaultLeft lyte-tab-head {
  border-left: 0;
}
.lyteTabDefaultLeft lyte-tab-body,
.lyteTabDefaultRight lyte-tab-body {
  flex-grow: 10;
  width: calc(100% - 200px);
  padding-top: 18px;
}
.lyteTabDefaultLeft lyte-tab-title.lyteTabActive,
.lyteTabDefaultLeft lyte-tab-title.lyteTabActive:hover,
.lyteTabDefaultRight lyte-tab-title.lyteTabActive,
.lyteTabDefaultRight lyte-tab-title.lyteTabActive:hover {
  border-right: 1px solid var(--lyte-tab-active-color);
  background: var(--lyte-tab-right-left-item-bg);
  position: relative;
  z-index: 10;
}
.lyteTabDefaultRight lyte-yield {
  display: flex;
  flex-direction: row-reverse;
}
.lyteTabDefaultRight lyte-tab-head {
  border-right: 0;
}
.lyteTabDefaultLeft lyte-tab-title,
.lyteTabDefaultRight lyte-tab-title {
  margin: 0;
  padding: 10px 15px;
  overflow: visible;
}
.lyteTabDefaultLeft lyte-tab-title:hover,
.lyteTabDefaultRight lyte-tab-title:hover {
  background: var(--lyte-tab-right-left-item-hover-bg);
}
/*  Tab left and right ends */
.lyteTabCloseIcon {
  background-image: var(--lyte-sprite-image);
  background-position: -54px -2px;
  width: 8px;
  height: 8px;
  display: inline-block;
  vertical-align: middle;
  margin-right: 10px;
}
.lyteTabAlignStart {
  justify-content: flex-start;
}
.lyteTabAlignCenter {
  justify-content: center;
}
.lyteTabAlignEnd {
  justify-content: flex-end;
}
.lyteTabOverflowV lyte-tab-title {
  overflow: visible;
}
.lyteTabForceHide {
  display: none;
}
#moreMenu {
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  opacity: 0.7;
  padding: 10px;
}
#moreMenu.lyteMenuSelected,
#moreMenu:hover {
  opacity: 1;
}
#moreMenu span {
  background-image: var(--lyte-sprite-image);
  background-position: -294px -165px;
  width: 17px;
  height: 5px;
}
.lyteTabRightCollapse {
  flex-flow: row-reverse;
  justify-content: flex-start;
}
.lyteTabVH lyte-tab-title,
.lyteTabVH .lyteMenuSelected {
  visibility: hidden;
}
lyte-tab-title.lyteTabDisable {
  pointer-events: none;
  cursor: default;
  opacity: 0.7;
}
/*  Lyte Nested Tabs CSS Begins */
.lyteNestedTab .lyteTabDefaultTop > lyte-yield {
  display: block;
}
.lyteNestedTab .lyteTabDefaultTop > lyte-yield > lyte-tab-head {
  flex-direction: row;
  padding: 0;
  width: auto;
  border: 1px solid var(--lyte-tab-border-color);
  overflow: visible;
}
.lyteNestedTab .lyteTabDefaultTop > lyte-yield > lyte-tab-head lyte-tab-title {
  margin: 0 10px;
  padding: 10px 5px;
  overflow: hidden;
  margin-bottom: -1px;
  border: 0;
  border-bottom: 1px solid var(--lyte-tab-title-border-color);
}
.lyteNestedTab .lyteTabDefaultTop > lyte-yield > lyte-tab-head lyte-tab-title:hover {
  background: var(--lyte-tab-bg);
  border: 0;
  border-bottom: 1px solid var(--lyte-tab-title-hover-border-color);
}
.lyteNestedTab .lyteTabDefaultTop > lyte-yield > lyte-tab-head lyte-tab-title.lyteTabActive {
  border: 0;
  border-bottom: 1px solid var(--lyte-tab-active-color);
  background: var(--lyte-tab-bg);
}
.lyteNestedTab .lyteTabDefaultTop > lyte-yield > lyte-tab-body {
  width: auto;
  padding: 15px;
  border: 1px solid var(--lyte-tab-border-color);
  border-top: 0;
}
.lyteNestedTab .lyteTabDefaultBottom > lyte-yield {
  flex-direction: column;
}
.lyteNestedTab .lyteTabDefaultBottom > lyte-yield > lyte-tab-head {
  flex-direction: row;
  padding: 0;
  width: auto;
  border: 1px solid var(--lyte-tab-border-color);
  overflow: visible;
}
.lyteNestedTab .lyteTabDefaultBottom > lyte-yield > lyte-tab-head lyte-tab-title {
  margin: 0 10px;
  padding: 10px 5px;
  overflow: hidden;
  margin-top: -1px;
  border: 0;
  border-top: 1px solid var(--lyte-tab-title-border-color);
}
.lyteNestedTab .lyteTabDefaultBottom > lyte-yield > lyte-tab-head lyte-tab-title:hover {
  background: var(--lyte-tab-bg);
  border: 0;
  border-top: 1px solid var(--lyte-tab-title-hover-border-color);
}
.lyteNestedTab .lyteTabDefaultBottom > lyte-yield > lyte-tab-head lyte-tab-title.lyteTabActive {
  border: 0;
  border-top: 1px solid var(--lyte-tab-active-color);
  background: var(--lyte-tab-bg);
}
.lyteNestedTab .lyteTabDefaultBottom > lyte-yield > lyte-tab-body {
  width: auto;
  padding: 15px;
  border: 1px solid var(--lyte-tab-border-color);
  border-bottom: 0;
}
.lyteNestedTab .lyteTabDefaultLeft > lyte-yield {
  flex-direction: row;
}
.lyteNestedTab .lyteTabDefaultLeft > lyte-yield > lyte-tab-head {
  order: 0;
  border: 1px solid var(--lyte-tab-border-color);
  border-right: 0;
}
.lyteNestedTab .lyteTabDefaultLeft > lyte-yield > lyte-tab-head lyte-tab-title {
  border: 0;
}
.lyteNestedTab .lyteTabDefaultLeft > lyte-yield > lyte-tab-head lyte-tab-title.lyteTabActive {
  border-bottom: 0;
  border-left: 1px solid var(--lyte-tab-active-color);
}
.lyteNestedTab .lyteTabDefaultLeft > lyte-yield > lyte-tab-body {
  border: 1px solid var(--lyte-tab-border-color);
}
.lyteNestedTab .lyteTabDefaultRight > lyte-yield {
  flex-direction: row-reverse;
}
.lyteNestedTab .lyteTabDefaultRight > lyte-yield > lyte-tab-head {
  border: 1px solid var(--lyte-tab-border-color);
  border-left: 0;
  order: 0;
}
.lyteNestedTab .lyteTabDefaultRight > lyte-yield > lyte-tab-head lyte-tab-title {
  border: 0;
}
.lyteNestedTab .lyteTabDefaultRight > lyte-yield > lyte-tab-head lyte-tab-title.lyteTabActive {
  border: 0;
  border-left: 1px solid var(--lyte-tab-active-color);
}
.lyteNestedTab .lyteTabDefaultRight > lyte-yield > lyte-tab-body {
  border: 1px solid var(--lyte-tab-border-color);
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* LYTE-TABS CSS ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* LYTE-COLORPICKER BEGINS */
.lyteColorPicker {
  display: inline-block;
  border: 1px solid var(--lyte-colorpicker-border-color);
  box-shadow: 0 0 5px 1px var(--lyte-colorpicker-boxshadow-color);
  background: var(--lyte-theme-body-bg);
}
.lyteColorPicker.popColorPicker {
  display: none;
}
.lyteColorPicker__showhidecontainer {
  overflow: hidden;
  padding: 0;
  position: relative;
  text-align: right;
  font-size: var(--lyte-colorpicker-font-size);
  font-family: var(--lyte-primary-font);
}
/*  Colorpicker basic section related code begins    */
.lyteColorPicker__default {
  width: 220px;
  display: flex;
  flex-direction: column;
}
.lyteColorPicker__nocolorbutton {
  padding: 8px 15px;
  border-bottom: 1px solid var(--lyte-colorpicker-border-color);
  cursor: pointer;
}
.lyteColorPicker__noFill {
  background-image: var(--lyte-sprite-image);
  background-position: -43px -79px;
  width: 11px;
  height: 11px;
  opacity: 0.6;
  margin-left: 5px;
  display: inline-block;
  vertical-align: middle;
}
.lyteColorPicker__nocolorbutton svg {
  display: none;
}
.lyteColorPicker__nocolorbutton:hover {
  background: var(--lyte-colorpicker-morelink-hover-bg);
}
.lyteColorPicker__palettecontainer {
  border-bottom: 1px solid var(--lyte-colorpicker-border-color);
  order: 0;
  padding: 8px 15px 15px;
}
.lyteColorPicker__palette {
  font-size: 0;
}
.lyteColorPickerUsedColors {
  margin: 0;
  padding: 0;
}
.lyteColorPicker__paletteheading {
  cursor: default;
  color: var(--lyte-colorpicker-common-text-color);
  margin-bottom: 10px;
}
.lyteColorPicker__palettecontainer.usedColor__container {
  order: 1;
}
.lyteColorPicker__navigatable {
  order: 2;
  padding: 10px 15px;
  border-radius: 0 0 2px 2px;
  cursor: pointer;
}
.lyteColorPicker__navigatable:hover {
  background: var(--lyte-colorpicker-morelink-hover-bg);
}
.lyteColorPicker__colorfieldcontainer {
  display: none;
  order: 3;
}
.lyteColorPicker__palette .standard__colors,
.lyteColorPicker__shades {
  margin: 0;
  padding: 0;
  line-height: 1;
}
.lyteColorPicker__colorpan {
  width: 15px;
  height: 15px;
  margin: 0 2px;
  padding: 0;
  border: 1px solid var(--lyte-colorpicker-colorpan-border-color);
  border-radius: 0;
  display: inline-block;
  cursor: pointer;
  box-sizing: border-box;
  position: relative;
}
.default__colors .lyteColorPicker__colorpan {
  border: 1px solid transparent;
}
.default__colors:first-child .lyteColorPicker__colorpan {
  margin-bottom: 5px;
  border: 1px solid var(--lyte-colorpicker-colorpan-border-color);
}
.default__colors:nth-child(2),
.default__colors:nth-child(3) {
  display: none;
}
.lyteColorPickerShowHiddenColor.default__colors:nth-child(2),
.lyteColorPickerShowHiddenColor.default__colors:nth-child(3),
.lyteColorPickerAccentColorPalette .default__colors:nth-child(2),
.lyteColorPickerAccentColorPalette .default__colors:nth-child(3) {
  display: block;
}
.lyteColorPicker__colorpan:hover {
  border-color: var(--lyte-colorpicker-colorpan-hover-border-color);
}
.default__colors:first-child .lyteColorPicker__colorpan:hover {
  border-color: rgba(17, 17, 17, 0.3);
}
.lyteColorPicker__colorpan.lyteCPSelectedColor::before {
  content: '';
  position: absolute;
  border-left: 1px solid var(--lyte-colorpicker-selectedtick-color);
  border-bottom: 1px solid var(--lyte-colorpicker-selectedtick-color);
  width: 8px;
  height: 4px;
  top: 2px;
  left: 2px;
  transform: rotate(-45deg);
}
.lyteColorPicker__colorpan.lyteCPSelectedColor[lt-prop-title="#FFFFFF"]::before {
  border-left: 1px solid var(--lyte-colorpicker-whitebg-selectedtick-color);
  border-bottom: 1px solid var(--lyte-colorpicker-whitebg-selectedtick-color);
}
.lyteColorPicker__text {
  display: inline-block;
  vertical-align: middle;
  color: var(--lyte-colorpicker-advanced-link-text-color);
}
.LCP_rightArrow {
  background-image: var(--lyte-sprite-image);
  background-position: -97px -26px;
  width: 4px;
  height: 7px;
  display: inline-block;
  vertical-align: middle;
  margin-top: 3px;
  transform: rotate(180deg);
}
.lyteColorPicker__icon {
  background-image: var(--lyte-sprite-image);
  background-position: -110px -58px;
  width: 14px;
  height: 11px;
  opacity: 0.6;
  margin-left: 5px;
  display: inline-block;
  vertical-align: middle;
}
/*  Colorpicker basic section related code ends    */
/*  Colorpicker advanced section related code begins    */
.lyteColorPicker--advanced {
  padding: 10px;
  width: 260px;
}
.colorDiv {
  overflow: hidden;
  position: relative;
  cursor: default;
  touch-action: none;
  border: 1px solid var(--lyte-colorpicker-input-border-color);
  border-radius: 2px;
}
#lyteCPImgDiv {
  height: 160px;
  background-image: url(../../../images/lyteCPbgGradient.png);
  background-repeat: round;
}
.colorSlider_palette_circle {
  border: 2px solid var(--lyte-colorpicker-color-slider-handle-border-color);
  border-radius: 50%;
  height: 8px;
  width: 8px;
  cursor: pointer;
  position: absolute;
  z-index: 10;
}
.lyteColorPicker__previewDiv {
  padding: 3px 0px;
  position: relative;
}
.lyteColorPicker__opacityslider,
.colorSlider_hue {
  position: relative;
  vertical-align: middle;
  touch-action: none;
}
.lyteColorPicker__sliderDiv {
  display: flex;
  margin: 15px 0;
}
.colorSlider_hue {
  margin-bottom: 15px;
}
.opacityslider__circlethumb,
.colorSlider_sliderHandle {
  width: 5px;
  height: 10px;
  border-radius: 2px;
  border: 1px solid var(--lyte-colorpicker-sliderhandle-border-color);
  position: absolute;
  z-index: 14;
  top: 0;
  background: var(--lyte-colorpicker-sliderhandle-bg);
}
.lyteColorPicker__transparentbg,
.colorSlider_hueBar_border {
  width: 210px;
  border-radius: 6px;
}
.opacityslider__track,
.colorSlider_hueBar {
  background-image: linear-gradient(to right, red, #ff00dd, blue, aqua, #00ff00, yellow, red);
  height: 10px;
  border-radius: 6px;
  border: 1px solid rgba(0, 0, 0, 0.3);
}
.opacityslider__track {
  background-image: none;
}
.opacityPreviewDiv__transparentbg,
.previewDiv {
  width: 32px;
  height: 32px;
  cursor: pointer;
  border-radius: 50%;
  border: 1px solid rgba(0, 0, 0, 0.3);
}
.lyteColorPicker__commandbar {
  margin: 10px 0 5px;
  display: flex;
}
.LCP_backbtn {
  margin-left: auto;
}
.selectFormat {
  width: 70px;
  display: inline-block;
  vertical-align: top;
  margin-left: 10px;
}
.selectFormat lyte-dropdown {
  display: block;
  width: 70px;
}
.selectFormat lyte-dropdown lyte-drop-button {
  font-size: var(--lyte-colorpicker-format-dropbtn-font-size);
}
.lyteCPDropbox {
  width: 70px;
}
.lyteCPDropbox .lyteArrow {
  width: 70px;
}
.lyteCPDropbox lyte-drop-item {
  padding: 5px;
  font-size: var(--lyte-colorpicker-dropbox-item-font-size);
  color: var(--lyte-colorpicker-formatdropdown-text-color);
}
.lyteCPDropbox lyte-drop-item[selected="true"] {
  color: var(--lyte-colorpicker-formatdropdown-active-text-color);
}
.lyteCPDropbox lyte-drop-item[selected="true"]::before {
  content: none;
}
.selectFormat .colorPickerDD {
  padding: 5px 5px 5px 20px;
}
.selectFormat lyte-dropdown lyte-icon.dropdown {
  background-position: -14px -2px;
  width: 9px;
  height: 5px;
}
.showValue {
  display: inline-block;
  vertical-align: top;
  width: calc(100% - 85px);
}
.cpValFormatIp {
  border-spacing: 0;
}
.cpValFormatIp lyte-tr:nth-child(2) lyte-td {
  font-size: var(--lyte-colorpicker-formatlabel-font-size);
  color: var(--lyte-colorpicker-formatlabel-text-color);
  text-align: center;
}
.cpValFormatIp lyte-td {
  vertical-align: top;
  padding: 0;
  border-bottom: 0;
  min-width: auto;
}
.cpValFormatIp lyte-tr:first-child lyte-td {
  padding-right: 5px;
}
.cpValFormatIp lyte-tr:first-child lyte-td:first-child {
  padding-right: 0;
}
.showValue .lyteField {
  border: 1px solid var(--lyte-colorpicker-input-border-color);
}
.showValue .lyteInputBox input {
  padding: 5px 4px;
  font-size: var(--lyte-colorpicker-inputvalue-font-size);
  min-width: auto;
  text-align: center;
}
.showValue .lyteInputBox .lyteField:hover {
  border: 1px solid var(--lyte-colorpicker-input-hover-border-color);
}
.showValue .lyteInputBox.lyteInputFocus .lyteField {
  outline: none;
  border: 1px solid var(--lyte-colorpicker-input-hover-border-color);
}
.showValue .lyteInputBox.vertical {
  width: 40px;
}
#lyteCPShowValue {
  width: 128px;
}
#lyteCPShowValue.lyteInputBox input {
  text-align: right;
}
.lyteColorPicker__transparentbg {
  border-radius: 6px;
  background: url(../../../images/lyteCP_op_slider_bg.png);
}
.lyteCP__transparentbg {
  background: url(../../../images/lyteCP_op_slider_bg.png);
  border-radius: 50%;
  width: 34px;
  height: 34px;
  margin-right: auto;
}
.lyteCPHexText lyte-td:first-child {
  visibility: hidden;
}
#lyteCPHiddenInput {
  position: absolute;
  left: -9999px;
}
/*  Colorpicker advanced section related code ends    */
.lyteColorPicker__pe {
  pointer-events: none;
  cursor: default;
}
.showValue .lyteInputBox.lyteInputFocus.lyteCp__Invalid .lyteField {
  border: 1px solid #f4a7a7;
}
.lyteCp__Invalid input {
  background: #f5c7c7;
}
.lyteColorPicker__commandbar button {
  text-transform: capitalize;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* LYTE-COLORPICKER ENDS */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* LYTE-PROGRESSBAR BEGINS  */
.lyteProgressBar {
  position: relative;
}
.lyteProgressBar.lyteHorizontal {
  height: 14px;
  width: calc(100% - 200px);
  background: var(--lyte-progressbar-horizontal-bg);
  border-radius: 8px;
}
.lyteProgressBar .lyteProgressStatus {
  display: block;
  height: 100%;
  border-radius: 20px;
  position: relative;
  overflow: hidden;
  background: var(--lyte-progress-status-bg);
  color: var(--lyte-progress-status-text-color);
  transition: width 0.25s;
}
.lyteProgressBar .lyteProgressStatus .progressMovingObj,
.lyteProgressBar .lyteProgressStatusStack .progressMovingObj {
  left: 0;
  width: 100%;
  height: 100%;
  display: inline-block;
  position: absolute;
  top: 0;
  box-sizing: border-box;
  background-image: linear-gradient(-45deg, rgba(221, 221, 221, 0.29) 25%, transparent 25%, transparent 50%, rgba(221, 221, 221, 0.29) 50%, rgba(221, 221, 221, 0.29) 75%, transparent 75%, transparent);
  background-size: 20px 20px;
  animation: move 1s linear infinite;
  border-radius: 20px;
}
@keyframes move {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 20px 20px;
  }
}
.lyteProgressBar .lyteProgressPercentage {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-progressbar-percentage-font-size);
  line-height: 14px;
  color: var(--lyte-progress-status-text-color);
  left: 50%;
  transform: translateX(-50%);
  position: absolute;
  top: 0px;
  z-index: 10;
}
.lyteProgressBar.lyteProgressCompleted .lyteProgressStatus {
  background: var(--lyte-progressbar-horizon-completed-bg);
}
/*  Radial progress bar related CSS -- BEGINS   */
.lyteProgressBar.lyteCircle {
  width: 100px;
  height: 100px;
}
.lyteProgressBar .lyteCircleType {
  position: relative;
  display: inline-block;
}
.lyteCircleType svg {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-progressbar-circle-font-size);
  fill: var(--lyte-progressbar-circle-text-color);
}
.lyteProgressBar.lyteCircle .svgValueEle {
  transform: rotate(-90deg);
}
.lyteProgressBar.lyteCircle circle:first-child {
  stroke: var(--lyte-progressbar-circle-bg);
}
.lyteProgressBar.lyteCircle circle {
  transition: stroke-dashoffset 0.25s linear;
}
/*  Radial progress bar related CSS -- ENDS   */
/*  Indeterminate horizontal progress bar related CSS -- BEGINS   */
.lyteIndeterminate {
  overflow: hidden;
}
.inc {
  animation: increase 2s infinite;
}
.dec {
  animation: decrease 2s 0.5s infinite;
}
@keyframes increase {
  from {
    left: -5%;
    width: 5%;
  }
  to {
    left: 130%;
    width: 100%;
  }
}
@keyframes decrease {
  from {
    left: -80%;
    width: 80%;
  }
  to {
    left: 110%;
    width: 10%;
  }
}
/*  Indeterminate horizontal progress bar related CSS -- ENDS   */
/*  stacked progress bar related CSS -- BEGINS   */
.lyteStacked,
.lyteProgressStatusStack {
  display: flex;
  overflow: hidden;
}
.lyteStacked .lyteProgressStatusStack {
  flex-direction: column;
  justify-content: center;
  color: var(--lyte-progress-status-text-color);
  text-align: center;
  white-space: nowrap;
  background: #007bff;
  transition: width 2s linear;
}
.lyteProgressBarWithLineSeparator.lyteStacked {
  overflow: visible;
}
.lyteProgressBarWithLineSeparator .lyteProgressStatusStack:first-child {
  border-radius: 0 8px 8px 0;
}
.lyteProgressBarWithLineSeparator .lyteProgressStatusStack:last-child {
  border-radius: 8px 0 0 8px;
}
.lyteProgressBarWithLineSeparator .lyteProgressStatusStack:only-child {
  border-radius: 8px;
}
.lyteProgressBarLineSeparator {
  width: 1px;
  height: 100%;
  padding: 5px 0;
  background: #000;
  transform: translate(0, -5px);
}
/*  stacked progress bar related CSS -- ENDS   */
/*  vertical progress bar related CSS -- BEGINS   */
.lyteProgressBar.lyteVertical {
  background-color: #e5e5e5;
  background-position: 50% 50%;
  border-radius: 8px;
  display: inline-block;
  vertical-align: middle;
  box-sizing: border-box;
}
.lyteProgressBar .lyteProgressStatusVertical {
  border-radius: 8px;
  background: #51a2ee;
  width: 100%;
  position: absolute;
  overflow: hidden;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset;
  transition: height 0.25s;
  left: 0;
  height: 0;
}
.lyteProgressStatusVertical.up {
  bottom: 0;
}
.lyteProgressStatusVertical.down {
  top: 0;
}
.lyteProgressStatusVertical .lyteProgressPercentage {
  top: 50%;
  transform: translate(-50%, -50%);
}
/*  vertical progress bar related CSS -- ENDS   */
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* LYTE-PROGRESSBAR END*/
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* LYTE-DATERANGEPICKER BEGINS  */
lyte-daterangepicker {
  display: inline-block;
}
lyte-daterangepicker * {
  box-sizing: content-box;
}
lyte-daterangepicker lyte-calendar {
  display: block;
}
.lyteDateRangePickerRow {
  font-family: var(--lyte-primary-font);
  display: flex;
  box-shadow: 0 0 3px 1px var(--lyte-daterangepicker-boxshadow-color);
  border: 1px solid var(--lyte-daterangepicker-border-color);
  background: var(--lyte-daterangepicker-bg);
}
.lyteDateRangePickerRow .lyteCalendarPopup {
  box-shadow: none;
  border: none;
  background: inherit;
}
.lyteDateRangePickerRow lyte-dropdown lyte-drop-button {
  background: inherit;
}
.lyteDateRangePickerCol1,
.lyteDateRangePickerCol2 {
  position: relative;
  flex-grow: 1;
}
.lyteDateRangePickerRow .lyteCalBtns {
  display: none;
}
.lyteDateRPMonthHeader {
  text-align: center;
  font-size: var(--lyte-daterangepicker-header-font-size);
  padding: 12px 23px;
}
.lyteDateRPLeftNav {
  position: absolute;
  top: 17px;
  right: 20px;
}
.lyteDateRPRightNav {
  top: 17px;
  left: 20px;
  position: absolute;
}
.monthDD {
  max-width: 150px;
  margin-left: 7px;
  width: auto;
}
.monthDD lyte-drop-button {
  font-size: var(--lyte-daterangepicker-month-dropbtn-font-size);
}
.yearDD {
  width: auto;
}
.yearDD lyte-drop-button {
  font-size: var(--lyte-daterangepicker-year-dropbtn-font-size);
}
.dRPCalendar2 .lyteCalTableContainer {
  border-right: 1px solid var(--lyte-daterangepicker-calendar-separator-color);
}
.lyteDateRangePickerRow .lyteCalToday {
  background: inherit;
}
.lyteDateRPMonthStartDate,
.lyteDateRPMonthEndDate,
.lyteDateRangePickerRow .lyteDateRPTempSelected {
  border-radius: 0;
  background: var(--lyte-daterangepicker-inrange-bg);
  position: relative;
  color: var(--lyte-daterangepicker-inrange-text-color);
}
.lyteDateRPTempFirstDateSelected.lyteCalTableCell,
.lyteDateRPTempLastDateSelected,
.lyteDateRPFirstDateSelected.lyteCalTableCell,
.lyteDateRPLastDateSelected.lyteCalTableCell,
.lyteDateRPTempSelected.lyteDateRPTempFirstDateSelected:hover,
.lyteDateRPTempSelected.lyteDateRPTempLastDateSelected:hover,
.lyteDateRPTempFirstDateSelected:hover,
.lyteDateRPTempLastDateSelected:hover,
.lyteDateRPFirstDateSelected:hover,
.lyteDateRPLastDateSelected:hover {
  color: var(--lyte-daterangepicker-selected-date-text-color);
  position: relative;
  z-index: 0;
  background: var(--lyte-daterangepicker-inrange-bg);
  border-radius: 0 50% 50% 0;
  border-color: transparent;
}
.lyteDateRPTempSelected.lyteDateRPTempLastDateSelected,
.lyteDateRPTempLastDateSelected.lyteCalTableCell,
.lyteDateRPLastDateSelected.lyteCalTableCell,
.lyteDateRPTempLastDateSelected:hover,
.lyteDateRPLastDateSelected:hover {
  background: var(--lyte-daterangepicker-inrange-bg);
  border-radius: 50% 0 0 50%;
  color: var(--lyte-daterangepicker-selected-date-text-color);
}
.lyteDateRPTempFirstDateSelected::before,
.lyteDateRPFirstDateSelected::before,
.lyteDateRPTempLastDateSelected::before,
.lyteDateRPLastDateSelected::before {
  content: '';
  width: 100%;
  height: 100%;
  background: var(--lyte-daterangepicker-selelem-bg);
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  z-index: -1;
  border-radius: var(--lyte-daterangepicker-selected-date-border-radius);
}
.lyteDateRPTempFirstDateSelected {
  border-radius: 0 50% 50% 0;
}
.lyteDateRPTempFirstDateSelected::after,
.lyteDateRPFirstDateSelected::after,
.lyteDateRPMonthStartDate::after,
.lyteDateRPTempSelected::after {
  content: '';
  position: absolute;
  right: calc(100% + 1px);
  width: 8px;
  background: var(--lyte-daterangepicker-inrange-bg);
  top: -1px;
  height: 32px;
}
.lyteWeekNumberGrid + .lyteDateRPLastDateSelected,
.lyteWeekNumberGrid + .lyteDateRPTempLastDateSelected,
.lyteWeekNumberGrid + .lyteDateRPTempLastDateSelected:hover,
.lyteDateRPFirstDateSelected:last-of-type,
.lyteDateRPTempFirstDateSelected:last-of-type,
.lyteDateRPLastDateSelected:first-child,
.lyteDateRPTempLastDateSelected:first-child,
.lyteDateRPTempLastDateSelected.lyteCalTableCell:first-child:hover {
  background: transparent;
}
.lyteDateRPTempFirstDateSelected,
.lyteDateRPTempLastDateSelected,
.lyteDateRPFirstDateSelected,
.lyteDateRPLastDateSelected {
  color: var(--lyte-daterangepicker-selected-date-text-color);
}
.lyteDateRPTempSelected:hover {
  background: var(--lyte-daterangepicker-inrange-bg);
  color: var(--lyte-daterangepicker-inrange-hover-text-color);
  border-radius: 0;
}
.lyteCalTableCell.lyteDateRPTempLastDateSelected:hover,
.lyteDateRPMonthEndDate,
.lyteDateRPTempSelected:last-of-type,
.lyteCalTableCell.lyteDateRPTempSelected:last-of-type:hover {
  border-radius: 50% 0 0 50%;
}
.lyteWeekNumberGrid + .lyteDateRPTempSelected,
.lyteDateRPMonthStartDate,
.lyteDateRPTempSelected:first-of-type,
.lyteDateRPTempSelected:first-of-type:hover {
  border-radius: 0 50% 50% 0;
}
.lyteDateRPMonthEndDate:first-of-type {
  border-radius: var(--lyte-daterangepicker-selected-date-border-radius);
}
.lyteDateRPTempSelected:last-of-type::after,
.lyteDateRPFirstDateSelected:last-of-type::after,
.lyteDateRPTempFirstDateSelected:last-of-type::after,
.lyteDateRPTempLastDateSelected::after,
.lyteDateRPLastDateSelected::after {
  width: 0;
}
.lyteDateRPTempFirstDateSelected.lyteDateRPTempLastDateSelected,
.lyteDateRPFirstDateSelected.lyteDateRPLastDateSelected {
  background: var(--lyte-daterangepicker-bg);
}
.lyteDateRPTempFirstDateSelected.lyteDateRPMonthEndDate,
.lyteDateRPMonthEndDate.lyteDateRPFirstDateSelected {
  background: var(--lyte-daterangepicker-bg);
  border-radius: 0 50% 50% 0;
}
.lyteDateRPInterimEndDate::after,
.lyteDateRPTempFirstDateSelected.lyteDateRPMonthEndDate::after,
.lyteDateRPMonthEndDate.lyteDateRPFirstDateSelected::after {
  content: none;
}
.lyteDateRPMonthStartDate.lyteDateRPTempLastDateSelected,
.lyteDateRPMonthStartDate.lyteDateRPLastDateSelected {
  background: var(--lyte-daterangepicker-bg);
}
.lyteDateRPInterimEndDate:hover,
.lyteDateRPInterimEndDate.lyteDateRPTempSelected:first-of-type,
.lyteDateRPInterimEndDate {
  border-top-left-radius: var(--lyte-daterangepicker-selected-date-border-radius);
  border-bottom-left-radius: var(--lyte-daterangepicker-selected-date-border-radius);
}
.lyteDateRPInterimStartDate.lyteDateRPTempSelected.lyteDateRPTempLastDateSelected,
.lyteDateRPInterimStartDate.lyteDateRPTempLastDateSelected:hover,
.lyteDateRPInterimStartDate:hover,
.lyteDateRPInterimStartDate {
  border-top-right-radius: var(--lyte-daterangepicker-selected-date-border-radius);
  border-bottom-right-radius: var(--lyte-daterangepicker-selected-date-border-radius);
}
.lyteCalToday.lyteDateRPTempSelected {
  border-color: transparent;
}
/*------- Added by Sam-------*/
.lyteDateRPNavDisabled {
  opacity: 0.3;
  pointer-events: none;
}
.lyteSeperateDRP .lyteDateRPFirstDateSelected,
.lyteSeperateDRP .lyteDateRPLastDateSelected {
  border-radius: 50%;
}
.lyteSeperateDRP .lyteDateRPFirstDateSelected:after {
  display: none;
}
.lyteDateRangePickerRow .lyteCalTableCell {
  touch-action: none;
}
/*------- Added for ltPropHeaderType option -------*/
.lyteDateRPStringHeader {
  padding-top: 17px;
  font-size: 18px;
  color: #666;
}
/*------- Added for ltPropFillRows option -------*/
lyte-daterangepicker .lyteCalDiffMonth {
  pointer-events: none;
  opacity: 0.4;
}
/*------- Added by Sam-------*/
.lyteAllowOtherMonthSelection .lyteCalDiffMonth {
  pointer-events: auto;
}
.lyteAllowOtherMonthSelection .lyteCalDisabled {
  pointer-events: none;
}
.lyteAllowOtherMonthSelection .lyteDateRPFirstDateSelected,
.lyteAllowOtherMonthSelection .lyteDateRPTempSelected,
.lyteAllowOtherMonthSelection .lyteDateRPLastDateSelected,
.lyteAllowOtherMonthSelection .lyteCalDiffMonth:hover {
  opacity: 1;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* LYTE-DATERANGEPICKER ENDS    */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
lyte-tree {
  background: var(--lyte-tree-bg);
  display: block;
  padding-right: 50px;
  overflow: hidden;
  transition: height 0.2s ease;
}
lyte-tree lyte-yield {
  display: inline-block;
}
lyte-tree-body {
  display: block;
  margin-top: 20px;
}
.lyteTreeBodyDivLastVisibleElem > lyte-tree-body > .mainContainer::after,
.lyteTreeBodyDiv:last-of-type > lyte-tree-body > .mainContainer::after {
  content: '';
  position: absolute;
  width: 3px;
  height: calc(100% - 18px);
  background: var(--lyte-tree-bg);
  z-index: 10;
  right: -43px;
  top: 9px;
}
lyte-tree-content {
  display: block;
  cursor: pointer;
  position: relative;
}
lyte-tree lyte-tree lyte-tree-content::before {
  content: '';
  width: 30px;
  height: 1px;
  border-bottom: 1px dashed var(--lyte-tree-border-color);
  position: absolute;
  right: -38px;
  top: 9px;
}
.mainContainer {
  position: relative;
}
.mainContainer::before {
  content: '';
  width: 1px;
  height: calc(100% - 34px);
  border-right: 1px dashed var(--lyte-tree-border-color);
  top: 25px;
  position: absolute;
  right: 8px;
}
.lyteTreeNoChildContainer::before {
  content: none;
}
lyte-tree-icon {
  display: inline-block;
  text-align: right;
}
lyte-tree-icon .collapseBox {
  width: 16px;
  height: 16px;
  display: inline-block;
  position: relative;
  vertical-align: middle;
  opacity: 0.7;
}
lyte-tree-icon:hover .collapseBox {
  opacity: 0.8;
}
.lyteTreeOpen .collapseBox,
lyte-tree-icon.open .collapseBox {
  opacity: 0.9;
}
lyte-tree lyte-tree lyte-tree-icon:hover .collapseBox {
  border-color: var(--lyte-tree-collpase-hover-border-color);
}
.treeValue {
  display: inline-block;
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-tree-value-font-size);
  color: var(--lyte-tree-text-color);
  margin-right: 5px;
  vertical-align: middle;
}
lyte-tree lyte-tree lyte-tree-icon:hover .treeValue {
  color: var(--lyte-tree-text-hover-color);
}
.lyteTreeOpen .arrow,
lyte-tree-icon.open .arrow {
  background-image: var(--lyte-sprite-image);
  background-position: -25px -107px;
  width: 16px;
  height: 16px;
  display: inline-block;
  position: absolute;
}
.lyteTreeClose .arrow,
lyte-tree-icon.close .arrow {
  background-image: var(--lyte-sprite-image);
  background-position: -1px -107px;
  width: 16px;
  height: 16px;
  display: inline-block;
  position: absolute;
}
.lyteTreeOpen .treeValue,
lyte-tree-icon.open .treeValue {
  font-family: var(--lyte-secondary-font);
}
.lyteTreeHasNoChild .lyteTreeOpen .treeValue,
.lyteTreeHasNoChild lyte-tree-icon.open .treeValue,
.noChildClass lyte-tree-icon.open .treeValue {
  font-family: var(--lyte-primary-font);
  margin-right: 0;
  margin-top: -3px;
  color: var(--lyte-tree-text-color);
  cursor: default;
}
.lyteTreeHasNoChild .collapseBox,
.noChildClass .collapseBox {
  display: none;
}
.lyteDataTreeNodeWrap {
  padding-right: 12px;
}
.lyteDataTreeNode {
  position: relative;
  display: flex;
  align-items: flex-start;
  margin-bottom: 5px;
  color: var(--lyte-tree-text-color);
}
.lyteDataTreeIndex {
  color: #5ba1e5;
}
.lyteDataTreeNodeContent {
  margin-right: 10px;
}
.lyteDataTreeNodeText {
  color: #357636;
}
.lyteDataTreeObjectNode,
.lyteDataTreeArrayNode {
  cursor: pointer;
}
.lyteDataTreeClosed::before {
  content: '';
  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent;
  border-right: 5px solid var(--lyte-tree-arrow-bg);
  display: inline-block;
  position: absolute;
  right: -10px;
  top: 5px;
}
.lyteDataTreeNodeContent > .lyteDataTreeSubLevel > .lyteDataTreeNodeWrap {
  padding-right: 0;
}
.lyteDataTreeNodeContent > .lyteDataTreeSubLevel > .lyteDataTreeNodeWrap > .lyteDataTreeNode {
  position: static;
}
.lyteDataTreeOpened::before {
  content: '';
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-top: 5px solid var(--lyte-tree-arrow-bg);
  display: inline-block;
  position: absolute;
  right: -12px;
  top: 8px;
}
.lyteTreeComma:last-of-type {
  display: none;
}
.lyteDataTreeSubLevel {
  padding-right: 0;
}
.lyteDataTreeObjectTextLabel {
  opacity: 0;
}
/*	Lyte Tree Horizontal Related CSS Begins	*/
lyte-tree[lt-prop-structure-type="hierarchy"],
.lyteHTreeChildWrap {
  padding-left: 0;
}
.lyteHTreeParentNode {
  padding: 15px;
  position: relative;
}
.lyteHTreeContentWrap {
  cursor: pointer;
}
.lyteHTreeConnectorLine {
  display: flex;
  position: absolute;
  top: 0;
  left: 0;
  width: 1px;
  height: 100%;
  flex-direction: column;
}
.lyteHTreeVerticalConnectLine {
  background: #555;
  flex-grow: 1;
}
.lyteHTreeHorizontalAfterConnectLine,
.lyteHTreeHorizontalBeforeConnectLine {
  position: absolute;
  height: 1px;
  top: 50%;
  background: #555;
  width: 15px;
}
.lyteHTreeHorizontalBeforeConnectLine {
  left: 0;
}
.lyteHTreeHorizontalAfterConnectLine {
  right: 0;
}
.lyteHTreeVerticalConnectorHidden {
  visibility: hidden;
}
.lyteHTreeHorizontalConnectorHidden {
  display: none;
}
/*	Lyte Tree Horizontal Related CSS Ends	*/
/*	Sortable Tree related LESS Begins	*/
.lyteTreeTopParent.lyteTreeSortable {
  position: relative;
}
.lyteTreeSortableElement {
  position: relative;
  border: solid 1px transparent;
  -webkit-user-select: none;
  user-select: none;
}
.lyteTreeCurrentSortElem {
  cursor: move;
  pointer-events: none;
  background: #eee;
  z-index: 15;
}
.lyteTreeSortable .lyteTreeSortableElement.lyteTreeSortableDropPlaceholderChild {
  z-index: 15;
  border: 1px dashed #5ba1e5;
}
.lyteTreeSortable lyte-tree-body {
  margin-top: 0;
}
.lyteTreeSortable .lyteTreeMainContainer::before {
  left: calc((var(--treeLevel) * 50px) + 8px);
  z-index: 1;
  top: 35px;
}
.lyteTreeSortable .lyteTreeBodyDivLastVisibleElem > lyte-tree-body > .mainContainer::after,
.lyteTreeSortable .lyteTreeBodyDiv:last-of-type > lyte-tree-body > .mainContainer::after {
  left: calc((var(--treeLevel)*50px) - 43px);
  top: 19px;
}
.lyteTreeSortable lyte-tree {
  padding: 0;
}
.lyteTreeSortable lyte-tree-content {
  padding-top: 10px;
  padding-bottom: 10px;
  padding-left: calc(var(--treeLevel) * 50px);
}
.lyteTreeSortable lyte-tree-content::before {
  left: calc((var(--treeLevel) * 50px) - 42px);
  top: 17px;
}
.lyteTreeDragRunning .treeValue {
  user-select: none;
}
.lyteTreeSortable .lyteTreeSortableElement.lyteTreeSortableDropPlaceholderBottom::before,
.lyteTreeSortable .lyteTreeSortableElement.lyteTreeSortableDropPlaceholderTop::before {
  content: '';
  border-left: 5px solid #5ba1e5;
  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent;
  width: 0;
  height: 0;
  display: block;
  position: absolute;
  left: 0;
}
.lyteTreeSortableDropPlaceholderTop::before {
  top: -6px;
}
.lyteTreeSortableDropPlaceholderBottom::before {
  bottom: -6px;
}
.lyteTreeSortable .lyteTreeSortableElement.lyteTreeSortableDropPlaceholderBottom::after,
.lyteTreeSortable .lyteTreeSortableElement.lyteTreeSortableDropPlaceholderTop::after {
  content: '';
  display: block;
  position: absolute;
  left: 10px;
  width: 25px;
  height: 2px;
  background: #5ba1e5;
  z-index: 10;
}
.lyteTreeSortableDropPlaceholderTop::after {
  top: -2px;
}
.lyteTreeSortableDropPlaceholderBottom::after {
  bottom: -2px;
}
.lyteTreeDragRunning lyte-tree :not(lyte-tree.lyteTreeClosed) {
  overflow: visible;
}
.lyteTreeMM {
  cursor: move;
}
.lyteTreeSortable .lyteTreeMainContainer::before {
  height: calc(100% - 55px);
}
.lyteTreeSortableDropNotAllowed {
  cursor: not-allowed;
}
/*	Sortable Tree related LESS Ends	*/
/*	Unnamed Subgroup related CSS Begins	*/
.lyteTreeUnnamedSubgroup > lyte-tree-body > .lyteTreeMainContainer > .lyteTreeSortableElement > lyte-yield,
.lyteTreeUnnamedSubgroup > lyte-tree-body > .lyteTreeMainContainer > lyte-yield {
  display: block;
  padding-top: 20px;
}
.lyteTreeUnnamedSubgroup lyte-tree-body > .lyteTreeMainContainer > lyte-tree > .lyteTreeBodyDiv:first-of-type > lyte-tree-body,
.lyteTreeUnnamedSubgroup > lyte-tree-body {
  position: relative;
  margin-top: 0;
}
.lyteTreeUnnamedSubgroup > lyte-tree-body > .lyteTreeMainContainer::before {
  top: 30px;
  height: calc(100% - 39px);
}
.lyteTreeSortableElement + lyte-tree > .lyteTreeUnnamedSubgroup > lyte-tree-body > .lyteTreeMainContainer::before {
  top: 41px;
}
.lyteTreeUnnamedSubgroup > lyte-tree-body > .lyteTreeMainContainer > .lyteTreeSortableElement lyte-tree-content {
  padding-block: 0;
}
.lyteTreeUnnamedSubgroup > lyte-tree-body > .lyteTreeMainContainer > .lyteTreeSortableElement > lyte-yield > lyte-tree-content lyte-tree-icon,
.lyteTreeUnnamedSubgroup > lyte-tree-body > .lyteTreeMainContainer > .lyteTreeSortableElement > lyte-yield > lyte-tree-content .treeValue,
.lyteTreeUnnamedSubgroup > lyte-tree-body > .lyteTreeMainContainer > lyte-yield > lyte-tree-content lyte-tree-icon,
.lyteTreeUnnamedSubgroup > lyte-tree-body > .lyteTreeMainContainer > lyte-yield > lyte-tree-content .treeValue {
  display: none;
}
.lyteTreeUnnamedSubgroup > lyte-tree-body > .lyteTreeMainContainer > lyte-yield > lyte-tree-content::before {
  width: 45px;
}
.lyteTreeUnnamedSubgroup > lyte-tree-body > .lyteTreeMainContainer > .lyteTreeSortableElement > lyte-yield > lyte-tree-content::before {
  width: 50px;
  top: 19px;
}
.lyteTreeUnnamedSubgroup:last-of-type > lyte-tree-body > .lyteTreeMainContainer::after {
  height: calc(100% - 38px);
  top: 30px;
}
/*	Unnamed Subgroup related CSS Ends	*/
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-treeselect {
  display: inline-block;
}
lyte-treeselect lyte-dropdown {
  max-width: 100%;
  display: block;
}
lyte-treeselect lyte-dropdown[lt-prop-type="multiple"] lyte-drop-button::after {
  content: none;
}
.lyteTreeSelectDropbox lyte-drop-body {
  padding: 5px 10px;
}
.lyteTreeSelectDropbox lyte-tree {
  padding-right: 25px;
}
.lyteTreeSelectDropbox lyte-drop-body > lyte-tree {
  padding-right: 0;
}
.lyteTreeSelectDropbox lyte-tree-body {
  margin-top: 0;
}
.lyteTreeSelectDropbox .lyteTreeMainContainer::before {
  height: calc(100% - 40px);
}
.lyteTreeSelectDropbox lyte-tree-content {
  display: flex;
  align-items: center;
}
.lyteTreeSelectDropbox lyte-tree lyte-tree-content::before {
  width: 15px;
  left: -17px;
  top: 15px;
}
.lyteTreeSelectDropbox .lyteTreeBodyDiv:last-of-type > lyte-tree-body > .lyteTreeMainContainer::after {
  left: -18px;
  top: 17px;
}
.lyteTreeSelectDropbox lyte-drop-item.lyteDropdownActive,
.lyteTreeSelectDropbox .lyteTreeMainContainer > lyte-yield,
.lyteTreeSelectDropbox .collapseBox {
  display: block;
}
.lyteTreeSelectDropbox .lyteTreeHasNoChild .collapseBox {
  display: none;
}
.lyteTreeDropItem {
  flex: 1;
  padding-right: 5px;
  margin-right: 5px;
}
.lyteTreeHasNoChild .lyteTreeDropItem {
  padding-right: 10px;
  margin-right: 0;
}
.lyteTreeSelectSelected {
  background: #e6f3fd;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-tree-table {
  display: table;
  box-sizing: border-box;
  overflow: auto;
  position: relative;
  border: 1px solid #e2e2e2;
}
lyte-tree-table-header {
  display: table-header-group;
}
.lyteTreeTableRow,
lyte-tree-table-header > lyte-yield {
  display: table-row;
}
lyte-tree-table-th,
lyte-tree-table-td {
  display: table-cell;
  padding: 7px 15px;
}
lyte-tree-table-body {
  display: table-row-group;
}
lyte-tree-table-th {
  background: #f7f7f7;
  border-right: 1px solid #e2e2e2;
  position: sticky;
  top: 0;
  z-index: 10;
}
.lyteTreeFixedHeader {
  left: 0;
  z-index: 15;
}
lyte-tree-table-td {
  border-right: 1px solid #e2e2e2;
  border-bottom: 1px solid #e2e2e2;
}
.lyteTreeFixedCol {
  position: sticky;
  left: 0;
  background: #fff;
  z-index: 5;
}
.lyteTreeTableRow:last-of-type lyte-tree-table-td {
  border-bottom: 0;
}
lyte-tree-table-td:last-of-type {
  border-right: 0;
}
lyte-tree-table-td:first-child {
  padding-left: calc((var(--tree-level) + 1) * 15px);
}
lyte-tree-table-icon {
  display: inline-flex;
  align-items: center;
  cursor: pointer;
  width: 15px;
  height: 15px;
  vertical-align: middle;
  margin-left: -15px;
}
lyte-tree-table-icon::after {
  content: '';
  display: inline-block;
  width: 0;
  height: 0;
  border-right: 7px solid transparent;
  border-left: 7px solid transparent;
  border-top: 7px solid #555;
  transition: transform 0.3s ease;
}
.lyteTreeTableClosedRow lyte-tree-table-icon {
  transform: rotate(-90deg);
}
.lyteTreeLastFixedCol {
  box-shadow: 3px 0 7px -2px rgba(0, 0, 0, 0.2);
  background: green;
}
.lyteTreeTableDispNone {
  display: none;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/*  Colorbox Styles starts  */
.lyteColorbox {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-colorbox-font-size);
  position: fixed;
  display: none;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: var(--lyte-colorbox-zindex);
}
.lyteColorboxDisplay.lyteColorbox {
  display: flex;
  flex-direction: column;
}
.lyteColorboxFreezeLayer {
  position: fixed;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  background: var(--lyte-colorbox-freeze-bg);
  opacity: 0.8;
}
.lyteColorboxWrapper {
  width: 900px;
  margin: 0 auto;
  background: var(--lyte-colorbox-wrapper-bg);
  position: relative;
  height: calc(100% - 170px);
  overflow: auto;
  border-radius: 0 0 2px 2px;
  z-index: 5;
}
.lyteColorboxContent {
  height: calc(100% - 65px);
  margin: 0 auto;
  position: relative;
  padding: 10px 10px 0;
  background: var(--lyte-colorbox-wrapper-bg);
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: auto;
  border-radius: 3px 3px 0 0;
}
.lyteCBoxPhoto {
  max-height: inherit;
  max-width: 100%;
  transition: transform 0.15s linear;
}
.lyteColorboxHeader {
  display: flex;
  background: var(--lyte-colorbox-wrapper-bg);
  position: relative;
  padding: 15px 20px;
  border-top: 1px solid var(--lyte-colorbox-customtype-header-border-color);
  border-radius: 0 0 3px 3px;
}
.lyteColorboxTitle {
  font-size: var(--lyte-colorbox-title-font-size);
  margin-left: auto;
  font-family: var(--lyte-secondary-font);
  color: var(--lyte-colorbox-text-color);
}
.lyteColorboxCloseIcon {
  position: fixed;
  top: 20px;
  left: 35px;
}
lyte-colorbox-close,
.lyteColorboxCloseIcon {
  background-image: var(--lyte-sprite-image);
  background-position: -50px -100px;
  height: 30px;
  width: 30px;
  border-radius: 50%;
  cursor: pointer;
  opacity: 0.8;
}
lyte-colorbox-close:hover,
.lyteColorboxCloseIcon:hover {
  opacity: 1;
}
.lyteColorboxThumbOuterWrapper {
  height: 150px;
  order: 3;
  position: relative;
  align-self: center;
  justify-content: center;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  z-index: 5;
}
.lyteColorboxThumbInnerWrapper {
  display: flex;
  transition: transform 0.3s ease;
}
.lyteColorboxThumb {
  align-self: center;
  margin-left: 10px;
  width: 70px;
  height: 70px;
  border: 1px solid transparent;
  cursor: pointer;
  box-sizing: border-box;
  position: relative;
  border-radius: 3px;
  display: flex;
  justify-content: center;
  align-items: center;
}
.lyteColorboxThumb:hover {
  border: 1px solid var(--lyte-colorbox-customtype-thumb-hover-border-color);
}
.lyteColorboxThumb.thumb-on {
  border: 1px solid var(--lyte-colorbox-thumb-active-border-color);
}
.lyteColorboxThumb.thumb-on::after {
  content: attr(data-thumb-val);
  position: absolute;
  bottom: -30px;
  color: var(--lyte-colorbox-thumb-index-text-color);
  width: 100%;
  text-align: center;
}
.lyteColorboxThumb img {
  width: 100%;
  height: 100%;
  display: block;
  border-radius: 2px;
  object-fit: contain;
}
.lyteCBoxIframeWrap {
  text-align: center;
}
.lyteCBoxIframeIcon {
  background-image: var(--lyte-sprite-image);
  background-position: -117px -198px;
  width: 21px;
  height: 26px;
  display: inline-block;
}
.lyteCBoxIframeLabel {
  color: var(--lyte-colorbox-thumb-iframe-label-text-color);
  font-size: var(--lyte-colorbox-iframe-label-font-size);
  margin-top: 10px;
}
.lyteColorboxThumb .lyteCBoxFavImg {
  height: auto;
  width: auto;
}
.lyteCBoxPhotoZoomIn {
  cursor: zoom-in;
}
.lyteCBoxPhotoZoomOut {
  cursor: zoom-out;
}
lyte-colorbox-previous,
lyte-colorbox-next,
.lyteColorboxIconDiv {
  width: 40px;
  height: 40px;
  border: 1px solid var(--lyte-colorbox-nav-border-color);
  background: var(--lyte-colorbox-nav-bg);
  position: fixed;
  border-radius: 50%;
  top: calc(50% - 20px);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 10;
  transform: rotate(180deg);
}
lyte-colorbox-previous:hover,
lyte-colorbox-next:hover,
.lyteColorboxIconDiv:hover {
  background: var(--lyte-colorbox-nav-hover-bg);
}
lyte-colorbox-previous,
.lyteCBoxPrevious {
  right: 20px;
}
lyte-colorbox-next,
.lyteCBoxNext {
  left: 20px;
}
.lyteColorboxNextIcon,
.lyteColorboxPreviousIcon {
  background-image: var(--lyte-sprite-image);
  background-position: -94px -109px;
  width: 9px;
  height: 11px;
}
.lyteColorboxNextIcon {
  background-position: -115px -108px;
}
.lyteCBoxDownload {
  position: relative;
}
lyte-colorbox-download .lyteColorboxDownloadImg::after,
.lyteCBoxDownload .lyteColorboxDownloadImg::after {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: -271px -106px;
  width: 16px;
  height: 16px;
  opacity: 0.4;
  cursor: pointer;
  display: block;
}
lyte-colorbox-download .lyteColorboxDownloadImg:hover::after,
.lyteCBoxDownload .lyteColorboxDownloadImg:hover::after {
  opacity: 0.8;
}
.lyteColorboxUtilDiv {
  display: flex;
  background: var(--lyte-colorbox-utilbox-bg);
  position: absolute;
  right: 50%;
  bottom: 65px;
  border-radius: 3px;
  z-index: var(--lyte-level2-zindex);
  transform: translateX(50%);
  overflow: hidden;
}
lyte-colorbox-zoomin,
lyte-colorbox-reset,
lyte-colorbox-zoomout,
.lyteColorboxZoomIn,
.lyteColorboxReset,
.lyteColorboxZoomOut {
  cursor: pointer;
  padding: 10px;
  height: 16px;
}
.lyteColorboxDisabled {
  pointer-events: none;
  opacity: 0.6;
}
lyte-colorbox-zoomin:hover,
lyte-colorbox-reset:hover,
lyte-colorbox-zoomout:hover,
.lyteColorboxZoomIn:hover,
.lyteColorboxReset:hover,
.lyteColorboxZoomOut:hover {
  background: rgba(255, 255, 255, 0.25);
}
lyte-colorbox-zoomin::before,
lyte-colorbox-reset::before,
lyte-colorbox-zoomout::before,
.lyteColorboxZoomIn::before,
.lyteColorboxReset::before,
.lyteColorboxZoomOut::before {
  content: '';
  background: var(--lyte-sprite-image);
  display: inline-block;
  align-self: center;
}
lyte-colorbox-zoomout::before,
.lyteColorboxZoomOut::before {
  background-position: -132px -107px;
  width: 13px;
  height: 15px;
}
lyte-colorbox-zoomout:hover::before,
.lyteColorboxZoomOut:hover::before {
  background-position: -153px -107px;
}
lyte-colorbox-reset::before,
.lyteColorboxReset::before {
  background-position: -218px -106px;
  width: 17px;
  height: 17px;
}
lyte-colorbox-reset:hover::before,
.lyteColorboxReset:hover::before {
  background-position: -242px -106px;
}
lyte-colorbox-zoomin::before,
.lyteColorboxZoomIn::before {
  background-position: -175px -107px;
  width: 14px;
  height: 15px;
}
lyte-colorbox-zoomin:hover::before,
.lyteColorboxZoomIn:hover::before {
  background-position: -196px -107px;
}
.lyteColorboxHideVisibility {
  opacity: 0.6;
  cursor: not-allowed;
}
lyte-colorbox-next.lyteColorboxHideVisibility:hover,
lyte-colorbox-previous.lyteColorboxHideVisibility:hover,
.lyteColorboxIconDiv.lyteColorboxHideVisibility:hover {
  background: var(--lyte-colorbox-nav-bg);
}
.lyteCBoxItem {
  position: absolute;
  height: calc(100% - 10px);
  width: calc(100% - 20px);
  display: flex;
  justify-content: center;
  align-items: center;
  background: var(--lyte-colorbox-wrapper-bg);
}
.lytCBoxPreviousItem {
  transform: translate3d(-100%, 0, 0);
  transition: none;
}
.lytCBoxNextItem {
  transform: translate3d(100%, 0, 0);
  transition: none;
}
.lyteCBoxCurrentItem {
  transform: translate3d(0%, 0, 0);
  transition: transform 0.3s ease;
}
.lyteCBoxOH {
  overflow: hidden;
}
.lyteCBoxPhoto,
.lyteCBoxIframe,
.lyteCBoxCustom,
.lyteCBoxDN {
  display: none;
}
.lyteCBoxVisible {
  display: inline-block;
}
.lyteCBoxAlignStart {
  align-items: flex-start;
}
lyte-colorbox-container {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-colorbox-container-font-size);
  position: fixed;
  display: none;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 1040;
}
lyte-colorbox-container.lyteColorboxDisplay {
  display: block;
}
lyte-colorbox-header {
  position: fixed;
  top: 0;
  width: 100%;
  height: 60px;
  background: var(--lyte-colorbox-imagetype-header-bg);
  z-index: 10;
  padding: 15px 20px;
  box-sizing: border-box;
  display: flex;
  align-items: center;
}
lyte-colorbox-download {
  margin-right: 10px;
}
lyte-colorbox-download .lyteColorboxDownloadImg::after {
  background-position: -372px -157px;
  width: 16px;
  height: 15px;
}
lyte-colorbox-title {
  color: var(--lyte-colorbox-imagetype-header-text-color);
  font-size: var(--lyte-colorbox-title-font-size);
}
lyte-colorbox-close {
  margin-right: auto;
}
lyte-colorbox-content {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  overflow: hidden;
  background: rgba(0, 0, 0, 0.8);
}
lyte-colorbox-container .lyteCBoxItem {
  height: 100%;
  width: 100%;
  background: transparent;
}
lyte-colorbox-container .lyteCBoxPhoto,
.lyteColorboxContent .lyteCBoxPhoto {
  position: relative;
  cursor: grab;
}
lyte-colorbox-container .lyteCBoxPhoto.lyteCBoxDragging,
.lyteColorboxContent .lyteCBoxPhoto.lyteCBoxDragging {
  cursor: grabbing;
}
lyte-colorbox-thumbnail {
  position: fixed;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  height: 150px;
  bottom: 0;
  z-index: 10;
  width: 100%;
}
lyte-colorbox-container .lyteColorboxUtilDiv {
  flex-direction: row-reverse;
  bottom: 150px;
}
.lyteCBoxMoveLeft {
  transform: translate3d(-100%, 0, 0);
}
.lyteCBoxMoveRight {
  transform: translate3d(100%, 0, 0);
}
.lyteCBoxMoveLeftWithTransition {
  transform: translate3d(-100%, 0, 0);
  transition: transform 0.3s;
}
.lyteCBoxMoveRightWithTransition {
  transform: translate3d(100%, 0, 0);
  transition: transform 0.3s;
}
.lyteCBoxAnimateOnUp {
  transition: transform 0.3s, left 0.3s, top 0.3s;
}
.lyteColorboxLoadingCircle {
  animation: lyteColorboxLoadingSvgAnim 1.4s linear infinite;
}
@keyframes lyteColorboxLoadingSvgAnim {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(270deg);
  }
}
lyte-colorbox-loading-icon {
  position: absolute;
  left: 50%;
  top: 50%;
  z-index: 5;
  transform: translate(-50%, -50%);
}
.lyteColorboxLoadingCircle circle {
  stroke-dasharray: 88px;
  stroke-dashoffset: 0;
  stroke-width: 1px;
  stroke-linecap: round;
  transform-origin: center;
  animation: lyteColorboxLoadingAnim 1.4s ease-in-out infinite;
}
@keyframes lyteColorboxLoadingAnim {
  0% {
    stroke-dashoffset: 88px;
  }
  50% {
    stroke-dashoffset: 22px;
    transform: rotate(135deg);
  }
  100% {
    stroke-dashoffset: 88px;
    transform: rotate(450deg);
  }
}
lyte-colorbox-content .lyteColorBoxDisableTransition,
.lyteColorboxContent .lyteColorBoxDisableTransition {
  transition: none;
}
.lyteColorboxHideBtn {
  display: none;
}
/*
lyte-colorbox-previous.lyteColorboxHideVisibility:hover, lyte-colorbox-next.lyteColorboxHideVisibility:hover {
  background: #222;
}

.animateOnUp {
    transition: transform 0.3s, left 0.3s, top 0.3s;
}

}*/
/*Sets the orientation of the images so that there wont be any difference in viewing the image in different browser*/
.lyteColorboxThumb.addedOrientation img {
  image-orientation: from-image;
}
.lyteCBoxDNImp {
  display: none !important;
}
/* Sets z-index to current element for non sliding images*/
.lyteCBoxCurrentElem {
  z-index: 1;
}
.lyteCBoxPreviewNone {
  height: 100px;
  width: 100px;
  margin: auto;
  background-image: url(../../images/zip-folder.png);
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* colorbox CSS ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-counter {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-counter-font-size);
  color: var(--lyte-common-text-color);
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
:root {
  --lyte-rating-empty-color: #c7c7c7;
  --lyte-rating-fill-color: #f00;
  --lyte-rating-hover-color: #FF7778;
}
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-rating {
  display: inline-flex;
  white-space: nowrap;
}
lyte-rate-icon {
  display: inline-flex;
  cursor: pointer;
  padding-right: 5px;
  background-image: var(--lyte-sprite-image);
}
lyte-rate-icon:last-child {
  padding-right: 0px;
}
lyte-rating.star lyte-rate-icon {
  background-image: none;
}
lyte-rating.heart lyte-rate-icon {
  background-image: none;
}
lyte-rating.lineStar lyte-rate-icon {
  background-image: none;
}
lyte-rating.lineHeart lyte-rate-icon {
  background-image: none;
}
.lyteRatingReadOnly {
  cursor: not-allowed;
}
.lyteRatingReadOnly lyte-rate-icon {
  pointer-events: none;
}
.lyteRatingSmiley lyte-rate-icon:nth-child(1) {
  background-position: var(--lyte-rating-smiley-very-poor-icon-position);
}
.lyteRatingSmiley.five lyte-rate-icon:nth-child(2) {
  background-position: var(--lyte-rating-smiley-poor-icon-position);
}
.lyteRatingSmiley.three lyte-rate-icon:nth-child(2),
.lyteRatingSmiley.five lyte-rate-icon:nth-child(3) {
  background-position: var(--lyte-rating-smiley-average-icon-position);
}
.lyteRatingSmiley.five lyte-rate-icon:nth-child(4) {
  background-position: var(--lyte-rating-smiley-good-icon-position);
}
.lyteRatingSmiley.three lyte-rate-icon:nth-child(3),
.lyteRatingSmiley.five lyte-rate-icon:nth-child(5) {
  background-position: var(--lyte-rating-smiley-very-good-icon-position);
}
.lyteRatingSmiley lyte-rate-icon.lyteRatingHover:nth-child(1),
.lyteRatingSmiley lyte-rate-icon.lyteRated:nth-child(1) {
  background-position: var(--lyte-rating-smiley-very-poor-rated-icon-position);
}
.lyteRatingSmiley.five lyte-rate-icon.lyteRatingHover:nth-child(2),
.lyteRatingSmiley.five lyte-rate-icon.lyteRated:nth-child(2) {
  background-position: var(--lyte-rating-smiley-poor-rated-icon-position);
}
.lyteRatingSmiley.three lyte-rate-icon.lyteRatingHover:nth-child(2),
.lyteRatingSmiley.three lyte-rate-icon.lyteRated:nth-child(2),
.lyteRatingSmiley.five lyte-rate-icon.lyteRatingHover:nth-child(3),
.lyteRatingSmiley.five lyte-rate-icon.lyteRated:nth-child(3) {
  background-position: var(--lyte-rating-smiley-average-rated-icon-position);
}
.lyteRatingSmiley.five lyte-rate-icon.lyteRatingHover:nth-child(4),
.lyteRatingSmiley.five lyte-rate-icon.lyteRated:nth-child(4) {
  background-position: var(--lyte-rating-smiley-good-rated-icon-position);
}
.lyteRatingSmiley.three lyte-rate-icon.lyteRatingHover:nth-child(3),
.lyteRatingSmiley.three lyte-rate-icon.lyteRated:nth-child(3),
.lyteRatingSmiley.five lyte-rate-icon.lyteRatingHover:nth-child(5),
.lyteRatingSmiley.five lyte-rate-icon.lyteRated:nth-child(5) {
  background-position: var(--lyte-rating-smiley-very-good-rated-icon-position);
}
.lrcSwitchLikeEmpty {
  background-position: var(--lyte-rating-like-empty-icon-position);
}
.lrcSwitchDislikeEmpty {
  background-position: var(--lyte-rating-dislike-empty-icon-position);
}
.lrcSwitchLikeEmpty:hover {
  background-position: var(--lyte-rating-like-empty-hover-icon-position);
  opacity: 0.8;
}
.lrcSwitchDislikeEmpty:hover {
  background-position: var(--lyte-rating-dislike-empty-hover-icon-position);
  opacity: 0.8;
}
.lrcSwitchLike.lyteRated {
  background-position: var(--lyte-rating-like-rated-icon-position);
  opacity: 1;
}
.lrcSwitchDislike.lyteRated {
  background-position: var(--lyte-rating-dislike-rated-icon-position);
  opacity: 1;
}
.lrcToggleEmpty {
  background-position: var(--lyte-rating-toggle-empty-icon-position);
}
.lrcToggleEmpty:hover,
.lrcToggleFill {
  background-position: var(--lyte-rating-toggle-fill-icon-position);
}
.lyteRatingHeartHoverHalfIcon,
.lyteRatingHeartRatedHalfIcon,
.lyteRatingHeartEmptyIcon,
.lyteRatingHeartRatedIcon,
.lyteRatingHeartHoverRatedIcon {
  background-image: unset;
  -webkit-mask-image: var(--lyte-defaultTheme-sprite-image);
  mask-image: var(--lyte-defaultTheme-sprite-image);
  width: 21px;
  height: 21px;
}
.lyteRatingHeartEmptyIcon {
  -webkit-mask-position: -41px -239px;
  mask-position: -41px -239px;
  background-color: var(--lyte-rating-empty-color);
}
.lyteRatingHeartRatedIcon {
  -webkit-mask-position: -74px -239px;
  mask-position: -74px -239px;
  background-color: var(--lyte-rating-fill-color);
}
.lyteRatingHeartHoverRatedIcon.lyteRatingHeartRatedHalfIcon,
.lyteRatingHeartHoverRatedIcon {
  -webkit-mask-position: -8px -239px;
  mask-position: -8px -239px;
  background-color: var(--lyte-rating-hover-color);
}
.lyteRatingHeartRatedHalfIcon,
.lyteRatingHeartHoverHalfIcon {
  -webkit-mask-position: -110px -239px;
  mask-position: -110px -239px;
}
.lyteRatingHeartHoverHalfIcon.lyteRatingHeartRatedHalfIcon,
.lyteRatingHeartHoverHalfIcon {
  background-color: var(--lyte-rating-hover-color);
}
.lyteRatingHeartRatedHalfIcon {
  background-color: var(--lyte-rating-fill-color);
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-splitter {
  display: block;
  background: var(--lyte-splitter-bg);
  border: 1px solid var(--lyte-splitter-border-color);
  color: var(--lyte-splitter-text-color);
}
lyte-splitter lyte-yield {
  height: 100%;
  display: flex;
  width: 100%;
}
lyte-row-splitter {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}
lyte-row-splitter:first-child {
  border-top: 0;
}
lyte-row-splitter:last-child {
  border-bottom: 0;
}
lyte-column-splitter {
  display: flex;
  flex-direction: row;
  flex-grow: 1;
  overflow: auto;
}
lyte-column-splitter:first-child {
  border-left: 0;
}
lyte-column-splitter:last-child {
  border-right: 0;
}
lyte-row-element,
lyte-column-element {
  flex-grow: 1;
  overflow: auto;
  display: flex;
}
lyte-row-element[lt-resize="false"] {
  border-bottom: 1px solid var(--lyte-splitter-border-color);
  border-top: 1px solid var(--lyte-splitter-border-color);
}
lyte-row-element[lt-resize="false"]:first-child {
  border-top: 0;
}
lyte-row-element[lt-resize="false"]:last-child {
  border-bottom: 0;
}
lyte-column-element[lt-resize="false"] {
  border-right: 1px solid var(--lyte-splitter-border-color);
  border-left: 1px solid var(--lyte-splitter-border-color);
}
lyte-column-element[lt-resize="false"]:first-child {
  border-left: 0;
}
lyte-column-element[lt-resize="false"]:last-child {
  border-right: 0;
}
lyte-row-handle,
lyte-column-handle {
  background: var(--lyte-splitter-handle-bg);
  border-radius: 0px;
  -webkit-user-select: none;
  user-select: none;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
}
lyte-column-handle {
  width: 8px;
  cursor: col-resize;
  flex-direction: column;
}
lyte-row-handle {
  height: 8px;
  cursor: row-resize;
}
lyte-row-handle:hover,
lyte-column-handle:hover {
  background: var(--lyte-splitter-handle-hover-bg);
}
lyte-row-handle.splitResizing,
lyte-column-handle.splitResizing {
  background: var(--lyte-theme-active-element-bg);
}
.rowHandleIcon,
.columnHandleIcon {
  background: var(--lyte-splitter-handle-icon-bg);
  border-radius: 6px;
}
.columnHandleIcon {
  height: 30px;
  width: 4px;
  margin: 15px 0;
  order: 1;
}
.rowHandleIcon {
  height: 4px;
  width: 30px;
  margin: 0px 15px;
  order: 1;
}
.splitResizing .columnHandleIcon,
.splitResizing .rowHandleIcon {
  background: var(--lyte-splitter-resizing-handle-icon-bg);
}
.leftCollapseBtn {
  order: 0;
}
.rightCollapseBtn {
  order: 2;
}
.rightPointed::after,
.leftPointed::before {
  content: '';
  width: 0;
  height: 0;
  cursor: pointer;
  display: block;
}
.leftPointed::before {
  border-bottom: 5px solid transparent;
  border-top: 5px solid transparent;
  border-right: 5px solid #000;
}
.rightPointed::after {
  border-bottom: 5px solid transparent;
  border-top: 5px solid transparent;
  border-left: 5px solid #000;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
.lyteSpeedDial {
  position: absolute;
  width: auto;
  height: auto;
  display: flex;
  gap: 20px;
}
.lyteSpeedDialIcon {
  width: 90%;
  height: 90%;
  border-radius: 50%;
}
.lyteSpeedDialMainIcon {
  width: var(--lyte-speed-dial-icon-size);
  height: var(--lyte-speed-dial-icon-size);
}
.lyteSpeedDialIconWrapper {
  width: var(--lyte-speed-dial-icon-size);
  height: var(--lyte-speed-dial-icon-size);
  display: flex;
  border-radius: 50%;
  background: #767373;
  box-sizing: border-box;
  justify-content: center;
  align-items: center;
}
.lyteSpeedDialIconCircleAlign .lyteSpeedDialIconWrapper {
  position: absolute;
  --lyte-speed-dial-angle: calc(var(--lyte-speed-dial-icon-index) * calc(var(--lyte-speed-dial-circle-total-degree) * 1deg) / var(--lyte-speed-dial-icon-count) + calc(var(--lyte-speed-dial-negative-deg) * 1deg));
  transform: rotate(var(--lyte-speed-dial-angle)) translate(calc(var(--lyte-speed-dial-circle-radius) * 1px)) rotate(calc(-1 * var(--lyte-speed-dial-angle)));
}
.lyteSpeedDial .lyteSpeedDialIconWrapper.lyteSpeedDialButtonIcon {
  background-color: #4b5e6a;
  transform: scale(1.3);
  border: 1px solid #282931;
}
.lyteSpeedDialIconRightAlign {
  align-items: center;
  flex-direction: row;
}
.lyteSpeedDialIconLeftAlign {
  flex-direction: row-reverse;
  transform: translateX(calc(-100% + var(--lyte-speed-dial-icon-size)));
}
.lyteSpeedDialIconTopAlign {
  flex-direction: column-reverse;
  transform: translateY(calc(-100% + var(--lyte-speed-dial-icon-size)));
}
.lyteSpeedDialIconBottomAlign {
  flex-direction: column;
}
.lyteSpeedDial .lyteSpeedDialMainIcon.lyteSpeedDialButtonIconRotated {
  transform: rotate(45deg);
  transform-origin: center;
}
.lyteSpeedDialIconWrapper:hover {
  background-color: #373636;
}
lyte-grouper {
  display: block;
}
lyte-grouper .lyteGroupWrap {
  display: flex;
}
lyte-grouper .lyteGroupWrap.lyteGroupVertical {
  flex-direction: column;
}
lyte-grouper lyte-button {
  flex-grow: 1;
}
lyte-grouper lyte-button button {
  border-radius: 0;
  width: 100%;
}
lyte-grouper .lyteGroupHorizontal lyte-button:first-child button {
  border-radius: 2px 0 0 2px;
}
lyte-grouper .lyteGroupHorizontal lyte-button:last-child button {
  border-radius: 0 2px 2px 0;
}
lyte-grouper .lyteGroupVertical lyte-button:first-child button {
  border-radius: 2px 2px 0 0;
}
lyte-grouper .lyteGroupVertical lyte-button:last-child button {
  border-radius: 0 0 2px 2px;
}
lyte-grouper .fillType lyte-button button.lyteDefaultBtn {
  border: 0;
  background: #e0e1e2;
}
lyte-grouper .fillType lyte-button button.lyteDefaultBtn:hover {
  border: 0;
  background: #cacbcd;
}
lyte-grouper .lineType lyte-button button.lyteDefaultBtn {
  border: 1px solid #ddd;
  background: #fff;
}
lyte-grouper .lineType.lyteGroupHorizontal lyte-button button.lyteDefaultBtn {
  border-right: 0;
}
lyte-grouper .lineType.lyteGroupVertical lyte-button button.lyteDefaultBtn {
  border-bottom: 0;
}
lyte-grouper .lineType lyte-button button.lyteDefaultBtn:hover {
  background: #f5f5f5;
}
lyte-grouper .lineType.lyteGroupHorizontal lyte-button:last-child button.lyteDefaultBtn {
  border-right: 1px solid #ddd;
}
lyte-grouper .lineType.lyteGroupVertical lyte-button:last-child button.lyteDefaultBtn {
  border-bottom: 1px solid #ddd;
}
.lyteGrouperInputOrDropdown .lyteGroupHorizontal {
  border: 1px solid #d6d6d6;
  border-radius: 2px;
}
.lyteGrouperInputOrDropdown .lyteGroupHorizontal:hover {
  border: 1px solid #c1c1c1;
}
.lyteGrouperInputOrDropdown .lyteGrouperFocused:hover,
.lyteGrouperInputOrDropdown .lyteGrouperFocused {
  border: 1px solid #7fceef;
}
lyte-grouper .lyteGrouperItem {
  border-right: 1px solid #d6d6d6;
  flex: 1;
}
lyte-grouper .lyteGrouperItem:last-child {
  border-right: 0;
}
lyte-grouper lyte-dropdown .lyteDummyEventContainer:focus lyte-drop-button:hover,
lyte-grouper lyte-dropdown .lyteDummyEventContainer:focus lyte-drop-button,
lyte-grouper lyte-drop-button:hover,
lyte-grouper lyte-drop-button {
  border: 0;
  box-shadow: none;
}
lyte-grouper .lyteInputBox.lyteInputFocus .lyteField,
lyte-grouper .lyteInputBox .lyteField:hover,
lyte-grouper .lyteInputBox .lyteField {
  border: 0;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-button-group {
  display: block;
}
lyte-button-group .lyteBtnGroupWrap {
  display: flex;
}
lyte-button-group .lyteGroupVertical .lyteBtnGroupWrap {
  flex-direction: column;
}
lyte-button-group lyte-button {
  flex-grow: 1;
}
lyte-button-group lyte-button button {
  border-radius: 0;
  width: 100%;
}
lyte-button-group .lyteGroupHorizontal lyte-button:first-child button {
  border-radius: 2px 0 0 2px;
}
lyte-button-group .lyteGroupHorizontal lyte-button:last-child button {
  border-radius: 0 2px 2px 0;
}
lyte-button-group .lyteGroupVertical lyte-button:first-child button {
  border-radius: 2px 2px 0 0;
}
lyte-button-group .lyteGroupVertical lyte-button:last-child button {
  border-radius: 0 0 2px 2px;
}
lyte-button-group .fillType lyte-button button.lyteDefaultBtn {
  border: 0;
  background: var(--lyte-button-group-fill-bg);
}
lyte-button-group .fillType lyte-button button.lyteDefaultBtn:hover {
  border: 0;
  background: var(--lyte-button-group-fill-hover-bg);
}
lyte-button-group .fillType lyte-button button.lyteBtnGroupSelectedBtn:hover,
lyte-button-group .fillType lyte-button button.lyteBtnGroupSelectedBtn {
  background: var(--lyte-button-group-fill-selected-bg);
  color: var(--lyte-button-group-text-color);
}
lyte-button-group .lineType lyte-button button.lyteDefaultBtn {
  border: 1px solid var(--lyte-button-group-line-type-border-color);
  background: var(--lyte-button-group-line-type-bg);
}
lyte-button-group .lineType.lyteGroupHorizontal lyte-button button.lyteDefaultBtn {
  border-right: 0;
}
lyte-button-group .lineType.lyteGroupVertical lyte-button button.lyteDefaultBtn {
  border-bottom: 0;
}
lyte-button-group .lineType lyte-button button.lyteDefaultBtn:hover {
  background: var(--lyte-button-group-line-type-hover-bg);
}
lyte-button-group .lineType.lyteGroupHorizontal lyte-button:last-child button.lyteDefaultBtn {
  border-right: 1px solid var(--lyte-button-group-line-type-border-color);
}
lyte-button-group .lineType.lyteGroupVertical lyte-button:last-child button.lyteDefaultBtn {
  border-bottom: 1px solid var(--lyte-button-group-line-type-border-color);
}
lyte-button-group .lineType lyte-button button.lyteBtnGroupSelectedBtn:hover,
lyte-button-group .lineType lyte-button button.lyteBtnGroupSelectedBtn {
  background: var(--lyte-button-group-line-type-selected-bg);
  color: var(--lyte-button-group-text-color);
}
/* import theme overrides - styles */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-expresstable {
  display: block;
  height: 100%;
  max-height: inherit;
}
.lyteExpTableOrigTableWrapper {
  height: 100%;
  position: relative;
  max-height: inherit;
}
.lyteExpTableFixedColHeader {
  z-index: 1;
  box-shadow: 3px 0 5px 0px var(--lyte-express-table-fixed-box-shadow);
  position: absolute;
  background: var(--lyte-express-table-fixed-column-header-bg);
  border-left: 1px solid var(--lyte-express-table-border-color);
}
.lyteExpTableWrapper {
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
  border: 1px solid var(--lyte-express-table-border-color);
  max-height: inherit;
}
.lyteExpTableSortableHelperCont {
  position: absolute;
  z-index: 1080;
  pointer-events: none;
  transform: translate(0px, 0px);
  overflow: hidden;
  background: var(--lyte-express-table-sortable-helper-bg);
  will-change: transform;
}
.lyteExpTableSortableHelperCont .lyteExpTableHead {
  position: relative;
  z-index: 5;
}
.lyteExpTableFakeHeaderWrapper {
  position: absolute;
  display: flex;
  left: 0;
  right: 0;
  top: 0;
  overflow: hidden;
  background: var(--lyte-express-table-fake-header-wrapper-bg);
  z-index: 10;
}
.lyteExpTableFakeHeaderShow {
  opacity: 1;
  z-index: 10;
}
lyte-exptable {
  display: table;
}
.lyteExpTableHeaderGroup,
lyte-exptable-thead {
  display: table-header-group;
}
.lyteExpTableRowGroup,
lyte-exptable-tbody {
  display: table-row-group;
}
lyte-exptable-tr {
  display: table-row;
}
lyte-expresstable .lyteExpTableHide {
  display: none;
}
.lyteExpTableHeaderGroup lyte-exptable-th,
.lyteExpTableHeaderGroup lyte-exptable-tr {
  -ms-transform: inherit;
}
@supports (-ms-ime-align: auto) {
  /*  This code targets only Edge browser    */
  .lyteExpTableHeaderGroup lyte-exptable-th,
  .lyteExpTableHeaderGroup lyte-exptable-tr {
    transform: inherit;
  }
}
.lyteExpAccordionTable td,
lyte-exptable-th,
lyte-exptable-td {
  display: table-cell;
  text-align: right;
  padding: 12px 15px;
  border-bottom: 1px solid var(--lyte-express-table-border-color);
  white-space: nowrap;
}
lyte-exptable-th {
  background: var(--lyte-express-table-th-bg);
  border-bottom: 0;
  box-sizing: border-box;
  white-space: nowrap;
  position: relative;
  min-width: 50px;
  color: var(--lyte-express-table-th-text-color);
}
lyte-exptable-td {
  color: var(--lyte-express-table-td-text-color);
}
.lyteExpTableOrigTableInnerWrap {
  overflow: auto;
  height: 100%;
  max-height: inherit;
}
.lyteExpOriginalTable {
  width: 100%;
}
.lyteExpTableOrigTableInnerWrap .lyteExpTableHeaderGroup {
  opacity: 0;
}
.lyteExpTableFixedColWrapper {
  position: absolute;
  background: var(--lyte-express-table-fixed-column-wrapper-bg);
  border-left: 1px solid var(--lyte-express-table-border-color);
  z-index: 5;
  overflow-x: hidden;
  overflow: -moz-scrollbars-none;
  -ms-overflow-style: none;
  scrollbar-width: none;
  box-shadow: -3px 0 5px 0px var(--lyte-express-table-fixed-box-shadow);
  height: 100%;
}
.lyteExpTableNoShadow .lyteExpTableFixedColHeader,
.lyteExpTableNoShadow .lyteExpTableFixedColWrapper {
  box-shadow: none;
  border-left: 1px solid transparent;
}
.lyteExpTableFixedColWrapper::-webkit-scrollbar {
  width: 0;
}
.lyteExpSortableTable .lyteExpTableSortableColumn {
  opacity: 0;
}
.lyteExpTableFixedColTable {
  position: relative;
  z-index: 1;
  display: table;
  will-change: transform;
}
lyte-exptablehead-resize {
  cursor: ew-resize;
  height: 100%;
  width: 21px;
  top: 0;
  z-index: 9;
  left: -12px;
  position: absolute;
}
lyte-exptablehead-resize::after {
  content: '';
  position: absolute;
  width: 3px;
  height: 100%;
  left: 10px;
  background: transparent;
}
lyte-exptablehead-resize:hover::after {
  background: var(--lyte-theme-active-element-bg);
}
.lyteExpTableFixedColHeader lyte-exptablehead-resize {
  display: none;
}
lyte-expresstable.tableLayoutFixed lyte-exptable {
  table-layout: fixed;
}
lyte-exptable-th:last-of-type lyte-exptablehead-resize {
  left: 0;
}
.lyteExpTableFakeColHeaderWrapper {
  display: table;
  table-layout: fixed;
}
.lyteFixHeaderDisplayNone {
  display: none;
}
/*  Sticky Express Table CSS BEGINS    */
.lyteExpStickyInterSection {
  position: absolute;
  width: 1px;
  height: 10px;
  top: 20px;
  opacity: 0;
  will-change: left, top, right;
  pointer-events: none;
  z-index: -1;
}
.lyteExpStickyTable .lyteExpTableWrapper {
  overflow: auto;
  border: 0;
}
.lyteExpStickyTable .lyteExpTableOrigTableInnerWrap {
  display: block;
  width: 100%;
  position: relative;
  border: 1px solid var(--lyte-express-table-border-color);
  box-sizing: border-box;
}
.lyteExpStickyTable .lyteExpTableOrigTableInnerWrap .lyteExpTableHeaderGroup {
  opacity: 1;
}
.lyteExpStickyTable lyte-exptable-th {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  z-index: 10;
  background: var(--lyte-express-table-th-bg);
}
.lyteExpStickyTable lyte-exptable-th.lyteFixedColumn {
  z-index: 15;
}
.lyteExpAccordionTable td.lyteFixedColumn,
.lyteExpStickyTable lyte-exptable-td.lyteFixedColumn {
  position: sticky;
  z-index: 5;
  background: var(--lyte-express-table-sticky-column-td-bg);
}
/*  Sticky Express Table CSS ENDS    */
.lyteExpTableDummyColumn {
  position: absolute;
  z-index: 15;
  background: var(--lyte-express-table-resize-hover-bg);
  color: var(--lyte-express-table-th-text-color);
  outline: 1px solid var(--lyte-theme-active-element-bg);
  padding: 12px 15px;
  box-sizing: border-box;
  cursor: move;
}
/*  Accordion Table BEGINS  */
.lyteExpAccordionTable lyte-exptable {
  table-layout: fixed;
}
.lyteExpAccordionTable td {
  white-space: pre-line;
  overflow-wrap: break-word;
}
.lyteExpTableAccordionContent .lyteExpressAccordionTdChild,
.lyteExpTableAccordionContent lyte-td-wrap {
  transform-origin: top;
  overflow: hidden;
  max-height: var(--tableMaxHeight);
  display: block;
}
.lyteExpTableHideStart .lyteExpTableAccordionContent td {
  padding: 0 15px;
  border-bottom-width: 0;
}
.lyteExpTableHideStart .lyteExpTableAccordionContent .lyteExpressAccordionTdChild,
.lyteExpTableHideStart .lyteExpTableAccordionContent lyte-td-wrap {
  max-height: 0px;
}
.lyteExpTableAccordionAnimation .lyteExpTableAccordionContent td {
  transition: padding 0.3s linear, border-width 0.3s linear;
}
.lyteExpTableAccordionAnimation .lyteExpTableAccordionContent .lyteExpressAccordionTdChild,
.lyteExpTableAccordionAnimation .lyteExpTableAccordionContent lyte-td-wrap {
  transition: max-height 0.3s linear;
}
.lyteExpTbodyClosed .lyteExpTableAccordionContent {
  display: none;
}
/*  Accordion Table ENDS  */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-banner {
  display: block;
}
.lyteBannerModalContent {
  background: var(--lyte-banner-bg);
  padding: 10px 20px;
  text-align: center;
  color: var(--lyte-banner-color);
}
.lyteBannerModal .lyteModal {
  border: 0;
}
.lyteBannerModal .lyteModalFromBottom {
  box-shadow: 0 -3px 5px 0px rgba(0, 0, 0, 0.1);
}
.lyteBannerModal .lyteModalFromTop {
  box-shadow: 0 3px 5px 0px rgba(0, 0, 0, 0.1);
}
.lyteBannerNonFloating .lyteModalClose,
.lyteBannerModal .lyteModalClose {
  background-position: -324px -109px;
  width: 13px;
  height: 13px;
  transform: scale(1);
  top: 15px;
  opacity: 0.8;
}
.lyteBannerNonFloating {
  background: var(--lyte-banner-bg);
  font-family: var(--lyte-primary-font);
  padding: 10px 20px;
  text-align: center;
  position: relative;
  color: var(--lyte-banner-color);
  font-size: var(--lyte-banner-font-size);
  box-sizing: border-box;
}
.lyteBannerFloating {
  background: var(--lyte-banner-bg);
  font-family: var(--lyte-primary-font);
  padding: 10px 20px;
  text-align: center;
  position: absolute;
  color: var(--lyte-banner-color);
  font-size: var(--lyte-banner-font-size);
  box-sizing: border-box;
}
.lyteBannerInlineFloating {
  overflow: hidden;
  position: absolute;
  width: 100%;
  pointer-events: none;
}
.lyteBannerInlineFloating .lyteBannerFloating {
  pointer-events: auto;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
.bodyWrapper {
  overflow: hidden;
}
.lytePopoverWrapper {
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: var(--lyte-popover-zindex);
  position: fixed;
  pointer-events: none;
}
.lytePopoverVisibilityHidden {
  visibility: hidden;
}
.lytePopoverElement {
  display: flex;
  flex-direction: column;
  background: var(--lyte-popover-bg);
  border: var(--lyte-popover-border-color);
  box-shadow: var(--lyte-popover-boxshadow-color);
  position: absolute;
  z-index: calc(1040 + 10);
  opacity: 0;
  border-radius: 3px;
  transition: opacity ease 0.4s;
  box-sizing: border-box;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  pointer-events: auto;
}
.lytePopoverYield {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  overflow: auto;
}
.lytePopoverFadeAnimation .lytePopoverElement {
  opacity: 1;
}
.lytePopoverWrapper lyte-popover-freeze {
  opacity: 0.5;
  pointer-events: auto;
  transition: opacity 0.4s ease;
}
.lytePopoverPop .lytePopoverElement,
.lytePopoverZoom .lytePopoverElement {
  transition: transform 0.4s ease, opacity 0.4s ease;
  transform: scale(0);
}
.lytePopoverPopAnimation .lytePopoverElement,
.lytePopoverZoomAnimation .lytePopoverElement.lyteZoom {
  transform: scale(1);
  opacity: 1;
}
.lytePopoverPop .lytePopoverLeft {
  transform-origin: top right;
}
.lytePopoverPop .lytePopoverLeftCenter {
  transform-origin: center right;
}
.lytePopoverPop .lytePopoverLeftBottom {
  transform-origin: bottom right;
}
.lytePopoverPop .lytePopoverTopLeft {
  transform-origin: bottom left;
}
.lytePopoverPop .lytePopoverTop {
  transform-origin: bottom center;
}
.lytePopoverPop .lytePopoverTopRight {
  transform-origin: bottom right;
}
.lytePopoverPop .lytePopoverRight {
  transform-origin: top left;
}
.lytePopoverPop .lytePopoverRightCenter {
  transform-origin: center left;
}
.lytePopoverPop .lytePopoverRightBottom {
  transform-origin: bottom left;
}
.lytePopoverPop .lytePopoverBottom {
  transform-origin: top center;
}
.lytePopoverPop .lytePopoverBottomLeft {
  transform-origin: top left;
}
.lytePopoverPop .lytePopoverBottomRight {
  transform-origin: top right;
}
.lytePopoverWrapper.scrollable {
  overflow: hidden;
}
.lytePopoverWrapper.scrollable .lytePopoverContent {
  overflow: auto;
}
.lytePopoverWrapper.scrollable .lytePopoverElement {
  max-height: 100%;
}
lyte-popover-header {
  font-family: 'LatoBold', 'Open Sans', sans-serif;
  font-size: 16px;
  color: var(--lyte-popover-text-color);
}
lyte-popover-header,
lyte-popover-content,
lyte-popover-footer {
  display: block;
  box-sizing: border-box;
  padding: 15px 30px;
}
lyte-popover-freeze {
  width: 100%;
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  z-index: 5;
  height: auto;
  background: var(--lyte-popover-freeze-bg);
  display: block;
  opacity: var(--lyte-popover-freeze-opacity);
  transition: opacity ease 0.15s;
  transform: translate3d(0, 0, 0);
}
.lytePopoverClose {
  background-image: var(--lyte-sprite-image);
  background-position: -52px 0px;
  width: 13px;
  height: 13px;
  opacity: 0.5;
  cursor: pointer;
  position: absolute;
  left: 20px;
  top: 14px;
  display: block;
  transform: scale(1.3);
  z-index: 5;
}
.lytePopoverClose:hover {
  opacity: 1;
}
lyte-popover-footer.left {
  text-align: right;
}
lyte-popover-footer.center {
  text-align: center;
}
lyte-popover-footer.right {
  text-align: left;
}
lyte-popover-footer lyte-button {
  margin-right: 7px;
}
lyte-popover-footer lyte-button:first-child {
  margin-right: 0;
}
.lytePopoverArrowIcon {
  width: 11px;
  height: 11px;
  position: absolute;
  background: #fff;
  transform: rotate(45deg);
  display: block;
}
.lytePopoverArrowIcon.lytePopoverArrowTop {
  box-shadow: -1px -1px 0 0 #e0e0e0;
  top: -5px;
}
.lytePopoverArrowIcon.lytePopoverArrowBottom {
  box-shadow: 1px 1px 0 0 #e0e0e0;
  bottom: -5px;
}
.lytePopoverArrowIcon.lytePopoverArrowRight {
  box-shadow: 1px -1px 0 0 #e0e0e0;
  right: -5px;
}
.lytePopoverArrowIcon.lytePopoverArrowLeft {
  box-shadow: -1px 1px 0 0 #e0e0e0;
  left: -5px;
}
.lytePopoverHeaderDraggable {
  cursor: move;
  touch-action: none;
}
.lyteStopBodyScrolling {
  overflow: hidden;
}
.lytePopoverVisible {
  opacity: 1;
}
.lytePopoverHide,
.lytePopoverDispNone {
  display: none;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
.lyteHovercardPopover.popoverWrapper {
  z-index: var(--lyte-hover-card-zindex);
}
.lyteHovercardPopover .lytePopover {
  background: var(--lyte-hover-card-bg);
  color: var(--lyte-hover-card-text-color);
  border-radius: 5px;
  border: 1px solid transparent;
}
.lyteHovercardPopover .lytePopoverArrowIcon {
  background: var(--lyte-hover-card-bg);
}
.lyteHovercardPopover .lytePopoverArrowIcon.lytePopoverArrowTop {
  box-shadow: -1px -1px 0 0 var(--lyte-hover-card-bg);
}
.lyteHovercardPopover .lytePopoverArrowIcon.lytePopoverArrowBottom {
  box-shadow: 1px 1px 0 0 var(--lyte-hover-card-bg);
}
.lyteHovercardPopover .lytePopoverArrowIcon.lytePopoverArrowRight {
  box-shadow: 1px -1px 0 0 var(--lyte-hover-card-bg);
}
.lyteHovercardPopover .lytePopoverArrowIcon.lytePopoverArrowLeft {
  box-shadow: -1px 1px 0 0 var(--lyte-hover-card-bg);
}
.lyteHovercardWithMaxHeight {
  overflow: auto;
}
lyte-hovercard-content {
  padding: 15px;
  display: block;
  max-width: 500px;
  overflow-wrap: break-word;
}
.lyteHovercardPopover.lytePopTopToOrig .lytePopover::before,
.lyteHovercardPopover.lytePopBottomToOrig .lytePopover::before {
  content: '';
  width: 100%;
  height: 10px;
  background: transparent;
  position: absolute;
}
.lyteHovercardPopover.lytePopBottomToOrig .lytePopover::before {
  top: -10px;
}
.lyteHovercardPopover.lytePopTopToOrig .lytePopover::before {
  bottom: -10px;
}
.lyteHovercardPopover.lytePopLeftToOrig .lytePopover::before,
.lyteHovercardPopover.lytePopRightToOrig .lytePopover::before {
  content: '';
  height: 100%;
  width: 10px;
  background: transparent;
  position: absolute;
}
.lyteHovercardPopover.lytePopRightToOrig .lytePopover::before {
  right: -10px;
}
.lyteHovercardPopover.lytePopLeftToOrig .lytePopover::before {
  left: -10px;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-carousel {
  display: block;
  font-family: var(--lyte-primary-font);
  width: 100%;
  height: 100%;
  min-height: 150px;
  padding: 15px 0;
}
.lyteCarouselWrapper lyte-yield,
.lyteCarouselWrapper {
  position: relative;
  display: grid;
  width: 100%;
  height: 100%;
  min-height: inherit;
  padding: 0 45px;
  box-sizing: border-box;
  grid-template-rows: 1fr auto;
  grid-template-columns: 1fr;
  overflow: hidden;
}
lyte-carousel-content {
  width: 100%;
  height: 100%;
  display: block;
  position: relative;
  overflow: hidden;
  min-height: inherit;
  grid-row: 1 / span 2;
  grid-column: 1 / 2;
}
lyte-carousel-item {
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  display: none;
  transform: translateX(0);
  transition: transform 0.2s ease;
  position: absolute;
  justify-content: center;
  align-items: center;
  text-align: center;
  outline: 0;
}
lyte-carousel-item.lyteActive {
  display: flex;
}
.lyteActiveNext {
  display: flex;
  transform: translateX(-100%);
  padding-right: 40px;
}
.lyteActivePrev {
  display: flex;
  transform: translateX(100%);
  padding-left: 40px;
}
lyte-carousel-item img {
  width: 100%;
  height: 100%;
  object-fit: contain;
}
lyte-carousel-indicator {
  display: flex;
  max-width: 100%;
  overflow-x: auto;
  margin: 20px auto 0;
  height: fit-content;
  flex-shrink: 0;
}
lyte-carousel-indicator-item {
  width: 10px;
  height: 10px;
  background: var(--lyte-carousel-indicator-item-bg);
  border-radius: 50%;
  margin: 0 10px;
  cursor: pointer;
  font-size: 0;
}
lyte-carousel-indicator-item:hover {
  background: var(--lyte-carousel-indicator-item-hover-bg);
}
lyte-carousel-indicator-item li {
  list-style: none;
}
lyte-carousel-indicator-item.lyteActive {
  background: var(--lyte-carousel-indicator-active-item-bg);
}
lyte-carousel-next,
lyte-carousel-prev {
  display: flex;
  width: 30px;
  height: 30px;
  border: 1px solid var(--lyte-carousel-nav-border-color);
  background: var(--lyte-carousel-nav-bg);
  border-radius: 50%;
  position: absolute;
  z-index: 5;
  top: calc(50% - 25px);
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background 0.1s ease;
  transform: rotate(180deg);
}
lyte-carousel-prev {
  right: 0;
}
lyte-carousel-next:hover,
lyte-carousel-prev:hover {
  background: var(--lyte-carousel-nav-hover-bg);
}
lyte-carousel-next {
  left: 0;
}
lyte-carousel-prev.lyteDisabled,
lyte-carousel-next.lyteDisabled {
  pointer-events: none;
  opacity: 0.5;
}
lyte-carousel-prev::before,
lyte-carousel-next::before {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: -94px -109px;
  width: 9px;
  height: 11px;
}
lyte-carousel-next::before {
  transform: rotate(180deg);
}
.lyteFade lyte-carousel-item {
  display: flex;
  opacity: 0;
  transition: opacity 0.6s ease-in-out;
}
.lyteFade lyte-carousel-item.lyteActive {
  opacity: 1;
  z-index: 3;
}
lyte-carousel-sub-item {
  height: 100%;
  margin: 10px;
}
.lyteCarouselFrames lyte-carousel-item.lyteActive {
  flex-wrap: wrap;
  overflow: auto;
}
.lyteCarouselFrames lyte-carousel-sub-item {
  width: 150px;
  height: 200px;
  margin: 10px;
  background: var(--lyte-carousel-frame-subitem-bg);
  border-radius: 5px;
  padding: 10px;
  border: 1px solid var(--lyte-carousel-frame-subitem-border);
}
.lyteCarouselVertical .lyteCarouselWrapper > lyte-yield {
  flex-direction: row;
}
.lyteCarouselVertical lyte-carousel-indicator {
  flex-direction: column;
  margin-top: 0;
  overflow-y: auto;
  max-height: 100%;
  margin: auto 0;
  margin-right: 20px;
}
.lyteCarouselVertical lyte-carousel-indicator-item {
  margin: 0;
  margin-bottom: 10px;
}
.lyteCarouselVertical lyte-carousel-next,
.lyteCarouselVertical lyte-carousel-prev {
  right: calc(50% - 15px);
  transform: rotate(90deg);
  top: 0;
}
.lyteCarouselVertical lyte-carousel-next {
  top: unset;
  bottom: 0;
}
.lyteCarouselVertical .lyteActiveNext {
  transform: translateY(100%);
}
.lyteCarouselVertical .lyteActivePrev {
  transform: translateY(-100%);
}
.lyteCarouselIndicatiorItemImg {
  width: 100px;
  height: 60px;
  background: none !important;
  margin: 0 5px;
  position: relative;
  flex-shrink: 0;
}
.lyteCarouselIndicatiorItemImg img {
  width: 100%;
  height: 100%;
  display: block;
}
.lyteCarouselIndicatorInside lyte-carousel-indicator {
  margin: 0 auto;
  grid-row: 2;
  grid-column: 1 / 2;
  z-index: 5;
  margin-bottom: -10px;
  transition: margin 0.3s linear;
}
.lyteCarouselIndicatorInside .lyteCarouselIndicatiorWrapper {
  margin-bottom: -80px;
}
.lyteCarouselIndicatorInside lyte-carousel-item img {
  object-fit: fill;
}
.lyteActive.lyteCarouselIndicatiorItemImg::after {
  content: "";
  background-color: #71a4e1ba;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
}
.lyteCarouselWrapper.lyteCarouselIndicatorImg lyte-carousel-next,
.lyteCarouselWrapper.lyteCarouselIndicatorImg lyte-carousel-prev {
  top: calc(50% - 60px);
}
.lyteCarouselIndicatorInside.lyteCarouselIndicatorImg lyte-carousel-next,
.lyteCarouselIndicatorInside.lyteCarouselIndicatorImg lyte-carousel-prev {
  top: calc(50% - 20px);
}
.lyteCarouselIndicatorInside .lyteCarouselIndicatiorWrapper:hover,
.lyteCarouselIndicatorInside lyte-carousel-content:hover + .lyteCarouselIndicatiorWrapper {
  margin-bottom: 0;
}
.lyteCarouselIndicatorInside lyte-carousel-indicator:hover,
.lyteCarouselIndicatorInside lyte-carousel-content:hover + lyte-carousel-indicator {
  margin: auto auto 20px auto;
}
.lyteCarouselIndicatorInside .lyteCarouselIndicatiorWrapper::after {
  content: "";
  display: block;
  background: #00000063;
  width: calc(100% - 90px);
  height: 60px;
  position: absolute;
  z-index: -1;
  right: 45px;
}
.lyteCarouselVertical .lyteCarouselWrapper > lyte-yield,
.lyteCarouselVertical .lyteCarouselWrapper {
  margin: 0 35px;
  padding: 45px 0;
  grid-template-columns: 1fr auto;
}
.lyteCarouselVertical .lyteCarouselIndicatorInside lyte-carousel-content {
  grid-column: 1 / span 2;
  grid-row: 1 / 2;
}
.lyteCarouselVertical .lyteCarouselIndicatorInside lyte-carousel-indicator {
  grid-row: 2/1;
  grid-column: 2;
  margin: auto 0px auto 100%;
  width: fit-content;
}
.lyteCarouselVertical .lyteCarouselIndicatorImg lyte-carousel-next,
.lyteCarouselVertical .lyteCarouselIndicatorImg lyte-carousel-prev {
  right: calc(50% - 70px);
  top: unset;
}
.lyteCarouselVertical .lyteCarouselIndicatorInside lyte-carousel-next,
.lyteCarouselVertical .lyteCarouselIndicatorInside lyte-carousel-prev {
  right: calc(50% - 10px);
}
.lyteCarouselVertical .lyteCarouselIndicatorInside .lyteCarouselIndicatiorWrapper::after {
  width: 100px;
  height: calc(100% - 90px);
  right: unset;
  top: 45px;
}
.lyteCarouselVertical .lyteCarouselIndicatorInside lyte-carousel-indicator-item:first-child {
  margin-top: 0;
}
.lyteCarouselVertical .lyteCarouselIndicatorInside lyte-carousel-indicator-item:last-child {
  margin-bottom: 0;
}
.lyteCarouselVertical .lyteCarouselIndicatorInside lyte-carousel-indicator:hover,
.lyteCarouselVertical .lyteCarouselIndicatorInside lyte-carousel-content:hover + lyte-carousel-indicator {
  margin: auto 20px auto 0;
}
.lyteCarouselVertical .lyteCarouselIndicatorInside.lyteCarouselIndicatorImg lyte-carousel-indicator:hover,
.lyteCarouselVertical .lyteCarouselIndicatorInside.lyteCarouselIndicatorImg lyte-carousel-content:hover + lyte-carousel-indicator {
  margin-left: unset;
  margin-right: 0;
  box-sizing: border-box;
}
lyte-carousel.lyteCarouselVertical .lyteCarouselWrapper > lyte-yield,
lyte-carousel .lyteCarouselIndicatorInside.lyteCarouselWrapper > lyte-yield {
  padding: 0;
  position: unset;
  margin: 0;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-badge {
  --lyte-badge-circle-radius: 6px;
  --lyte-badge-width: var(--lyte-badge-circle-radius);
  --lyte-badge-height: var(--lyte-badge-circle-radius);
}
.lyteBadge {
  font-family: var(--lyte-primary-font);
  position: absolute;
  display: flex;
  text-align: center;
  justify-content: center;
  padding: 2px;
  border-radius: 12px;
  background: var(--lyte-badge-bg);
  border: 1px solid var(--lyte-badge-border-color);
}
.lyteBadgeContent {
  color: var(--lyte-badge-content-color);
  font-size: var(--lyte-badge-content-font-size);
  margin: auto;
}
.lyteBadgeWidHeiD {
  min-width: 10px;
  height: 10px;
  line-height: 10px;
}
.lyteBadgeWidHeiWD {
  min-width: 6px;
  min-height: 6px;
}
.lyteBadgeWithSize .lyteBadgeWidHeiWD {
  width: var(--lyte-badge-width);
  height: var(--lyte-badge-height);
  border-radius: 50%;
}
.lyteBadgeTopRight {
  left: 0;
  top: 0;
  transform: translate(-50%, -50%);
}
.lyteBadgeTopLeft {
  right: 0;
  top: 0;
  transform: translate(50%, -50%);
}
.lyteBadgeBottomRight {
  left: 0px;
  bottom: 0px;
  transform: translate(-50%, 50%);
}
.lyteBadgeBottomLeft {
  right: 0px;
  bottom: 0px;
  transform: translate(50%, 50%);
}
/* Default theme imported */
/* Loading theme in configuration */
:root {
  --lyte-timepicker-bg: var(--lyte-theme-body-bg);
  --lyte-timepicker-text-color: var(--lyte-common-text-color2);
  --lyte-timepicker-border-color: #d6d6d6;
  --lyte-timepicker-hover-border-color: #c1c1c1;
  --lyte-timepicker-focus-border-color: #7fceef;
  --lyte-timepicker-border-radius: 2px;
  --lyte-timepicker-disabled: #f3f3f3;
  --lyte-timepicker-dropbox-text-color: var(--lyte-common-text-color2);
  --lyte-timepicker-font-size: var(--lyte-font-size-medium);
  --lyte-timepicker-zIndex: var(--lyte-level4-zindex);
  --lyte-timepicker-error-border-color: #E74C3C;
  --lyte-timepicker-error-shadow: 0px 0px 5px 3px #E74C3C1F;
}
/* rtl files loading */
lyte-time-picker {
  position: relative;
  display: inline-block;
}
.lyteTimePickerField {
  display: inline-flex;
  border: 1px solid var(--lyte-timepicker-border-color);
  border-radius: var(--lyte-timepicker-border-radius);
}
.lyteTimePickerField:hover {
  border: 1px solid var(--lyte-timepicker-hover-border-color);
}
.lyteTimePickerDropdownOpened .lyteTimePickerField,
.lyteTimePickerField:focus-within {
  border: 1px solid var(--lyte-timepicker-focus-border-color);
}
.lyteTimePickerInput {
  padding: 7px 10px;
  border: 0;
  border-radius: 1px 0 0 1px;
  outline: 0;
  font-size: var(--lyte-timepicker-font-size);
  background: var(--lyte-timepicker-bg);
  color: var(--lyte-timepicker-text-color);
}
.lyteTimePickerInput::placeholder {
  font-family: var(--lyte-primary-font);
  color: #a6a6a6;
}
.lytetimePickerButton {
  padding: 5px;
  background: #eee;
  border-radius: 1px 0 0 1px;
  cursor: pointer;
  border: 0;
}
.lyteTimePickerBtnIcon {
  -webkit-mask-image: var(--lyte-sprite-image);
  mask-image: var(--lyte-sprite-image);
  -webkit-mask-position: -176px -132px;
  mask-position: -176px -132px;
  background-color: #555;
  width: 16px;
  height: 16px;
  display: block;
}
.lyteTimePickerDropdownNone {
  display: none;
}
lyte-time-picker-dropdown {
  font-family: var(--lyte-primary-font);
  display: block;
  position: absolute;
  border: 1px solid var(--lyte-timepicker-border-color);
  z-index: var(--lyte-timepicker-zIndex);
  background: var(--lyte-timepicker-bg);
}
.lyteTimePickerDropdownValues {
  display: flex;
  height: 200px;
}
.lyteTimePickerUl {
  list-style-type: none;
  width: 55px;
  overflow-y: hidden;
  padding: 5px 0;
  margin: 0;
  border-left: 1px solid var(--lyte-timepicker-border-color);
}
.lyteTimePickerUl:last-of-type {
  border-left: 0;
}
.lyteTimePickerUl:hover {
  overflow-y: scroll;
}
.lyteTimePickerDropdownValues li {
  font-size: 15px;
  padding: 7px;
  color: var(--lyte-timepicker-dropbox-text-color);
  cursor: pointer;
  box-sizing: border-box;
  scroll-margin: 5px;
}
.lyteTimePickerItemFocused {
  background: #e6f3fd;
  outline: 0;
}
li.lyteTimePickerItemSelected {
  background-color: #5ba1e5;
  color: #fff;
}
.lyteTimePickerDropdownButton {
  padding: 10px;
  border-top: 1px solid var(--lyte-timepicker-border-color);
  text-align: left;
}
li.lyteTimePickerBlur {
  cursor: not-allowed;
  opacity: 0.6;
}
.lyteTimePickerDisabled .lytetimePickerButton,
.lyteTimePickerDisabled .lyteTimePickerInput {
  background: var(--lyte-timepicker-disabled);
  cursor: not-allowed;
  color: #999;
}
.lyteTimePickerDisabled .lyteTimePickerField:hover {
  border: 1px solid var(--lyte-timepicker-border-color);
}
#lyteTimePickerFreezeLayer {
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background: #fff;
  opacity: 0.1;
  position: fixed;
  overflow: hidden;
  display: none;
}
.lyteTimePickerOpenFreeze {
  overflow: hidden;
}
.lyteTimePickerOpenFreeze #lyteTimePickerFreezeLayer {
  display: block;
}
.lyteTimePickerScrollBehavior {
  scroll-behavior: smooth;
  overflow-y: auto;
}
.lytetimePickerCounterButtons {
  display: flex;
  flex-direction: column;
}
.lytetimePickerIncButton,
.lytetimePickerDecButton {
  border: 0;
  border-left: 1px solid #C4C9CC;
  padding: 0 7px;
  background-color: transparent;
  flex-grow: 1;
  cursor: pointer;
}
.lytetimePickerIncButton {
  border-bottom: 1px solid #C4C9CC;
}
.lyteTimePickerDecIcon,
.lyteTimePickerIncIcon {
  display: block;
  -webkit-mask: var(--lyte-sprite-image) no-repeat -14px -2px;
  mask: var(--lyte-sprite-image) no-repeat -14px -2px;
  background-color: #5B5D5F;
  width: 9px;
  height: 5px;
}
.lyteTimePickerIncIcon {
  transform: rotate(180deg);
}
.lytetimePickerIncButton:hover,
.lytetimePickerDecButton:hover {
  background-color: #eee;
}
.lyteTimePickerInvalidTime .lyteTimePickerField {
  border-color: var(--lyte-timepicker-error-border-color);
  box-shadow: var(--lyte-timepicker-error-shadow);
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
.lyteTourFreezeLayer,
.lyteTourDummyWrap {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1000;
}
.lyteTourFreezeLayer {
  mix-blend-mode: hard-light;
  position: fixed;
  background: var(--lyte-tour-freezelayer-bg);
  opacity: 0.3;
}
.lyteTourClipMask {
  background: gray;
}
.lyteTourContainer {
  will-change: transform;
  position: absolute;
  top: 0;
  left: 0;
  transition: transform 0.3s linear;
  z-index: 1040;
  box-shadow: 0 0 4px 1px var(--lyte-tour-container-boxshadow-color);
}
.lyteTourArrow {
  position: absolute;
  width: 10px;
  height: 10px;
  transform: rotate(45deg);
  background: var(--lyte-tour-bg);
  display: none;
  left: 0;
}
.lyteTourLeftArrow {
  border-left: 1px solid var(--lyte-tour-border-color);
  border-bottom: 1px solid var(--lyte-tour-border-color);
}
.lyteTourRightArrow {
  right: 0;
  border-top: 1px solid var(--lyte-tour-border-color);
  border-right: 1px solid var(--lyte-tour-border-color);
  left: unset;
}
.lyteTourTopArrow {
  top: 0;
  border-top: 1px solid var(--lyte-tour-border-color);
  border-left: 1px solid var(--lyte-tour-border-color);
}
.lyteTourBottomArrow {
  bottom: 0;
  border-bottom: 1px solid var(--lyte-tour-border-color);
  border-right: 1px solid var(--lyte-tour-border-color);
}
.lyteTourStep {
  display: none;
  width: 100%;
  height: 100%;
  background: var(--lyte-tour-bg);
  border: 1px solid var(--lyte-tour-border-color);
  border-radius: 3px;
  box-sizing: border-box;
}
lyte-tour-step-wrapper {
  display: flex;
  flex-direction: column;
  height: 100%;
}
lyte-tour-step-head {
  font-family: var(--lyte-secondary-font);
  font-size: var(--lyte-tour-step-head-font-size);
  padding: 10px;
  color: var(--lyte-tour-text-color);
}
lyte-tour-step-content {
  flex-grow: 1;
}
lyte-tour-step-footer {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 10px;
}
lyte-tour-step-indicator-wrapper {
  display: flex;
}
lyte-tour-step-indicator {
  width: 10px;
  height: 10px;
  background: var(--lyte-tour-step-indicator-bg);
  border-radius: 50%;
  margin: 0 5px;
  cursor: pointer;
}
lyte-tour-step-indicator.lyteCurTourStep,
lyte-tour-step-indicator:hover {
  background: var(--lyte-tour-step-indicator-hover-bg);
}
.lyteTourActiveTarget {
  z-index: 1040;
}
.lyteTourTargetBackground {
  position: absolute;
  transition: top 0.3s ease, left 0.3s ease;
  border-radius: 50%;
}
.lyteTourDefaultArrow,
.lyteTourActive,
.lyteTourActiveStep {
  display: block;
}
.lyteTourResetSpacing {
  margin: 0;
}
.lyteTourDummyTarget {
  position: absolute;
  box-sizing: border-box;
  visibility: hidden;
}
.lyteTourDummyTarget.lyteTourActiveTarget {
  visibility: visible;
}
.lyteTourStepHidden {
  display: none;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-card {
  font-family: var(--lyte-primary-font);
  display: block;
}
lyte-card-box {
  display: block;
  box-shadow: 0 1px 3px 2px var(--lyte-card-boxshadow-color);
  border-radius: 3px;
  text-align: right;
  background: var(--lyte-card-bg);
  color: var(--lyte-card-text-color);
}
.lyteCardYield {
  display: flex;
  flex-direction: column;
}
lyte-card-image {
  padding: 30px 20px;
  background: var(--lyte-card-img-bg);
  border-radius: 2px 2px 0 0;
}
lyte-card-header {
  font-family: var(--lyte-secondary-font);
  font-size: var(--lyte-card-header-font-size);
  padding: 10px 20px;
}
lyte-card-body {
  font-size: var(--lyte-card-body-font-size);
  padding: 5px 20px;
}
lyte-card-footer {
  padding: 10px 20px;
}
.lyteCardImgElem {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  margin: auto;
  display: block;
  object-fit: cover;
}
.lyteCardRenderPlaceholder {
  min-height: 100px;
  height: 100%;
  width: 100%;
  background: var(--lyte-card-render-placeholder-bg);
  border-radius: 3px;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
lyte-kanbanview {
  display: block;
  font-family: var(--lyte-primary-font);
  position: relative;
}
.lyteKanbanviewScrollDivSelector {
  display: flex;
  border: 1px solid var(--lyte-kanbanview-border-color);
  overflow-x: auto;
  overflow-y: hidden;
  height: 100%;
}
.lyteKanbanViewItem {
  min-width: 33%;
  width: 33%;
}
lyte-kanbanview lyte-board {
  position: relative;
  display: block;
  height: 100%;
}
lyte-kanbanview lyte-board.lyteSortableElem {
  min-width: unset;
}
lyte-kanbanview lyte-board .lyteBoardWrapper {
  border-left: 1px solid var(--lyte-kanbanview-border-color);
  display: flex;
  flex-direction: column;
  height: 100%;
  background: var(--lyte-kanbanview-bg);
  color: var(--lyte-kanbanview-text-color);
}
lyte-kanbanview lyte-board.lyteSortablePlaceholder {
  background: var(--lyte-kanbanview-hover-bg);
  border-left: 1px solid var(--lyte-kanbanview-border-color);
}
lyte-kanbanview lyte-board.lyteSortableElem .lyteBoardWrapper {
  border: 1px solid var(--lyte-kanbanview-border-color);
}
lyte-kanbanview lyte-board .lyteBoardHeader {
  padding: 15px;
  font-size: var(--lyte-kanbanview-board-header-font-size);
  color: var(--lyte-kanbanview-board-header-text-color);
  z-index: 5;
  cursor: move;
  position: relative;
}
.lyteBoardHeader.lyteKanbanviewHeaderShadow {
  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);
}
.lyteBoardContainer {
  flex-grow: 1;
  overflow: auto;
}
.lyteKanbanNestedSortable {
  overflow: auto;
  height: 100%;
  box-sizing: border-box;
}
lyte-kanbanview .lyteBoardItemContentData {
  min-height: 50px;
  border-bottom: 1px solid var(--lyte-kanbanview-border-color);
  background: var(--lyte-kanbanview-bg);
  padding: 15px;
  cursor: move;
  position: relative;
  flex-shrink: 0;
}
lyte-kanbanview .lyteBoardItemContentData:hover {
  background: var(--lyte-kanbanview-hover-bg);
}
lyte-kanbanview .lyteBoardItemContentData.lyteSortablePlaceholder,
lyte-kanbanview .lyteBoardItemContentData.lyteSortablePlaceholder:hover {
  background: var(--lyte-kanbanview-hover-bg);
  min-width: 100%;
}
lyte-kanbanview lyte-card-box {
  box-shadow: none;
  background: transparent;
}
lyte-kanbanview lyte-card-body {
  padding: 0;
}
.lyteKVLoadingHeaderPlaceholder,
.lyteKVLoadingPlaceholder {
  border: 1px solid var(--lyte-kanbanview-loading-placeholder-border-color);
  border-radius: 3px;
  background: var(--lyte-kanbanview-loading-placeholder-bg);
}
.lyteKVLoadingPlaceholder {
  margin: 15px;
  height: 33%;
}
.lyteKVLoadingHeaderPlaceholder {
  margin: 15px 15px 0;
  height: 40px;
}
.lyteKanbanNoResultMsg {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  color: var(--lyte-kanbanview-no-result-text-color);
  position: absolute;
  top: 50px;
  bottom: 0;
  width: 100%;
}
.lyteKanbanNoResultMsg.lyteHide {
  display: none;
}
lyte-kanbanview lyte-board .lyteBoardFooter {
  padding: 15px;
  font-size: var(--lyte-kanbanview-board-footer-font-size);
  color: #666;
  z-index: 5;
  cursor: move;
  position: relative;
}
.lyteKanbanBoardCollapse .lyteBoardHeader,
.lyteKanbanBoardCollapse .lyteBoardFooter,
.lyteKanbanBoardCollapse .lyteBoardContainer {
  display: none;
}
.lyteKanbanViewItem.lyteKanbanBoardCollapse {
  min-width: 50px;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-clock {
  display: inline-block;
  font-family: var(--lyte-primary-font);
  color: var(--lyte-clock-text-color);
}
.lyteClkFrameOuter {
  display: inline-block;
  padding: 10px;
  border-radius: 50%;
  background: linear-gradient(#fff, #fff 35%, #f5f5f5 50%, #eee);
  box-shadow: 0 0 10px 0px rgba(0, 0, 0, 0.2);
}
.lyteClkFrameInner {
  width: var(--lyte-clock-analog-frame-inner-width);
  aspect-ratio: 1;
  border-radius: 50%;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  background: linear-gradient(#ddd, #eee 40%, #f5f5f5 60%, #fff);
}
.lyteClkAlogTik {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 1px;
  display: none;
}
.lyteClkTik126,
.lyteClkTik39 {
  border-top: 12px solid #bbb;
  border-bottom: 12px solid #bbb;
}
.lyteClkTik17,
.lyteClkTik28,
.lyteClkTik410,
.lyteClkTik511 {
  border-top: 4px solid #bbb;
  border-bottom: 4px solid #bbb;
}
.lyteClkTik17 {
  transform: rotate(30deg);
}
.lyteClkTik28 {
  transform: rotate(60deg);
}
.lyteClkTik39 {
  transform: rotate(90deg);
}
.lyteClkTik410 {
  transform: rotate(120deg);
}
.lyteClkTik511 {
  transform: rotate(150deg);
}
.lyteClkAlogDial {
  position: absolute;
  top: 0;
  bottom: 0;
  transform: rotate(0deg);
}
.lyteClockMidCircle {
  height: 15px;
  width: 15px;
  border-radius: 50%;
  background: var(--lyte-clock-analog-middle-circle-bg);
  z-index: 10;
  position: relative;
  box-shadow: 0 0 5px 2px var(--lyte-clock-analog-middle-circle-boxshadow-color);
}
.lyteClockHrDial {
  width: 5px;
  left: calc(50% - 2px);
}
.lyteClockMinDial {
  width: 3px;
  left: calc(50% - 1px);
}
.lyteClockSecDial {
  width: 1px;
  left: 50%;
  will-change: transform;
}
.lyteClkHrDialElem,
.lyteClkMinDialElem,
.lyteClkSecDialElem {
  border-radius: 10px;
  position: absolute;
  bottom: 50%;
  background: var(--lyte-clock-analog-dial-bg);
  width: 100%;
}
.lyteClkHrDialElem {
  height: 30%;
}
.lyteClkMinDialElem {
  height: 40%;
}
.lyteClkSecDialElem {
  height: 50%;
  background: var(--lyte-clock-analog-seconds-dial-bg);
}
.lyteClkWatch,
.lyteClkTimer {
  display: flex;
  font-size: var(--lyte-clock-watch-font-size);
}
.lyteClkWatchColon,
.lyteClkTimerColon {
  margin: 0 5px;
}
.lyteClkWatchDefAMPM {
  margin-left: 5px;
}
.lyteClkWatchFrameAMPM {
  position: absolute;
  bottom: 30px;
  width: 100%;
  text-align: center;
  left: 0;
  font-size: var(--lyte-clock-watch-ampm-font-size);
}
.lyteClkTimerDefLabel {
  font-size: var(--lyte-clock-timer-default-label-font-size);
  color: var(--lyte-clock-timer-format-label-text-color);
}
.lyteClkTimerFrameBox {
  position: relative;
  padding-bottom: 20px;
}
.lyteClkTimerFrameLabel {
  font-size: var(--lyte-clock-timer-frame-label-font-size);
  text-transform: capitalize;
  position: absolute;
  bottom: 0;
  width: 100%;
  left: 0;
  text-align: center;
}
/*  Lyte Stop watch related code starts */
.lyteClockStopWatch {
  text-align: center;
  border: 1px solid var(--lyte-clock-stopwatch-border-color);
  border-radius: 5px;
}
.lyteClockStopWatch .lyteClkOuterDiv {
  margin: 20px 20px 0;
}
.lyteClockSwLapWrapper {
  border-top: 1px solid var(--lyte-clock-stopwatch-border-color);
}
.lyteClockSwWrap {
  font-size: var(--lyte-clock-stopwatch-font-size);
}
.lyteClockSwLap {
  display: flex;
  font-size: var(--lyte-clock-stopwatch-lap-font-size);
  margin: 5px 0;
  border-bottom: 1px solid var(--lyte-clock-stopwatch-border-color);
  padding: 5px 0;
}
.lyteClockSwLap:last-child {
  border-bottom: 0;
}
.lyteClockSwLapLabel {
  margin-right: auto;
  padding: 0 20px;
}
.lyteClockSwLapTime {
  padding: 0 20px;
}
.lyteClockSwActionBtnWrap {
  display: flex;
  padding: 0 20px 15px;
}
.lyteClockSwActionBtn {
  width: 50px;
  height: 50px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: var(--lyte-clock-stopwatch-btn-font-size);
  cursor: pointer;
  text-transform: capitalize;
  border-radius: 50%;
}
.lyteClockSWStart {
  border: 1px solid var(--lyte-clock-stopwatch-startbutton-border-color);
  color: var(--lyte-clock-stopwatch-startbutton-text-color);
}
.lyteClockSWStart:hover {
  background: var(--lyte-clock-stopwatch-startbutton-hover-bg);
}
.lyteClockSWReset,
.lyteClockSWLap {
  border: 1px solid var(--lyte-clock-stopwatch-resetbutton-border-color);
  color: var(--lyte-clock-stopwatch-resetbutton-text-color);
  margin-left: auto;
}
.lyteClockSWReset:hover,
.lyteClockSWLap:hover {
  background: var(--lyte-clock-stopwatch-resetbutton-hover-bg);
}
.lyteClockSWPause {
  border: 1px solid var(--lyte-clock-stopwatch-pausebutton-border-color);
  color: var(--lyte-clock-stopwatch-pausebutton-text-color);
}
.lyteClockSWPause:hover {
  background: var(--lyte-clock-stopwatch-pausebutton-hover-bg);
}
.lyteClkTimerColon {
  display: none;
}
.lyteClkTimerBox + .lyteClkTimerColon {
  display: block;
}
.lyteClkTimerBox:last-of-type + .lyteClkTimerColon {
  display: none;
}
/*  Lyte Stop watch related code ends */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-avatar-navigator {
  display: flex;
  position: relative;
}
.lyteAvatarSetCont {
  position: relative;
  overflow: hidden;
  margin: 0 20px;
}
.lyteAvatarSet {
  display: flex;
  position: absolute;
  transform: translate(-10000px);
  right: 0;
}
.lyteAvatarArrowCont {
  width: 30px;
  height: 30px;
  border: 1px solid var(--lyte-avatar-nav-border-color);
  border-radius: 50%;
  align-self: center;
  cursor: pointer;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  background: var(--lyte-avatar-nav-bg);
}
.lyteAvatarArrowCont:hover {
  background: var(--lyte-avatar-nav-hover-bg);
}
.lyteAvatarNextIcon,
.lyteAvatarPrevIcon {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: -94px -109px;
  width: 9px;
  height: 11px;
  transform: rotate(180deg);
}
.lyteAvatarNextIcon {
  transform: rotate(0deg);
}
lyte-avatar-navigator-item {
  margin: 0 5px;
  border-radius: 50%;
  border: 2px solid transparent;
  cursor: pointer;
  position: relative;
  display: inline-flex;
}
lyte-avatar-navigator-item:hover {
  border: 2px solid var(--lyte-avatar-item-hover-border-color);
  box-shadow: 0 0 6px var(--lyte-avatar-item-hover-boxshadow-color);
}
.lyteAvatarSelectedItem:hover,
.lyteAvatarSelectedItem {
  border: 2px solid var(--lyte-avatar-item-selected-border-color);
  box-shadow: 0 0 6px var(--lyte-avatar-item-selected-boxshadow-color);
}
lyte-avatar-navigator-item img {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  object-fit: cover;
}
.lyteAvatarSlideAnim {
  transition: transform 0.3s ease-in-out;
}
.lyteAvatarLoadingCont {
  width: 100%;
  height: 100%;
  position: absolute;
  background: var(--lyte-avatar-item-loading-bg);
  border-radius: 50%;
  overflow: hidden;
}
.lyteAvatarLoading {
  height: 200%;
  width: 200%;
  background: linear-gradient(to bottom left, #eee 0%, #ddd 25%, #eee 50%, #ddd 75%, #eee 100%);
  animation: lyteAvatarLoadAnim 1s linear infinite;
  position: absolute;
}
.lyteVisuallyHidden {
  position: absolute;
  top: auto;
  overflow: hidden;
  width: 0;
  height: 0;
  white-space: nowrap;
}
@keyframes lyteAvatarLoadAnim {
  0% {
    top: -100%;
    right: -100%;
  }
  100% {
    top: 0%;
    right: 0%;
  }
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-dual-listbox {
  display: block;
  height: 600px;
}
.lyteDualListBoxWithMaxHeight {
  max-height: inherit;
  height: unset;
}
.lyteListboxToolbar {
  width: 32px;
  display: flex;
  flex-direction: column;
}
.lyteLBToolbarItems {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 30px;
  height: 30px;
  margin: 10px auto;
  border: 1px solid var(--lyte-listbox-border-color);
  border-radius: 50%;
  cursor: pointer;
}
.lyteLBToolbarItems:hover {
  border: 1px solid var(--lyte-listbox-toolbar-item-hover-border-color);
}
.lyteLBTBMoveLeft::after,
.lyteLBTBMoveRight::after {
  content: '';
  border-top: 8px solid transparent;
  border-bottom: 8px solid transparent;
}
.lyteLBTBMoveLeft::after {
  border-right: 8px solid var(--lyte-listbox-toolbar-icons-color);
  transform: rotate(180deg) translateX(-1px);
}
.lyteLBTBMoveRight::after {
  border-left: 8px solid var(--lyte-listbox-toolbar-icons-color);
  transform: rotate(180deg) translateX(1px);
}
.lyteLBTBMoveUp::after,
.lyteLBTBMoveDown::after {
  content: '';
  border-left: 8px solid transparent;
  border-right: 8px solid transparent;
}
.lyteLBTBMoveUp::after {
  border-bottom: 8px solid var(--lyte-listbox-toolbar-icons-color);
  transform: translateY(-1px);
}
.lyteLBTBMoveDown::after {
  border-top: 8px solid var(--lyte-listbox-toolbar-icons-color);
  transform: translateY(1px);
}
.lyteLBTBDeleteMarked::after {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: -187px -38px;
  width: 11px;
  height: 13px;
}
.lyteLBTBDeleteMarked:hover::after {
  background-position: -209px -38px;
}
.lyteListboxWrapper {
  display: flex;
  height: inherit;
  max-height: inherit;
}
.lyteListboxLeftPanel,
.lyteListboxRightPanel {
  width: 280px;
  border: 1px solid var(--lyte-listbox-border-color);
  border-radius: 2px;
  overflow: auto;
  background: var(--lyte-listbox-bg);
}
.lyteListboxLeftPanel {
  display: flex;
  flex-direction: column;
  margin-left: 15px;
}
.lyteListboxRightPanel {
  margin-right: 15px;
}
.lyteListboxleftElementWrap {
  overflow: auto;
  flex-grow: 1;
}
.ltListboxNoToolbor .lyteListboxLeftPanel {
  margin-left: 50px;
}
.lyteListBoxLeftParentElement,
.lyteListBoxRightParentElement {
  display: flex;
  align-items: center;
  position: relative;
}
.lyteListBoxSearch {
  display: flex;
}
.lyteListBoxLeftWrap,
.lyteListBoxRightWrap {
  cursor: pointer;
}
.sortable-element.lyteListBoxLeftWrap .lyteLBLeftActive,
.sortable-element.lyteListBoxRightWrap .lyteLBRightActive {
  cursor: move;
}
.lyteListBoxRequiredParent {
  cursor: default;
}
lyte-lb-add,
lyte-lb-remove {
  width: 12px;
  height: 12px;
  display: inline-block;
  visibility: hidden;
  position: relative;
  z-index: 5;
  margin-right: auto;
  cursor: pointer;
}
lyte-lb-remove::before,
lyte-lb-add::before,
lyte-lb-add::after {
  content: '';
  position: absolute;
  border-radius: 2px;
  background: var(--lyte-listbox-add-remove-icon-color);
}
lyte-lb-remove::before,
lyte-lb-add::before {
  width: 12px;
  height: 2px;
  top: calc(50% - 1px);
}
lyte-lb-add::after {
  height: 12px;
  width: 2px;
  left: calc(50% - 1px);
}
.lyteListBoxLeftElement,
.lyteListBoxRightElement {
  padding: 5px 25px 5px 15px;
  font-size: var(--lyte-listbox-leftright-element-font-size);
  display: flex;
  align-items: center;
  color: var(--lyte-listbox-text-color);
  outline: 0;
}
.lyteListBoxLeftElement:hover,
.lyteListBoxRightElement:hover {
  background: var(--lyte-listbox-element-hover-bg);
}
.lyteListboxYield {
  max-width: 100%;
  overflow: auto;
  flex: 1;
  margin-left: 10px;
}
.lyteListBoxRequiredItem:hover,
.lyteLBDisabledElement .lyteListBoxLeftElement:hover,
.lyteLBoxDisabledParent .lyteListBoxLeftParentElement:hover {
  background: none;
}
.lyteLBLeftActive:hover,
.lyteLBRightActive:hover,
.lyteLBLeftActive,
.lyteLBRightActive {
  background: var(--lyte-listbox-element-active-bg);
  color: var(--lyte-listbox-active-text-color);
}
.lyteListBoxLeftElement:hover lyte-lb-add,
.lyteListBoxRightElement:hover lyte-lb-remove {
  visibility: visible;
}
.lyteLBoxDisabledParent .lyteListBoxLeftElement:hover lyte-lb-add,
.lyteLBDisabledElement .lyteListBoxLeftElement:hover lyte-lb-add {
  visibility: hidden;
}
.lyteLBLeftChildWrap,
.lyteLBRightChildWrap {
  transition: height 0.3s ease;
  overflow: hidden;
}
.lyteLBLeftChildWrap .lyteListBoxLeftElement,
.lyteLBRightChildWrap .lyteListBoxRightElement {
  padding-right: 40px;
}
.lyteListboxParentElementClose lyte-lb-collapse {
  transform: rotate(90deg);
}
lyte-lb-collapse {
  width: 10px;
  height: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.3s ease;
  position: absolute;
  right: 10px;
}
lyte-lb-collapse::before {
  content: '';
  border-left: 4px solid transparent;
  border-right: 4px solid transparent;
  border-top: 4px solid var(--lyte-listbox-collapse-icon-color);
}
.lyteListboxBadge {
  display: none;
  position: absolute;
  top: 0;
  right: 0;
  z-index: 5;
  transform: translateX(50%) translateY(-50%);
}
.lyteListboxBadge .lyteBadge {
  padding: 0;
  transform: translate(50%, -50%);
  right: 0;
  top: 0;
}
.lyteListboxBadge .lyteBadgeContent {
  padding: 3px 6px;
  border-radius: 10px;
  background: var(--lyte-listbox-badge-content-bg);
  color: var(--lyte-listbox-badge-content-text-color);
  font-size: var(--lyte-listbox-badge-content-font-size);
  display: inline-block;
}
.lyteLBDisabledElement,
.lyteLBoxDisabledParent .lyteListBoxLeftParentElement {
  opacity: 0.5;
  cursor: default;
}
.lyteLBoxDisabledParent .lyteListBoxLeftParentElement,
.lyteLBDisabledElement .lyteListBoxLeftWrap {
  cursor: default;
}
.lyteLBDisabledElement .lyteLBoxDisabledParent .lyteListBoxLeftParentElement {
  opacity: 1;
}
.lyteDLBDisabledToolbar {
  opacity: 0.1;
  cursor: not-allowed;
}
.lyteLBLeftPanelDropZone {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 10;
  background: var(--lyte-listbox-leftpanel-dropzone-bg);
}
.lyteLBLeftPanelDropZoneB {
  position: absolute;
  top: 5px;
  bottom: 5px;
  right: 5px;
  left: 5px;
  border: 1px dashed var(--lyte-listbox-leftpanel-dropzone-b-border-color);
}
.lyteListBoxNoResultsFound {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--lyte-listbox-noresults-text-color);
  word-break: break-word;
  overflow-wrap: anywhere;
}
.lyteListBoxLeftWrap.sortable-element .lyteListBoxElementBg,
.lyteListBoxRightWrap.sortable-element .lyteListBoxElementBg {
  animation: lytelistboxBgAnim 1s ease;
}
.lyteLBDraggedElem {
  pointer-events: none;
  position: absolute;
  top: 0;
  left: 0;
}
.lyteLBPlaceHolder {
  background: #f6fad2;
}
@keyframes lytelistboxBgAnim {
  from {
    background: #FFF3AD;
    color: #333;
  }
  to {
    background: var(--lyte-listbox-bg);
  }
}
/* Default theme imported */
/* Loading theme in configuration */
:root {
  --lyte-listview-wrapper-sticky-table-bg: #fff;
  --lyte-listview-wrapper-sticky-table-border-bottom-color: #d6d6d6;
  --lyte-listview-wrapper-table-sticky-table-border-color: #d6d6d6;
  --lyte-listview-fake-header-bg: #fff;
  --lyte-listview-fake-cell-odd-bg: #fff;
  --lyte-listview-fixed-bg: #fff;
  --lyte-listview-resizeHandler-after-bg: #d7e2ed;
  --lyte-listview-wrapper-td-border-bottom-color: #e2e2e2;
  --lyte-listview-wrapper-td-bg: #fff;
  --lyte-listview-wrapper-td-color: #111;
  --lyte-listview-edit-element-border-bg: #5ba1e5;
  --lyte-listview-multiselect-filter-table-border-color: #d6d6d6;
  --lyte-listview-dateFilter-disabled-element-bg: #eee;
  --lyte-listview-filter-border-color: #d6d6d6;
  --lyte-listview-filter-key-color: #777;
  --lyte-listview-filter-value-wrap-border-color: #d6d6d6;
  --lyte-listview-remove-filter-bg: #000;
  --lyte-listview-remove-filter-hover-bg: #f00;
  --lyte-listview-table-accordian-icon-bg: #333;
  --lyte-listview-group-heading-hover-bg: #f7f9fb;
  --lyte-listview-group-heading-hover-td-bg: transparent;
}
/* rtl files loading */
/* Loading custom themes */
.lyteListUtils {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
}
.lyteListviewWrapper .lyteStickyTable .lyteFixedColumn {
  position: sticky;
}
.lyteListviewWrapper .lyteStickyTable .lyteTableFixed {
  z-index: 5;
}
.lyteListviewWrapper .lyteStickyTable lyte-th.lyteTableFixed {
  z-index: 15;
}
.lyteListviewWrapper .lyteIntersectionDiv {
  position: absolute;
  width: 1px;
  height: 10px;
  top: var(--lyte-table-intersection);
  opacity: 0;
  pointer-events: none;
  z-index: -1;
}
.lyteListviewWrapper .lyteStickyTable lyte-th {
  top: unset;
  position: sticky;
  z-index: 10;
  transform: translateY(var(--lyte-table-intersection));
  background: var(--lyte-listview-wrapper-sticky-table-bg);
  border-bottom: 2px solid var(--lyte-listview-wrapper-sticky-table-border-bottom-color);
}
.lyteListviewWrapper:not(.lyteListViewInfiniteScroll) .lyteStickyTable lyte-th {
  top: 0;
  transform: unset;
}
.lyteListviewWrapper:not(.lyteListViewInfiniteScroll).lyteListviewSubHeaderPresent .lyteStickyTable lyte-th {
  top: 43px;
}
.lyteListviewWrapper .lyteTableScroll {
  position: relative;
}
.lyteListviewWrapper lyte-table.lyteStickyTable {
  --lyte-table-intersection: 0px;
  border-radius: 3px;
  border: 1px solid var(--lyte-listview-wrapper-table-sticky-table-border-color);
}
.lyteListHeaderName {
  max-width: 100%;
  display: inline-block;
  text-overflow: ellipsis;
  overflow: hidden;
}
.lyteListviewIntersection {
  height: 53px;
  pointer-events: none;
}
lyte-listview1 {
  height: 100%;
  display: block;
  position: relative;
}
.lyteListviewWrapper:not(.lyteListViewInfiniteScroll) .lyteListFakeHeader {
  position: sticky;
  top: 0;
  transform: unset;
}
.lyteListviewWrapper {
  height: 100%;
}
.lyteListFakeHeader {
  display: flex;
  position: relative;
  z-index: 30;
  transform: translateY(var(--lyte-table-intersection));
  background: var(--lyte-listview-fake-header-bg);
  border-radius: 3px 3px 0 0;
}
.lyteListFakeCell {
  position: sticky;
  top: 0;
  height: 43px;
  box-sizing: border-box;
  padding: 12px 15px;
}
.lyteListFakeCell:nth-child(odd) {
  background: var(--lyte-listview-fake-cell-odd-bg);
}
.lyteListFakeCell:nth-child(even) {
  background: var(--Lyte-list-fake-cell-even-bg);
}
.lyteListviewWrapper lyte-table-structure {
  table-layout: fixed;
}
.lyteListviewWrapper .lyteTableLayoutAuto {
  table-layout: auto;
}
.lyteListFixed {
  background: var(--lyte-listview-fixed-bg);
  z-index: 20;
}
.lyteListResizeHandler {
  position: absolute;
  right: 0;
  width: 10px;
  display: flex;
  justify-content: flex-end;
  height: 67%;
  top: 6px;
  cursor: ew-resize;
}
.lyteListFakeCell .lyteListResizeHandler {
  visibility: hidden;
}
.lyteListResizeHandler::after {
  content: '';
  display: block;
  width: 2px;
  background: var(--lyte-listview-resizeHandler-after-bg);
}
.lyteListviewWrapper lyte-td,
.lyteListviewWrapper td {
  cursor: pointer;
  padding: 8px 10px 7px 11px;
}
.lyteListviewWrapper td {
  display: table-cell;
  border-bottom: 1px solid var(--lyte-listview-wrapper-td-border-bottom-color);
  vertical-align: middle;
  background: var(--lyte-listview-wrapper-td-bg);
  min-width: 50px;
  box-sizing: border-box;
  font-size: 15px;
  white-space: nowrap;
  color: var(--lyte-listview-wrapper-td-color);
}
.lyteListviewWrapper lyte-td:hover,
.lyteListviewWrapper td:hover {
  background: var(--lyte-listview-wrapper-td-bg);
}
.lyteListEditElement {
  position: absolute;
  display: none;
  border: 1px solid var(--lyte-listview-edit-element-border-bg);
  outline: none;
  box-sizing: border-box;
  z-index: 50;
}
.lyteListEditElement.lyteListActive {
  display: flex;
}
.lyteEditElementWrapper {
  flex-grow: 1;
  overflow: auto;
}
.lyteEditElementWrapper .lyteInputBox .lyteField {
  border: 0;
}
.lyteListviewEditElement {
  height: 100%;
  width: 100%;
  max-width: 100%;
  display: flex;
}
.lyteListEditElement lyte-dropdown {
  max-width: 100%;
}
.lyteListviewEditElement .lyteDummyEventContainer,
.lyteListviewEditElement input {
  height: 100%;
  max-width: 100%;
}
.lyteListviewEditElement .lyteDummyEventContainer {
  flex-grow: 1;
}
.lyteListviewEditElement .lyteDateTimeInputWrapper {
  max-width: 100%;
  border: 0 !important;
}
.lyteListviewEditElement .lyteDateInputDropdown,
.lyteListviewEditElement .lyteDateTimeInputWrapper > input {
  max-width: 50%;
  box-sizing: border-box;
}
.lyteListviewEditElement lyte-drop-button {
  display: flex;
  align-items: center;
  height: 100%;
  max-width: 100%;
  border: 0 !important;
  padding: 6px 10px 7px 10px;
}
.lyteListviewEditElement .lyteDateInputDropdown lyte-drop-button {
  padding: 0;
}
.lyteListEditElement > lyte-yield {
  display: block;
  width: 100%;
  height: 100%;
}
.lyteListviewWrapper lyte-td > lyte-yield > span,
.lyteListviewWrapper td > lyte-yield > span {
  display: block;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}
.lyteListviewWrapper lyte-td > lyte-yield,
.lyteListviewWrapper td > lyte-yield {
  display: block;
}
/*	Lyte List view filter related CSS Begins	*/
.lyteFilterType {
  margin: 10px 0;
}
.lyteFilterType lyte-radiobutton:first-child {
  margin-right: 10px;
}
.lyteFilterReset {
  font-family: 'LatoRegular', sans-serif;
  color: #777;
  font-size: 13px;
  cursor: pointer;
}
.lyteFilterContent lyte-accordion-item {
  border: 0;
  margin: 0 0 8px;
}
.lyteFilterContent lyte-accordion-header {
  padding: 5px 0;
  display: flex;
  align-items: center;
}
.lyteFilterContent lyte-accordion-body {
  display: flex;
  flex-direction: column;
  padding-left: 0;
  padding-right: 0;
}
.lyteFilterContent .lyteAccordionArrow {
  position: static;
  margin-top: 0;
  margin-left: 5px;
}
.lyteListModalWrapper lyte-modal-header {
  padding: 15px 25px 10px;
}
.lyteListModalWrapper lyte-modal-content {
  padding: 0 25px;
}
.lyteListModalWrapper lyte-modal-footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 25px 15px;
}
.lyteFilterElement {
  display: flex;
  margin-top: 8px;
  padding: 0 10px;
}
lyte-multiselect-filter {
  flex-direction: column;
}
.lyteMultiselectFilterTable {
  max-height: 200px;
  margin-top: 10px;
  border-radius: 3px;
  border: 1px solid var(--lyte-listview-multiselect-filter-table-border-color);
}
.lyteMultiselectFilterTable .lyteTableScroll {
  max-height: inherit;
}
.lyteMultiselectFilterTable lyte-table-structure {
  background: transparent;
}
.lyteMultiselectFilterTable lyte-td {
  border-bottom: 0;
  padding: 5px;
  background: transparent;
}
.lyteMultiselectFilterTable .lyteMultipleEmail {
  margin-left: 22px;
}
.lyteTextFilterWrapper {
  margin-left: 8px;
}
.lyteNumberFilterWrapper,
.lyteDateFilterWrapper {
  margin-left: 8px;
  display: flex;
}
.lyteNumberFilterWrapper lyte-input:nth-child(2),
.lyteDateFilterWrapper lyte-input:nth-child(2) {
  margin-left: 5px;
}
.lyteDateFilterDisabledElement {
  padding: 10px 6px 11px;
  background: var(--lyte-listview-dateFilter-disabled-element-bg);
  border-radius: 2px;
}
/*	Lyte List view filter related CSS Ends	*/
/*	Lyte List view Filter Summary Begins	*/
.lyteListFilters {
  border: 1px solid var(--lyte-listview-filter-border-color);
  padding: 5px;
  border-radius: 3px;
}
.lyteListFilterItem {
  display: flex;
  margin-bottom: 15px;
  position: relative;
  padding-left: 10px;
}
.lyteListFilterKey {
  color: var(--lyte-listview-filter-key-color);
  margin-right: 5px;
}
.lyteListFilterValueWrap .lyteListMultipleSelected {
  padding: 1px 3px 3px;
  border: 1px solid var(--lyte-listview-filter-value-wrap-border-color);
  display: inline-block;
  border-radius: 3px;
  font-size: 13px;
}
.lyteListRemoveFilter {
  content: '';
  display: block;
  -webkit-mask-image: var(--lyte-sprite-image);
  mask-image: var(--lyte-sprite-image);
  -webkit-mask-position: -54px -2px;
  mask-position: -54px -2px;
  background-color: var(--lyte-listview-remove-filter-bg);
  width: 8px;
  height: 8px;
  cursor: pointer;
  position: absolute;
  left: 0;
  top: 8px;
  visibility: hidden;
}
.lyteListRemoveFilter:hover {
  background-color: var(--lyte-listview-remove-filter-hover-bg);
}
.lyteListFilterItem:hover .lyteListRemoveFilter {
  visibility: visible;
}
/*	Lyte List view Filter Summary Ends	*/
/*	Lyte Column Chooser component Related CSS Begins	*/
lyte-column-chooser {
  display: block;
}
.lyteColumnChooser {
  display: flex;
  flex-direction: column;
}
.lyteListviewManageColumnPopover lyte-popover-header {
  padding: 10px 20px;
}
.lyteListviewManageColumnPopover lyte-popover-content {
  max-height: 400px;
  overflow: auto;
  padding: 0 20px 10px;
}
.lyteColumnChooser lyte-checkbox {
  margin-bottom: 10px;
}
/*	Lyte Column Chooser component Related CSS Ends	*/
/*	List view Accordion table related CSS Begins	*/
.lyteListViewTableAccordionIcon {
  -webkit-mask-image: var(--lyte-sprite-image);
  -webkit-mask-position: -42px 0;
  mask-image: var(--lyte-sprite-image);
  mask-position: -42px 0;
  background-color: var(--lyte-listview-table-accordian-icon-bg);
  width: 6px;
  height: 10px;
  display: inline-block;
  vertical-align: middle;
  transform: rotate(90deg);
}
.lyteListViewRowHidden .lyteListViewTableAccordionIcon {
  transform: rotate(0);
}
.lyteListviewWrapper td .lyteListViewTableAccordionIcon + lyte-yield {
  font-family: "LatoBold", sans-serif;
  display: inline-block;
  margin-left: 5px;
  vertical-align: middle;
}
.lyteGroupHeading:hover {
  background: var(--lyte-listview-group-heading-hover-bg);
}
.lyteGroupHeading td,
.lyteGroupHeading:hover td {
  background: var(--lyte-listview-group-heading-hover-td-bg);
}
.lyteGroupHeading .lyteTableFixed {
  box-shadow: none;
}
/*	List view Accordion table related CSS Ends	*/
/*	List view footer related CSS Begins	*/
.lyteListviewFooter {
  display: flex;
  padding: 13px 15px;
  background: #f5f5f5;
  border-radius: 0 0 3px 3px;
  align-items: center;
}
.lyteListviewNavigator lyte-navigator {
  margin-left: auto;
}
.lyteListviewPerPageContainer {
  display: flex;
  align-items: center;
}
.lyteListviewPerPageLabel {
  margin-left: 10px;
}
/*	List view footer related CSS Ends	*/
.lyteListUtils lyte-listview-filter {
  margin: 0 10px 0 auto;
}
.lyteListviewHeader {
  display: flex;
  justify-content: space-between;
  padding: 20px 10px;
}
.lyteListviewHeader .lyteListviewPerPageContainer :first-child {
  margin-right: 30px;
}
.lyteListviewHeader .lyteListviewPerPageLabel {
  margin: 0 10px;
}
/* Default theme imported */
/* Loading theme in configuration */
:root {
  --lyte-listviewfilters-bg: #fff;
  --lyte-listviewfilters-border-color: #d6d6d6;
  --lyte-listviewfilter-focus-within-border-color: #0984e3;
  --lyte-listviewfilter-dropdown-ul-border-color: #e5e8ea;
  --lyte-listviewfilter-dropdown-ul-bg: #fff;
  --lyte-listviewfilter-dropdown-ul-boxshadow-color: rgba(0, 0, 0, 0.07);
  --lyte-listviewfilter-dropdown-ul-color: #152229;
  --lyte-listviewfilter-searchwrap-border-color: #AEDAF9;
  --lyte-listviewfilter-input-filter-label-bg: #EAF3FA;
  --lyte-listviewfilter-column-name-bg: #F6FAFD;
  --lyte-listviewfilter-searchwrap-hover-bg: #0984E3;
  --lyte-listviewfilter-clearicon-before-bg: #111;
  --lyte-listviewfilter-searchWrap-hover-clearIcon-before-bg: #fff;
}
/* rtl files loading */
/* Loading custom themes */
lyte-listview-filter {
  display: block;
  margin: 10px 0;
}
.lyteListViewFilterWrapper {
  display: inline-block;
  position: relative;
}
.lyteListViewFilters {
  display: inline-flex;
  background: var(--lyte-listviewfilters-bg);
  border: 1px solid var(--lyte-listviewfilters-border-color);
  border-radius: 2px;
  padding: 4px 10px;
  gap: 5px;
}
.lyteListViewFilters:focus-within {
  border: 1px solid var(--lyte-listviewfilter-focus-within-border-color);
  box-shadow: 0px 0px 5px 2px rgba(9, 132, 227, 0.12);
}
.lyteListViewFilterInput {
  display: block;
  border: 0;
  outline: 0;
  padding: 5px 0;
}
.lyteFilterSearchWrap + .lyteListViewFilterInput {
  padding: 0 5px;
}
.lyteListViewDropdownHidden {
  display: none;
}
.lyteListViewDropdown {
  position: absolute;
  z-index: 1060;
}
.lyteListViewDropdownUl {
  list-style: none;
  border: 1px solid var(--lyte-listviewfilter-dropdown-ul-border-color);
  border-radius: 2px;
  background: var(--lyte-listviewfilter-dropdown-ul-bg);
  box-shadow: 0px 0px 8px 3px var(--lyte-listviewfilter-dropdown-ul-boxshadow-color);
  color: var(--lyte-listviewfilter-dropdown-ul-color);
  font-size: 14px;
  padding: 5px 0;
  min-width: 200px;
  max-width: 330px;
  max-height: 210px;
  overflow: auto;
}
.lyteListViewDropdownLi {
  padding: 8px 15px;
  cursor: pointer;
}
.lyteListViewDropdownHighlighted {
  background: #ededed;
}
.lyteFilterSearchWrap {
  display: flex;
  align-items: center;
  border-radius: 2px;
  border: 1px solid var(--lyte-listviewfilter-searchwrap-border-color);
  font-size: 13px;
  white-space: nowrap;
}
.lyteInputFilterLabel {
  padding: 4px;
  background: var(--lyte-listviewfilter-input-filter-label-bg);
  border-radius: 1px 0 0 1px;
}
.lyteFilterColumnName {
  padding: 4px;
  background: var(--lyte-listviewfilter-column-name-bg);
}
.lyteFilterCondition {
  padding: 4px;
  outline: 0;
}
.lyteTimeFilterElement .lyteTimePickerInput,
.lyteDateTimeFilterElement .lyteDateTimeInputWrapper input,
.lyteInputFilterName.lyteInputBox input {
  padding: 4px;
  width: 50px;
  font-size: inherit;
}
.lyteTimeFilterElement .lytetimePickerButton {
  padding: 4px 5px;
}
.lyteDateTimeFilterElement.lyteDateTimeInputBox .lyteDateTimeInputWrapper > input {
  width: 80px;
}
.lyteTimeFilterElement .lyteTimePickerField,
.lyteDateTimeFilterElement.lyteDateTimeInputBox .lyteDateTimeInputWrapper,
.lyteInputFilterName.lyteInputBox.lyteInputFocus .lyteField,
.lyteInputFilterName .lyteField:hover,
.lyteInputFilterName .lyteField {
  border: 0;
}
.lyteDateTimeFilterElement .lyteDateInputDropdown {
  font-size: inherit;
}
.lyteListViewFilterClearIcon {
  display: inline-flex;
  padding: 0 4px;
  border-radius: 0 1px 1px 0;
  align-items: center;
  align-self: stretch;
  cursor: pointer;
}
.lyteFilterSearchWrap:hover .lyteListViewFilterClearIcon {
  background: var(--lyte-listviewfilter-searchwrap-hover-bg);
}
.lyteListViewFilterClearIcon::before {
  content: '';
  -webkit-mask-image: var(--lyte-sprite-image);
  mask-image: var(--lyte-sprite-image);
  -webkit-mask-position: -54px -2px;
  mask-position: -54px -2px;
  background-color: var(--lyte-listviewfilter-clearicon-before-bg);
  width: 8px;
  height: 8px;
  display: inline-block;
}
.lyteFilterSearchWrap:hover .lyteListViewFilterClearIcon::before {
  background-color: var(--lyte-listviewfilter-searchWrap-hover-clearIcon-before-bg);
}
/* Default theme imported */
@keyframes loop {
  50% {
    background-size: 80%;
  }
  100% {
    background-position: 125% 0;
  }
}
@-webkit-keyframes loop {
  50% {
    background-size: 80%;
  }
  100% {
    background-position: 125% 0;
  }
}
@-webkit-keyframes load8 {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@keyframes load8 {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@keyframes listViewLazyLoadAnim {
  0% {
    left: -50%;
  }
  100% {
    left: 100%;
  }
}
/* Loading theme in configuration */
/* rtl files loading */
:root {
  --spinner-color: #333;
  --light-spinner-color: #33333335;
}
.ltLoaderSpin:after {
  z-index: 10;
  border-radius: 50%;
  width: 50px;
  height: 50px;
}
.ltLoaderSpin {
  display: block;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  position: relative;
  text-indent: -9999em;
  border-top: 1px solid #33333335;
  border-right: 1px solid #33333335;
  border-bottom: 1px solid #333;
  border-left: 1px solid #333;
  -webkit-animation: load8 1s infinite linear;
  animation: load8 1s infinite linear;
}
.ltLoaderProgressBar {
  display: block;
  width: 90%;
}
.ltLoaderProgressBar.definite {
  position: relative;
  height: 3px;
  z-index: 4;
  background-color: #33333335;
  border-radius: 3px;
}
.ltLoaderProgressBar.definite span {
  content: '';
  position: absolute;
  z-index: 4;
  height: 100%;
  border-radius: 3px;
  background: black;
  transition: width 500ms;
}
.ltLoaderProgressBar.indefinite {
  height: 3px;
  z-index: 4;
  background: linear-gradient(to right, lightgray, black);
  background-color: #ccc;
  position: relative;
  background-size: 20%;
  background-repeat: repeat-y;
  background-position: -25% 0;
  animation: loop 1.2s ease-in-out infinite;
}
.lyteLoaderTimeoutMessage {
  z-index: 4;
  height: 10%;
  font-family: var(--lyte-primary-font);
  color: var(--spinner-color);
  display: flex;
  align-content: flex-start;
  align-items: center;
  justify-content: center;
}
.lyteLoaderProgressMessage {
  z-index: 4;
  height: 25%;
  font-family: var(--lyte-primary-font);
  color: #333;
  display: flex;
  align-content: flex-start;
  align-items: center;
  justify-content: center;
}
.ltLoaderProgressBar.indefinite.lyteLoaderTimeout {
  z-index: 4;
  animation: none;
}
.ltLoaderSpin.lyteLoaderTimeout {
  animation: none;
}
.lyteLoaderExit {
  background-image: var(--lyte-sprite-image);
  background-position: -52px 0px;
  width: 13px;
  height: 13px;
  opacity: 0.5;
  margin-right: 1%;
  cursor: pointer;
  transform: scale(2);
  z-index: 4;
  outline: none;
}
.lyteLoaderParent {
  display: block;
  position: relative;
}
.lyteLoaderFreeze {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  background: #fff;
  opacity: 0.7;
  transition: opacity 0.15s ease 0s;
}
.ltLoader {
  display: flex;
  width: 100%;
  height: 100%;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
}
.ltspindiv {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 25%;
}
.ltexitdiv {
  height: 25%;
  width: 90%;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-end;
}
.ltLoaderContainer {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 0;
  left: 0;
}
.lyteLoaderLazyLoad {
  height: 10px;
  width: 100%;
  position: relative;
  background: #efefef;
  overflow: hidden;
}
.lyteLoaderLazyLoadRunner {
  height: 10px;
  width: 40%;
  background: linear-gradient(to right, #efefef, #ddd, #efefef);
  animation: 1s linear infinite listViewLazyLoadAnim;
  position: absolute;
}
lyte-signature {
  border: 1px solid black;
  display: block;
  position: relative;
}
lyte-signature canvas {
  width: 100%;
  height: 100%;
}
lyte-signature img {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-video {
  display: block;
  width: 100%;
}
lyte-video .lyteVideo {
  width: 100%;
  cursor: none;
  position: relative;
}
.lyteVideoContainer {
  width: 100%;
  position: relative;
  overflow: hidden;
}
.lyteVideoControlsShow .lyteVideo {
  cursor: default;
}
.lyteVideoControls {
  position: absolute;
  bottom: 0;
  width: 100%;
  background: var(--lyte-video-controls-div-bg);
  padding: 20px 30px;
  box-sizing: border-box;
  opacity: 0;
  transition: opacity 0.1s ease, transform 0.1s ease;
  transform: translateY(100%);
  z-index: 5;
  direction: ltr;
}
.lyteVideoControlsShow .lyteVideoControls {
  opacity: 1;
  transform: translateY(0);
}
.lyteVideoProgressWrapper {
  display: flex;
  align-items: center;
  margin-bottom: 20px;
}
.lyteVideoToolTip {
  position: absolute;
  padding: 3px 7px;
  border-radius: 2px;
  background: var(--lyte-video-tooltip-bg);
  color: var(--lyte-video-tooltip-text-color);
  transform: translateY(calc(-100% - 5px));
  font-size: var(--lyte-video-tooltip-font-size);
  display: none;
}
.lyteVideoProgressBar:hover .lyteVideoToolTip {
  display: block;
}
.lyteVideoProgressBar {
  height: 3px;
  position: relative;
  border-radius: 3px;
  flex-grow: 1;
  transition: height 0.1s ease, transform 0.1s ease;
  background: var(--lyte-video-progress-bar-bg);
  cursor: pointer;
}
.lyteVideoProgressBar.lyteVideoBgTransparent {
  background: transparent;
}
.lyteVideoProgressBar:hover {
  opacity: 1;
  height: 7px;
}
.lyteVideoProgressed {
  height: 100%;
  background-color: var(--lyte-video-progressed-bg);
  position: absolute;
  left: 0;
  top: 0;
  z-index: 5;
  border-radius: 3px;
}
.lyteVideoProgressHandler {
  position: absolute;
  top: 1px;
  display: block;
  width: 16px;
  height: 16px;
  background: var(--lyte-video-progress-handler-bg);
  box-shadow: 0 4px 10px 0 var(--lyte-video-progress-handler-boxshadow-color);
  border-radius: 50%;
  z-index: 10;
  transform: translateX(-50%) translateY(-50%) scale(0.5);
  transition: transform 0.1s ease;
}
.lyteVideoProgressBar:hover .lyteVideoProgressHandler {
  transform: translateX(-50%) translateY(-50%) scale(1);
  top: 3px;
}
.lyteVideoChapterWrapper,
.lyteVideoProgressLoad {
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
}
.lyteVideoChapterWrapper {
  width: 100%;
  display: flex;
}
.lyteVideoChapter {
  position: relative;
  background: var(--lyte-video-chapter-bg);
  margin-left: 2px;
  border-radius: 3px;
}
.lyteVideoProgressLoad {
  background-color: var(--lyte-video-loaded-bg);
  border-radius: 3px;
}
.lyteVideoIconsWrap {
  display: flex;
  align-items: center;
}
.lyteVideoPlayPauseIconWrap {
  padding-right: 10px;
}
.lyteVideoPip,
.lyteVideoSettings,
.lyteVideoRewind,
.lyteVideoForward {
  padding: 0 10px;
}
.lyteVideoFullScreenControl {
  padding-left: 10px;
}
.lyteVideoIcons {
  border: 0;
  outline: 0;
  display: block;
  cursor: pointer;
  background-image: var(--lyte-video-sprite);
}
.lyteVideoPlayIcon {
  background-position: -210px -5px;
  width: 14px;
  height: 19px;
}
.lyteVideoPlayIcon.lyteVideoPaused {
  background-position: -186px -4px;
}
.lyteVideoRightIcons {
  display: flex;
  margin-left: auto;
}
.lyteVideoForwardIcon,
.lyteVideoRewindIcon {
  background-position: -268px -2px;
  width: 19px;
  height: 22px;
}
.lyteVideoForwardIcon {
  background-position: -296px -2px;
}
.lyteVideoPipIcon {
  background-position: -235px -5px;
  height: 18px;
  width: 22px;
}
.lyteVideoSettingsIcon {
  background-position: -4px -4px;
  width: 18px;
  height: 19px;
}
.lyteVideoFullScreen {
  background-position: -33px -6px;
  height: 16px;
  width: 16px;
}
.lyteVideoFullScreenExit {
  background-position: -59px -5px;
  height: 18px;
  width: 18px;
}
.lyteVideoVolumeControls {
  display: flex;
  align-items: center;
  padding: 0 10px;
  position: relative;
}
.lyteVideoVolumeIcon {
  background-image: var(--lyte-video-sprite);
  background-position: -153px -4px;
  width: 20px;
  height: 19px;
  display: block;
  margin: auto;
  cursor: pointer;
}
.lyteVideoVolumeIcon.lyteVideoLow {
  background-position: -125px -4px;
}
.lyteVideoVolumeIcon.lyteVideoMuted {
  background-position: -89px -4px;
}
.lyteVideoVolumeSlider {
  width: 90px;
  margin-left: 10px;
}
.lyteVideoVolumeSlider lyte-multislider {
  display: block;
}
.lyteVideoVolumeSlider .lyteRangeSlider {
  height: 4px;
  border-radius: 5px;
  background: var(--lyte-video-volume-slider-bg);
}
.lyteVideoVolumeSlider lyte-multislider .lyteSlide {
  width: 100% !important;
  height: auto !important;
}
.lyteVideoVolumeSlider .lyteSliderFill {
  background: var(--lyte-video-volume-slider-fill-bg);
  right: unset !important;
}
.lyteVideoVolumeSlider .lyteSliderFill.endFill {
  background: var(--lyte-video-volume-slider-unfilled-bg);
}
.lyteVideoVolumeSlider .lyteSliderHandler {
  border: 0;
  background: var(--lyte-video-volume-slider-handler-bg);
}
.lyteVideoAnimateForward,
.lyteVideoAnimateBackward,
.lyteVideoAnimatePlay {
  pointer-events: none;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: -40px;
  margin-top: -40px;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  background-color: var(--lyte-video-show-actions-bg);
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0;
  z-index: 1;
}
.lyteVideoAnimateBackward {
  left: 30%;
}
.lyteVideoAnimateForward {
  left: 70%;
}
.lyteVideoAnimate.lyteVideoAnimateBackward,
.lyteVideoAnimate.lyteVideoAnimateForward {
  opacity: 1;
}
.lyteVideoAnimateBackArrow {
  width: 0;
  height: 0;
  border-top: 7px solid transparent;
  border-bottom: 7px solid transparent;
  border-right: 7px solid var(--lyte-video-show-backward-action-bg);
  margin: 0 5px;
}
.lyteVideoAnimate .lyteVideoAnimateArrow1 {
  animation: lyteVideoArrowAnimation1 1.2s linear infinite;
}
.lyteVideoAnimate .lyteVideoAnimateArrow2 {
  animation: lyteVideoArrowAnimation2 1.2s linear infinite;
}
.lyteVideoAnimate .lyteVideoAnimateArrow3 {
  animation: lyteVideoArrowAnimation3 1.2s linear infinite;
}
.lyteVideoAnimateForwardArrow {
  width: 0;
  height: 0;
  border-top: 7px solid transparent;
  border-bottom: 7px solid transparent;
  border-left: 7px solid var(--lyte-video-show-forward-action-bg);
  margin: 0 5px;
}
@keyframes lyteVideoArrowAnimation1 {
  0% {
    opacity: 0.3;
  }
  25% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
  100% {
    opacity: 0.3;
  }
}
@keyframes lyteVideoArrowAnimation2 {
  0%,
  25% {
    opacity: 0.3;
  }
  50% {
    opacity: 1;
  }
  75% {
    opacity: 0.5;
  }
  100% {
    opacity: 0.3;
  }
}
@keyframes lyteVideoArrowAnimation3 {
  0%,
  50% {
    opacity: 0.3;
  }
  75% {
    opacity: 1;
  }
  100% {
    opacity: 0.3;
  }
}
.lyteVideoAnimatePlay.lyteVideoAnimate {
  animation: lyteVideoPlayPause 0.5s linear;
}
@keyframes lyteVideoPlayPause {
  from {
    opacity: 1;
    transform: scale(0.5);
  }
  to {
    opacity: 0;
    transform: scale(1.5);
  }
}
.lyteVideoAnimatePlayIcon {
  background-image: var(--lyte-video-sprite);
  background-position: -186px -4px;
  width: 14px;
  height: 19px;
  transform: scale(1.5);
  margin-left: 10px;
}
.lyteVideoAnimatePauseIcon {
  background-image: var(--lyte-video-sprite);
  background-position: -210px -5px;
  height: 14px;
  width: 14px;
  transform: scale(1.5);
}
.lyteVideoSettingsWrapper {
  position: absolute;
  background: var(--lyte-video-settings-bg);
  color: var(--lyte-video-settings-text-color);
  font-size: var(--lyte-video-settings-wrapper-font-size);
  bottom: 45px;
  padding: 5px 0;
  border-radius: 3px;
  min-width: 200px;
  z-index: 10;
}
.lyteVideoSettingsItem {
  padding: 8px 15px;
  cursor: pointer;
  display: flex;
  justify-content: space-between;
}
.lyteVideoSettingDropItem {
  padding: 8px 25px;
  cursor: pointer;
  position: relative;
}
.lyteVideoSettingsItemSelected,
.lyteVideoSettingsItemHover .lyteVideoSettingDropItem:hover,
.lyteVideoSettingsItemHover .lyteVideoSettingsItem:hover {
  background: var(--lyte-video-settings-item-hover-bg);
}
.lyteVideoOptionselected::before {
  content: '';
  width: 12px;
  height: 5px;
  border-left: 1px solid var(--lyte-video-settings-dropitem-tick-color);
  border-bottom: 1px solid var(--lyte-video-settings-dropitem-tick-color);
  transform: rotate(-45deg);
  top: 12px;
  position: absolute;
  right: 7px;
}
.lyteVideoSettingsDropdownHead {
  padding: 3px 8px 8px;
  border-bottom: 1px solid var(--lyte-video-settings-dropdown-header-border-color);
  text-transform: capitalize;
  display: flex;
  align-items: center;
}
.lyteVideoSettingsBackIcon {
  background-image: var(--lyte-sprite-image);
  background-position: -94px -109px;
  width: 9px;
  height: 11px;
  margin-left: 8px;
  cursor: pointer;
}
.lyteVideoSettingsKey::after {
  content: '';
  width: 6px;
  height: 6px;
  border-top: 1px solid var(--lyte-video-settings-arrow-color);
  border-right: 1px solid var(--lyte-video-settings-arrow-color);
  transform: rotate(225deg);
  display: inline-block;
  margin-left: 3px;
}
.lyteVideoTimer {
  color: var(--lyte-video-timer-text-color);
  font-size: var(--lyte-video-timer-font-size);
  margin-left: 15px;
  direction: ltr;
}
.lyteVideoMenuHide {
  display: none;
}
.lyteVideoPoster {
  position: absolute;
  height: 100%;
  width: 100%;
  z-index: 1;
}
.lyteVideoSubtitleWrapper {
  position: absolute;
  transition: bottom 0.1s ease;
  bottom: 20px;
  z-index: 5;
  left: 20px;
  right: 20px;
  text-align: center;
  pointer-events: none;
}
.lyteVideoControlsShow .lyteVideoSubtitleWrapper {
  bottom: 80px;
}
.lyteVideoSubtitle {
  background: var(--lyte-video-subtitle-bg);
  color: var(--lyte-video-subtitle-text-color);
  padding: 5px;
  border-radius: 3px;
  display: inline-block;
  pointer-events: auto;
}
.lyteVideoSubtitle:empty {
  visibility: hidden;
}
.lyteVideoPrefetchControlsContainer .lyteVideoPipIcon,
.lyteVideoPrefetchControlsContainer .lyteVideoFullScreen,
.lyteVideoPrefetchControlsContainer .lyteVideoSettingsIcon,
.lyteVideoPrefetchControlsContainer .lyteVideoForwardIcon,
.lyteVideoPrefetchControlsContainer .lyteVideoRewindIcon {
  cursor: not-allowed;
}
.lyteVideoPrefetchControlsContainer .lyteVideoProgressBar {
  cursor: default;
}
.lyteVideoPrefetchControlsContainer .lyteVideoProgressBar:hover {
  height: 3px;
}
.lyteVideoPrefetchControlsContainer .lyteVideoProgressBar:hover .lyteVideoProgressHandler {
  transform: translateX(-50%) translateY(-50%) scale(0.5);
  top: 1px;
}
.lyteVideoPosterBeforeVideoLoad {
  position: relative;
}
.lyteVideoPosterHide {
  display: none;
}
.lyteVideoPrefetchLoadingContainer {
  width: 100%;
  height: 100%;
  position: absolute;
  z-index: 5;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
}
.lyteVideoPrefetchInitialLoadingContainer {
  background: #000;
}
.lyteCircleLoader {
  height: 32px;
  width: 32px;
  animation: lyteCircleLoaderAnim 4.8s linear infinite;
}
@keyframes lyteCircleLoaderAnim {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.lyteCircleInnerLoader {
  display: block;
  /* clip: rect(0, 32px, 32px, 16px); */
  animation: lyteCircleInnerLoaderAnim 1.2s linear infinite;
}
.lyteCircleInnerLoader,
.lyteCircleInnerLoader::after {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  height: 20px;
  width: 20px;
  clip-path: polygon(10px 0, 20px 0px, 20px 20px, 10px 20px);
  box-sizing: border-box;
}
@keyframes lyteCircleInnerLoaderAnim {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(220deg);
  }
}
.lyteCircleInnerLoader::after {
  content: "";
  /* clip: rect(0, 32px, 32px, 16px); */
  border: 2px solid var(--lyte-voicenote-circle-loader-color);
  border-radius: 50%;
  animation: lyteCircleInnerLoaderAfterAnim 1.2s cubic-bezier(0.77, 0, 0.175, 1) infinite;
}
@keyframes lyteCircleInnerLoaderAfterAnim {
  0% {
    transform: rotate(-140deg);
  }
  50% {
    transform: rotate(-160deg);
  }
  100% {
    transform: rotate(140deg);
  }
}
.lyteVideoIconDisabled {
  opacity: 0.5;
  cursor: default;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-voicenote {
  display: flex;
  background: var(--lyte-voicenote-bg);
  align-items: center;
  border-radius: 20px;
  width: 570px;
  padding: 5px;
}
.lyteVoiceNotePrefetchContainer {
  display: flex;
  flex-grow: 1;
}
.lyteVoiceNotePrefetchPlayIcon,
.lyteVoiceNotePausePlayIcon {
  width: 32px;
  height: 32px;
  background: var(--lyte-voicenote-play-btn-bg);
  border-radius: 50%;
  border: 1px solid var(--lyte-voicenote-play-btn-border-color);
  box-shadow: 0px 0px 2px 0px var(--lyte-voicenote-play-btn-boxshadow-color);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}
.lyteVoiceNotePrefetchPlayIcon::after,
.lyteVoiceNotePausePlayIcon::after {
  content: '';
  -webkit-mask-image: var(--lyte-sprite-image);
  mask-image: var(--lyte-sprite-image);
  -webkit-mask-position: -181px -79px;
  mask-position: -181px -79px;
  background-color: #fff;
  width: 9px;
  height: 13px;
}
.lyteVoiceNotePrefetchPlayIcon::after,
.lyteVoiceNotePausePlayIcon.paused::after {
  -webkit-mask-position: -160px -80px;
  mask-position: -160px -80px;
  width: 10px;
  height: 11px;
  margin-left: 3px;
}
.lyteVoiceNotePrefetchLoading .lyteVoiceNotePrefetchPlayIcon::after {
  display: none;
}
.lyteVoiceNotePrefetchLoading .lyteVoiceNotePrefetchPlayIcon {
  pointer-events: none;
}
.lyteVoiceNotePrefetchLoadBarWrap {
  margin: 0 10px 0 20px;
  flex-grow: 1;
  display: flex;
  align-items: center;
}
.lyteVoiceNotePrefetchLoadingBar {
  background: var(--lyte-voicenote-loading-bar-bg);
  height: 2px;
  display: block;
  flex-grow: 1;
  position: relative;
}
.lyteVoiceNoteProgress {
  position: relative;
  outline: none;
  margin: 0 10px 0 20px;
  flex-grow: 1;
  background: var(--lyte-voicenote-loading-bar-bg);
}
.lyteVoiceNotePrefetchLoadingBar::before {
  content: '';
}
.lyteVoiceNotePrefetchLoadingBar::before,
.lyteVoiceNoteHandler {
  width: 12px;
  height: 12px;
  position: absolute;
  transform: translate(50%, -50%);
  border-radius: 50%;
  background: inherit;
  top: 1px;
}
.lyteVoiceNoteMetaLoaded .lyteVoiceNoteHandler {
  background: var(--lyte-voicenote-loading-handler-bg);
}
.lyteVoiceNoteMetaLoaded .lyteVoiceNoteProgress {
  cursor: pointer;
}
.lyteVoiceNoteCompletion {
  display: block;
  pointer-events: none;
  background: var(--lyte-voicenote-completed-bg);
  height: 2px;
  width: 0;
}
.lyteVoiceNoteElapsedTime,
.lyteVoiceNoteDurationSpan {
  color: var(--lyte-voicenote-duration-text-color);
  font-size: var(--lyte-voicenote-duration-font-size);
}
.lyteVoiceNoteDurationSpan {
  margin-left: 7px;
}
.lyteVoiceNoteTimeSeparate {
  margin: 0 5px;
  color: var(--lyte-voicenote-duration-separator-color);
}
.lyteVoiceNoteVolumeController {
  display: flex;
  margin-right: 10px;
}
.lyteVoiceNotePlaybackRate {
  margin: 0 10px;
}
.lyteVoiceNoteVolumeIcon,
.lyteVoiceNoteVolumeControl {
  -webkit-mask-image: var(--lyte-sprite-image);
  mask-image: var(--lyte-sprite-image);
  -webkit-mask-position: -68px -78px;
  mask-position: -68px -78px;
  background-color: #555;
  width: 20px;
  height: 16px;
  display: block;
  cursor: pointer;
}
.lyteVoiceNotePopover {
  padding: 7px 13px;
}
.lyteVoiceNoteVolumeIcon {
  margin-left: 10px;
}
.lyteVoiceNoteMuteIcon {
  -webkit-mask-position: -128px -78px;
  mask-position: -128px -78px;
}
.lyteVoiceNoteFullVolumeIcon {
  -webkit-mask-position: -95px -78px;
  mask-position: -95px -78px;
}
.lyteVoiceNoteVolumeSlider {
  display: flex;
  align-items: center;
}
.lyteVoiceNoteVolumeSlider .lyteRangeSlider {
  background: transparent;
  height: 2px;
}
.lyteVoiceNoteVolumeSlider .lyteRangeSlider.lyteHorizontal .lyteSliderFill {
  height: 2px;
  top: calc(50% - 1px) !important;
  background: var(--lyte-voicenote-volume-slider-fill-bg);
}
.lyteVoiceNoteVolumeSlider .lyteSliderHandler {
  background: var(--lyte-voicenote-volume-slider-handler-bg);
  top: calc(50% - 6px);
  border: 0;
}
.lyteVoiceNotePlaybackRate lyte-drop-button {
  padding: 2px 7px;
  display: block;
  border-radius: 10px;
  color: var(--lyte-voicenote-playback-speed-text-color);
  font-size: var(--lyte-voicenote-playback-speed-font-size);
  line-height: 12px;
  text-align: center;
}
.lyteVoiceNotePlaybackRate lyte-icon.dropdown {
  display: none;
}
lyte-drop-box.lyteVoiceNotePlaybackRateDropbox {
  border-radius: 5px;
}
.lyteVoiceNotePlaybackRateDropbox .lyteArrow {
  display: none !important;
}
lyte-drop-box.lyteDropdownDown.lyteVoiceNotePlaybackRateDropbox {
  transform: translateX(-25%) translateY(15px);
}
lyte-drop-box.lyteDropdownUp.lyteVoiceNotePlaybackRateDropbox {
  transform: translateX(-25%) translateY(-15px);
}
.lyteVoiceNotePlaybackRateDropbox lyte-drop-item {
  padding: 4px 15px;
  font-size: var(--lyte-voicenote-playback-speed-drop-item-font-size);
  color: var(--lyte-voicenote-playback-speed-drop-item-text-color);
}
.lyteVoiceNotePlaybackRateDropbox lyte-drop-item[selected="true"]::before {
  right: 4px;
  top: calc(50% - 3px);
}
.lyteVoiceNotePrefetchContainer .lyteCircleLoader {
  display: none;
}
.lyteVoiceNotePrefetchLoading .lyteCircleLoader {
  display: block;
}
.lyteVoiceNotePrefetchContainer ~ lyte-dropdown,
.lyteVoiceNotePrefetchContainer ~ .lyteVoiceNoteVolumeController {
  pointer-events: none;
  opacity: 0.7;
}
.lyteCircleLoader {
  height: 32px;
  width: 32px;
  animation: lyteCircleLoaderAnim 4.8s linear infinite;
}
@keyframes lyteCircleLoaderAnim {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.lyteCircleInnerLoader {
  display: block;
  /* clip: rect(0, 32px, 32px, 16px); */
  animation: lyteCircleInnerLoaderAnim 1.2s linear infinite;
}
.lyteCircleInnerLoader,
.lyteCircleInnerLoader::after {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  height: 20px;
  width: 20px;
  clip-path: polygon(10px 0, 20px 0px, 20px 20px, 10px 20px);
  box-sizing: border-box;
}
@keyframes lyteCircleInnerLoaderAnim {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(220deg);
  }
}
.lyteCircleInnerLoader::after {
  content: "";
  /* clip: rect(0, 32px, 32px, 16px); */
  border: 2px solid var(--lyte-voicenote-circle-loader-color);
  border-radius: 50%;
  animation: lyteCircleInnerLoaderAfterAnim 1.2s cubic-bezier(0.77, 0, 0.175, 1) infinite;
}
@keyframes lyteCircleInnerLoaderAfterAnim {
  0% {
    transform: rotate(-140deg);
  }
  50% {
    transform: rotate(-160deg);
  }
  100% {
    transform: rotate(140deg);
  }
}
.lyteVoiceNoteError .lyteVoiceNotePlaybackRate,
.lyteVoiceNoteError .lyteVoiceNoteVolumeControl,
.lyteVoiceNoteError .lyteVoiceNotePausePlayIcon {
  pointer-events: none;
  opacity: 0.7;
}
.lyteVoiceNoteError .lyteVoiceNoteProgress {
  pointer-events: none;
}
.lyteVoiceNoteError .lyteVoiceNoteHandler {
  background: var(--lyte-voicenote-error-handler-bg);
}
/* rtl files loading */
lyte-drawer {
  display: block;
  position: relative;
  max-height: 500px;
  border: 1px solid var(--lyte-drawer-border-color);
  color: var(--lyte-drawer-text-color);
}
lyte-drawer.lyteDrawerModal {
  border: 0;
}
.lyteDrawerInlineBody {
  display: flex;
  flex-direction: row;
  position: relative;
  overflow: hidden;
  max-height: inherit;
}
.lyteDrawerPanel {
  width: var(--lyte-drawer-width);
  max-height: inherit;
  outline: 0;
}
.drawerWrapper {
  height: 100%;
  display: flex;
  flex-direction: column;
}
lyte-drawer-body {
  display: block;
  overflow: auto;
}
lyte-drawer-group {
  display: block;
  border-bottom: 1px solid var(--lyte-drawer-group-border-color);
  margin-bottom: 20px;
  padding-bottom: 7px;
}
lyte-drawer-group:last-of-type {
  border-bottom: 0;
  margin-bottom: 0;
  padding-bottom: 0;
}
lyte-drawer-label {
  display: block;
  padding: 10px 10px 3px;
  font-size: var(--lyte-drawer-label-font-size);
  font-family: var(--lyte-secondary-font);
  color: var(--lyte-drawer-text-color);
}
lyte-drawer-item {
  position: relative;
  cursor: pointer;
  display: block;
  color: var(--lyte-drawer-text-color);
  padding: 8px 12px;
  font-size: var(--lyte-drawer-item-font-size);
  margin: 5px 0;
  font-family: var(--lyte-primary-font);
}
.lyteDrawerItemFocused {
  background: var(--lyte-drawer-item-hover-bg);
}
lyte-drawer-item.lyteDrawerActiveItem:hover,
.lyteDrawerActiveItem {
  background: var(--lyte-drawer-active-bg);
  color: var(--lyte-drawer-active-item-text-color);
}
.lyteDrawerDisabledItem {
  pointer-events: none;
  opacity: 0.5;
  background: var(--lyte-drawer-item-disabled-bg);
}
.lyteDrawerContent {
  position: relative;
  flex: 1;
  padding: 40px 15px 15px;
  overflow: auto;
}
lyte-drawer-freeze {
  z-index: 5;
  background: var(--lyte-drawer-freeze-bg);
  transition: opacity var(--lyte-drawer-transition-duration) ease;
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  left: 0;
  opacity: 0;
  display: none;
}
lyte-drawer-freeze.lyteDrawerFreezeLayerShown {
  opacity: 0.3;
}
.lyteDrawerCloseIconWrap,
.lyteDrawerOpenElem {
  cursor: pointer;
  z-index: 5;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid #ddd;
  box-shadow: 0px 0 3px 1px rgba(0, 0, 0, 0.06);
  background: var(--lyte-theme-body-bg);
  position: absolute;
  left: -35px;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: center;
  top: 5px;
}
.lyteDrawerModal .lyteDrawerOpenElem {
  position: static;
}
.lyteDrawerModal lyte-modal-content:focus {
  outline: none;
}
.lyteDrawerToggleIcon {
  background-image: var(--lyte-sprite-image);
  background-position: -153px -52px;
  width: 11px;
  height: 20px;
  transform: rotate(180deg);
}
.lyteDrawerOpenElem .lyteDrawerToggleIcon {
  transform: rotate(0deg);
}
.lyteDrawerPanelRight .lyteDrawerOpenElem .lyteDrawerToggleIcon {
  transform: rotate(180deg);
}
.lyteDrawerPanelRight .lyteDrawerCloseIconWrap .lyteDrawerToggleIcon {
  transform: rotate(0deg);
}
.lyteDrawerPanelRight .lyteDrawerCloseIconWrap,
.lyteDrawerPanelRight .lyteDrawerOpenElem {
  right: -35px;
  left: unset;
}
.lyteDrawerInlineBody .lyteDrawerPanel {
  transition: transform var(--lyte-drawer-transition-duration) ease;
  position: absolute;
  top: 0;
  bottom: 0;
  background: var(--lyte-drawer-inline-panel-bg);
  z-index: 10;
}
.lyteDrawerInlineBody.lyteDrawerPanelLeft .lyteDrawerPanel {
  right: 0;
  transform: translateX(100%);
}
.lyteDrawerInlineBody.lyteDrawerPanelRight .lyteDrawerPanel {
  left: 0;
  transform: translateX(-100%);
}
.lyteDrawerShown.lyteDrawerInlineBody .lyteDrawerPanel {
  transform: translateX(0);
}
.lyteDrawerInlineBody.lyteDrawerInlineDisplace .lyteDrawerContent {
  transition: margin var(--lyte-drawer-transition-duration) ease;
  margin-right: 0;
  margin-left: 0;
}
.lyteDrawerShown.lyteDrawerInlineDisplace.lyteDrawerPanelLeft .lyteDrawerContent {
  margin-right: 200px;
}
.lyteDrawerShown.lyteDrawerInlineDisplace.lyteDrawerPanelRight .lyteDrawerContent {
  margin-left: 200px;
}
.lyteDrawerMiniIcon {
  width: 30px;
  height: 30px;
  display: inline-block;
  background-size: 100%;
  flex-shrink: 0;
}
.lyteDrawerMiniVariant .lyteDrawerCloseIconWrap,
.lyteDrawerMiniVariant .lyteDrawerOpenElem {
  left: -15px;
}
.lyteDrawerPanelRight.lyteDrawerMiniVariant .lyteDrawerCloseIconWrap,
.lyteDrawerPanelRight.lyteDrawerMiniVariant .lyteDrawerOpenElem {
  right: -15px;
}
.lyteDrawerInlineBody.lyteDrawerMiniVariant .lyteDrawerPanel {
  width: var(--lyte-drawer-mini-variant-width);
  overflow: visible;
  transition: width var(--lyte-drawer-transition-duration) ease;
  border-left: 1px solid var(--lyte-drawer-border-color);
  transform: translateX(0);
}
.lyteDrawerInlineBody.lyteDrawerPanelRight.lyteDrawerMiniVariant .lyteDrawerPanel {
  border-right: 1px solid #ddd;
  border-left: 0;
}
.lyteDrawerShown.lyteDrawerInlineBody.lyteDrawerMiniVariant .lyteDrawerPanel {
  width: var(--lyte-drawer-width);
}
.lyteDrawerMiniVariant lyte-drawer-body {
  width: 100%;
  overflow: hidden;
  overflow-y: auto;
}
.lyteDrawerMiniVariant lyte-drawer-item {
  display: flex;
}
.lyteDrawerMiniLabel {
  margin-right: 10px;
  white-space: nowrap;
}
.lyteDrawerMiniVariant .drawerWrapper {
  width: 100%;
}
lyte-drawer-actions {
  width: 100%;
  padding: 10px 12px;
  position: relative;
  display: flex;
  justify-content: space-between;
  box-sizing: border-box;
  flex-shrink: 0;
}
.lyteDrawerOverlayShow {
  position: absolute;
  top: 0;
  bottom: 0;
  background: var(--lyte-drawer-overlay-bg);
  z-index: 1;
}
.lyteDrawerInlineDisplace.lyteDrawerMiniVariant .lyteDrawerContent {
  margin-right: var(--lyte-drawer-mini-variant-width);
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-code-snippet {
  display: block;
  position: relative;
  direction: ltr;
}
.lyteCSCopyButton {
  position: absolute;
  right: 15px;
  top: 15px;
}
.lyteCSCopyButton .lyteDefaultBtn {
  background: #EEF6FC;
  border: 1px solid #0984E3;
  border-radius: 5px;
  color: #0984E3;
  text-transform: capitalize;
}
.lyteCSContainer {
  display: flex;
  background: #F6FAFD;
  border: 1px solid #DCEDF9;
  border-radius: 5px;
  font-size: 14px;
  line-height: 18px;
  overflow: auto;
  box-sizing: border-box;
}
.lyteCSLineNumberContainer {
  padding: 15px;
}
.lyteCSLineNumber {
  display: block;
  color: #496A83;
  text-align: right;
}
.lyteCSCodeContainer {
  padding: 15px;
  white-space: pre;
  flex-grow: 1;
}
.lyteUrl,
.lyteTagNameCls {
  color: #04F;
}
.lytePunctuationCls {
  color: #04F;
}
.lyteContentCls {
  color: #333;
}
.lyteAttributeEqualsCls {
  color: #800080;
}
.lyteAttributeNameCls {
  color: #800080;
}
.lyteAttributeValQuoteCls {
  color: #006203;
}
.lyteAttributeValueCls {
  color: #006203;
}
.lyteEntityCls {
  color: #ff2f2f;
}
.lyteCSSComment,
.lyteCommentCls {
  color: #737373;
}
.lyteCSSSelector {
  word-spacing: 5px;
  color: #006203;
}
.lyteCSSRuleName {
  color: #333;
}
.lyteSymbols,
.lyteCSSPunctuation {
  color: #333;
}
.lyteCSSRuleName + .lyteCSSPunctuation {
  margin-right: 3px;
}
.lyteCSSValueFunction,
.lyteCSSRuleValue {
  color: #B24A00;
}
.lyteCSSCombinator {
  color: #ff00ff;
}
.lyteCSSAttributeName {
  color: #800080;
}
.lyteCSSImportant,
.lyteCSSAttributeValue {
  color: #04F;
}
.lyteCSSColorValue {
  color: orange;
}
.lyteYamlAliasPunctuationCls,
.lyteYamlAnchorPunctuationCls,
.lyteYamlAliasNameCls,
.lyteYamlAnchorNameCls {
  color: #006203;
}
.lyteYamlDataType,
.lyteYamlKey,
.lyteJavaKeyword,
.lytePythonKeyword,
.lyteJSKeyword {
  color: #800080;
}
.lytePlainText,
.lyteYamlIdentifier,
.lyteJavaIdentifier,
.lytePythonIdentifier,
.lyteJSIndentifier {
  color: #333;
}
.lyteYamlAnchorAlias,
.lyteJavaOperator,
.lytePythonOperator,
.lyteJSOperator {
  color: #800080;
}
.lyteYamlPunctuator,
.lyteJavaPunctuator,
.lytePythonPunctuator,
.lyteJSPunctuator {
  color: #1A1A1A;
}
.lyteNumbers,
.lyteYamlInteger,
.lyteJavaInteger,
.lytePythonInteger,
.lyteJavaFloat,
.lytePythonFloat,
.lyteJSNumber {
  color: #B24A00;
}
.lyteYamlString,
.lyteJavaString,
.lytePythonString,
.lyteJSStringLiteral {
  color: #B24A00;
}
.lyteYamlComment,
.lyteJavaComment,
.lytePythonComment,
.lyteJSComment {
  color: #5f5757;
}
.lyteJavaRegex,
.lytePythonRegex,
.lyteJSRegex {
  color: #00b483;
}
.lyteJavaBoolean,
.lytePythonBoolean,
.lyteJSBoolean {
  color: #6c58ff;
}
.lyteJSFunction {
  color: #006203;
}
.lyteJavaNull,
.lyteJSNull,
.lyteJSUndefined {
  color: #6c58ff;
}
.lyteCodeSnippetTransparentBg .lyteCSContainer {
  background: transparent;
}
.lyteCodeSnippetNumberSectionBg .lyteCSLineNumberContainer {
  background: #eef6fc;
}
.lyteCSCopyIcon {
  display: flex;
  position: absolute;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  right: 8px;
  top: 8px;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}
.lyteCSCopyIcon:hover {
  background: #dcedf9;
}
.lyteCSCopyIcon::after {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: -263px -61px;
  width: 16px;
  height: 16px;
  display: block;
}
lyte-connect {
  position: relative;
  display: block;
  --contextualLevel: 100;
}
lyte-connect-item {
  display: block;
  border: 1px solid #C2CFDE;
  border-radius: 3px;
  position: absolute;
  --contextualRatio: calc(var(--contextualLevel) / 100);
  width: calc(100px * var(--contextualRatio));
  z-index: 2;
  background: white;
  overflow: hidden;
  cursor: move;
  text-align: center;
}
lyte-connect-item.lyteConnectionHover {
  box-shadow: 0px 5px 10px #0000001A;
}
lyte-connect-item.lyteShapeHover {
  border: 1px solid #ACC3DD;
}
.lyteConnectShapeOverlapped {
  opacity: 0.5;
  cursor: not-allowed;
}
lyte-connection-title {
  display: block;
}
lyte-connection-header {
  display: block;
  padding: 10px;
  background: #d7e7fa;
  border-top: 4px solid #3D90F8;
}
lyte-connection-content {
  display: block;
  background: #d7e7fa;
}
lyte-connection-module {
  display: block;
  padding: 5px 10px;
  background: #fff;
  margin: 10px;
}
lyte-connection-footer {
  display: block;
  padding: 10px;
  background: #d7e7fa;
}
.lyteConnectionSelected:hover,
.lyteConnectionSelected {
  z-index: 10;
  border-color: #0984e3;
  box-shadow: 0px 0px 5px 3px rgba(9, 132, 227, 0.12);
}
.lyteConnectionPath {
  stroke: #65819D;
  stroke-width: 2;
  fill: none;
}
.lyteConnectorElementSelected .lyteConnectionPath {
  stroke: #0093ff;
}
.lyteConnectionHover .lyteConnectionPath {
  stroke-width: 3;
}
.lyteConnectionFakePath {
  stroke: transparent;
  stroke-width: 5;
  fill: none;
}
.lyteConnectionFakeContainer,
.lyteConnectionContainer {
  pointer-events: none;
  /*will-change: transform;*/
}
.lyteConnectionContainer path {
  pointer-events: auto;
  /*will-change: d*/
}
.lyteConnectPathSelection .lyteConnectionPath {
  stroke: #FF9632;
}
.lyteConnectShortestPathSelection .lyteConnectionPath {
  stroke: #73c121;
}
.lyteConnectHighlightAnimation .lyteConnectionPath {
  stroke: #00c4ff;
}
.lyteConnectionElement {
  position: relative;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  outline: 0;
}
.lyteConnectionMarker {
  position: absolute;
  left: 0;
  top: 0;
}
.lyteConnectSelection {
  z-index: 3;
}
.lyteConnectWrapper {
  overflow: visible;
  height: 100%;
  width: 100%;
}
.lyteConnectOverlay {
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  position: absolute;
  border: 1px solid #0984e3;
  border-radius: 5px;
  box-sizing: border-box;
}
.lytePreviewElement {
  position: absolute;
  border: 2px solid #555;
  border-radius: 5px;
}
.lytePreviewForeignObject {
  overflow: visible;
}
.lyteContextualAnimation lyte-connect-item {
  transition-property: width, height, left, top;
  transition-duration: 200ms;
  will-change: left, top, font-size, width, height;
}
.lyteContextualAnimation lyte-connection-content {
  transition-property: max-height, height;
  will-change: max-height, height;
  transition-duration: 200ms;
  pointer-events: none;
}
.lyteConnectSelectionElement {
  position: absolute;
  background: #00c4ff;
  opacity: 0.5;
}
.lyteConnectContextualLevel75 {
  font-size: 12px;
}
.lyteConnectContextualLevel75 lyte-connect-item {
  width: 75px;
}
.lyteConnectContextualLevel75 lyte-connection-content {
  max-height: 150px;
}
.lyteConnectContextualLevel50 {
  font-size: 8px;
}
.lyteConnectContextualLevel50 lyte-connect-item {
  width: 50px;
}
.lyteConnectContextualLevel50 lyte-connection-content {
  max-height: 100px;
}
.lyteConnectContextualLevel25 {
  font-size: 6px;
}
.lyteConnectContextualLevel25 lyte-connect-item {
  width: 40px;
}
.lyteConnectContextualLevel25 lyte-connection-content {
  max-height: 80px;
}
.lyteConnectContextualLevel0 lyte-connect-item {
  width: 20px;
  height: 20px;
  overflow: hidden;
}
.lyteConnectContextualLevel0 lyte-connection-content {
  display: none;
}
.lyteConnectGroupShape {
  background: transparent;
}
.lyteShapeHover .lyteConnectionPath {
  stroke: #0bb75d;
}
.lyteConnectionLineMarker {
  stroke: #65819D;
  stroke-width: 2;
  fill: none;
  transform-box: fill-box;
  transform-origin: center;
}
.lyteShapeHover .lyteConnectionLineMarker {
  stroke: #0bb75d;
}
.lyteConnectorElementSelected .lyteConnectionLineMarker {
  stroke: #0093ff;
}
.lyteConnectPreview {
  width: 200px;
  height: 200px;
  bottom: 30px;
  right: 30px;
  position: absolute;
  border: 1px solid #555;
  border-radius: 5px;
}
.lyteConnectHiddenElem {
  display: none !important;
}
.lyteSmartGuides {
  position: absolute;
  border: 1px dotted black;
  box-sizing: border-box;
  z-index: 100;
}
.lyteConnectionPreviewMarker {
  position: absolute;
  pointer-events: none;
}
.lyteConnectReconnectElement {
  z-index: 15;
  position: absolute;
  width: 10px;
  height: 10px;
  background: red;
  left: calc(var(--left) - 5px);
  top: calc(var(--top) - 5px);
}
.lyteConnectorReconnect .lyteConnectReconnectElement {
  pointer-events: none;
  visibility: hidden;
}
.lyteConnectorReconnect .lyteConnectorElementSelected path {
  pointer-events: none;
}
.lyteConnectorReconnect lyte-textbox.lyteConnectorElementSelected {
  display: none;
}
lyte-textbox {
  background: #fff;
  display: flex;
  flex-direction: column;
  position: absolute;
  transform: translate(-50%, -50%);
  min-width: 20px;
  min-height: 20px;
  pointer-events: auto;
  z-index: 10;
  border: 1px solid #ddd;
}
lyte-textbox.lyteConnectEmpty {
  border: 1px solid #ccc;
  border-radius: 5px;
}
.lyteConnectEmpty:before {
  content: "";
  left: 50%;
  top: 50%;
  position: absolute;
  transform: translate(-50%, -50%);
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -53px -58px;
  width: 11px;
  height: 11px;
  display: block;
}
.lyteConnectInnerSpan {
  text-align: center;
  position: relative;
  padding: 0 20px;
  border-left: 2px solid #00adff;
  border-right: 2px solid #00adff;
}
.lyteConnectInnerSpan::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 2px;
  background: #00adff;
  left: 0;
  top: 16px;
}
.lyteInnerText {
  padding: 10px;
  background: #fff;
  display: inline-block;
  position: relative;
  z-index: 1;
}
.lyteConnectInnerSpan:first-of-type .lyteInnerText {
  padding-top: 0;
  top: -5px;
}
.lyteConnectInnerSpan:last-of-type .lyteInnerText {
  padding-bottom: 0;
  bottom: -5px;
}
.lyteConnectInnerSpan:first-of-type {
  border-radius: 4px 4px 0 0;
}
.lyteConnectInnerSpan:last-of-type {
  border-radius: 0 0 4px 4px;
}
.lyteConnectInnerSpan:first-of-type::after {
  top: 0;
  border-radius: 5px 5px 0 0;
}
.lyteConnectInnerSpan:last-of-type::after {
  bottom: 0;
  top: auto;
  border-radius: 0 0 5px 5px;
}
.lyteConnectInnerSpan:only-of-type::after {
  content: unset;
}
.lyteConnectInnerSpan:only-of-type {
  border: 0;
  padding: 0;
}
.lyteConnectInnerSpan:only-of-type .lyteInnerText {
  bottom: auto;
  top: 5px;
}
.lyteConnectReadonly .lyteConnectAnchorPoint {
  display: none;
}
.lyteConnectGroupShape {
  display: flex;
  flex-direction: row;
  width: auto;
}
.lyteConnectGroupShape .lyteConnectInnerItem {
  margin: 0px 20px;
  padding: 15px 10px;
  text-align: center;
  position: relative;
  z-index: 10;
  border: 1px solid #C2CFDE;
  width: 100px;
}
.lyteGroupSortableSelect {
  overflow: visible;
}
.lyteConnectSortableDown path {
  pointer-events: none;
}
.lyteConnectSortHover {
  border: 1px solid #7fceef !important;
}
.lyteConnectLineAdjustElement {
  position: absolute;
  z-index: 15;
  background: #ddd;
  border: 1px solid #c6c6c6;
  box-sizing: border-box;
}
.lyteConnectLineAdjustElement:hover {
  background: #ccc;
}
.lyteConnectVerticalLine {
  width: 10px;
  height: 30px;
  left: calc(var(--left) - 5px);
  top: calc(var(--top) - 15px);
  cursor: ew-resize;
}
.lyteConnectHorizontalLine {
  width: 30px;
  height: 10px;
  left: calc(var(--left) - 15px);
  top: calc(var(--top) - 5px);
  cursor: ns-resize;
}
.lyteConnectFakeHangingItem {
  padding: 0px !important;
  visibility: hidden;
  pointer-events: none;
}
.lyteConnectAnchorPoint {
  position: absolute;
  width: 8px;
  height: 8px;
  /*transform: translate(-50%,-50%);*/
  border-radius: 50%;
  background: black;
  visibility: hidden;
  left: calc(var(--leftValue) - 4px);
  top: calc(var(--topValue) - 4px);
}
.lyteConnectShowAnchor .lyteConnectAnchorPoint.lyteConnectAnywhereAnchor {
  visibility: hidden;
}
.lyteConnectAnchorPoint.lyteConnectAnywhereAnchor {
  cursor: pointer;
  width: 12px;
  height: 12px;
  left: calc(var(--leftValue) - 6px);
  top: calc(var(--topValue) - 6px);
}
.lyteConnectShowAnchor lyte-connect-item,
.lyteShapeHover {
  overflow: visible;
}
.lyteConnectShowAnchor .lyteShapeHover > .lyteConnectAnchorPoint.lyteConnectAnywhereAnchor,
.lyteConnectShowAnchor .lyteConnectAnchorPoint,
.lyteShapeHover > .lyteConnectAnchorPoint {
  visibility: visible;
}
.lyteConnectionSelected .lyteConnectAnchorPoint {
  display: none;
}
.lyteConnectionSelected {
  overflow: visible;
}
lyte-suggestion-element {
  position: absolute;
  overflow: visible;
  display: none;
  padding: 5px;
  border-radius: 5px;
  border: 1px solid #ccc;
  cursor: pointer;
}
.lyteConnectSuggestionAddIcon {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  background: #0984e3;
  padding: 3px;
}
.lyteConnectSuggestionAddIcon::before {
  content: '';
  width: 11px;
  height: 11px;
  display: block;
  -webkit-mask-image: url(../../images/sprite_lyte.svg);
  -webkit-mask-position: -53px -58px;
  mask-image: url(../../images/sprite_lyte.svg);
  mask-position: -53px -58px;
  background: #fff;
  transform: scale(0.8);
}
lyte-suggestion-element.lyteElementSuggestedDisplay {
  display: block;
}
.lyteConnectSuggestEleLeft {
  top: 50%;
  right: 100%;
  transform: translate(-50%, -50%);
}
.lyteConnectSuggestEleRight {
  top: 50%;
  left: 100%;
  transform: translate(50%, -50%);
}
.lyteConnectSuggestEleDown {
  top: 100%;
  right: 50%;
  transform: translate(50%, 50%);
}
.lyteConnectSuggestEleTop {
  bottom: 100%;
  right: 50%;
  transform: translate(50%, -50%);
}
lyte-connect-item.lyteConnectSuggestedItem {
  background: #eee;
}
lyte-connect > .lyteConnectWrapper > svg > .lyteConnectSuggestedItem {
  opacity: 0.5;
}
.lyteConnectSuggestionItem {
  z-index: 15;
}
.lyteConnectionSelected.lyteConnectSuggestionItem:hover {
  z-index: 20;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
.lyteConnectionElement {
  position: relative;
}
.lyteConnectionMarker {
  pointer-events: none;
  width: 100%;
  height: 100%;
  position: absolute;
  right: 0;
  top: 0;
}
.lyteConnectionFakeContainer,
.lyteConnectionContainer {
  pointer-events: none;
}
.lyteConnectionContainer path {
  pointer-events: auto;
}
.lyteConnectionPath {
  stroke: #65819D;
  stroke-width: 2;
  fill: none;
  transition: d 2s;
}
.lyteConnectionFakePath {
  stroke: transparent;
  stroke-width: 5;
  fill: none;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-connect-swimlanes {
  display: flex;
  position: relative;
}
.lyteConnectionSwimlanesMarker {
  position: absolute;
}
lyte-connect-swimlanes lyte-connect {
  position: absolute;
  z-index: 2;
}
lyte-connect-swimlanes .lyteConnectionSelected {
  pointer-events: none;
  /* color: red; */
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-timeline-view {
  display: block;
  font-family: "Zoho_Puvi_Regular", sans-serif;
}
.lyteTimelineViewFixedContainerHeight .lyteTimelineViewTable,
.lyteTimelineViewFixedContainerHeight .lyteTimelineViewContentElem {
  height: 100%;
}
.lyteTimelineViewTable {
  max-height: inherit;
  display: block;
  box-sizing: border-box;
  position: relative;
}
.lyteTimelineViewContentElem {
  --lyte-timelineview-groupby-panel-width: 201px;
  --lyte-timelineview-row-size: 30px;
  --lyte-timelineview-column-size: 200px;
  --lyte-timelineview-column-gridline-temp: 201px;
  display: grid;
  position: relative;
  grid-auto-columns: var(--lyte-timelineview-column-size);
  row-gap: 10px;
  max-height: inherit;
  grid-auto-rows: var(--lyte-timelineview-row-size);
  overflow: auto;
  border-top: 1px solid #d6d6d6;
  border-right: 1px solid #d6d6d6;
}
.lyteTimelineViewContentElem.lyteTimelineViewQuarterwise {
  grid-auto-columns: auto;
}
.lyteTimelineViewNoScroll.lyteTimelineViewContentElem {
  overflow-y: hidden;
}
.lyteTimelineViewWeekwise {
  --lyte-timelineview-column-size: 40px;
  --lyte-timelineview-column-gridline-temp: 41px;
}
.lyteTimelineViewMonthwise {
  --lyte-timelineview-column-size: 20px;
  --lyte-timelineview-column-gridline-temp: 21px;
}
.lyteTimelineViewWithGrouping .lyteTimelineViewContentElem {
  --lyte-timelineview-groupby-column-end: 2;
  grid-auto-rows: unset;
  grid-template-rows: 30px 30px auto;
  row-gap: 0;
}
.lyteTimelineViewWithGrouping .lyteTimelineViewContentElem.lyteTimelineViewWeekwise {
  --lyte-timelineview-groupby-column-end: 6;
}
.lyteTimelineViewWithGrouping .lyteTimelineViewContentElem.lyteTimelineViewMonthwise {
  --lyte-timelineview-groupby-column-end: 11;
}
.lyteTimelineYearHeaderElem,
.lyteTimelineViewHeaderElem,
.lyteTimelineViewHeaderMonthElem {
  grid-column: var(--lyte-timelineview-col-number);
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  background: #fff;
  position: sticky;
  z-index: 5;
  font-size: 12px;
  padding: 10px 0;
}
.lyteTimelineYearHeaderElem span,
.lyteTimelineViewPeriodLabel {
  position: sticky;
  right: 0;
  padding: 0 10px;
}
.lyteTimelineViewTextHighlight {
  font-family: "Zoho_Puvi_Bold", sans-serif;
}
.lyteTimelineViewHeaderPrimaryLabel {
  font-family: "Zoho_Puvi_Bold", sans-serif;
}
.lyteTimelineViewWithGrouping .lyteTimelineYearHeaderElem span,
.lyteTimelineViewWithGrouping .lyteTimelineViewPeriodLabel {
  right: var(--lyte-timelineview-groupby-panel-width);
}
.lyteTimelineViewHeaderMonthElem {
  grid-row: 1;
  top: 0;
  border-right: 1px solid #d6d6d6;
  font-size: 11px;
  margin-bottom: -10px;
  cursor: pointer;
}
.lyteTimelineViewWithGrouping .lyteTimelineViewHeaderElem,
.lyteTimelineViewWithGrouping .lyteTimelineViewHeaderMonthElem {
  grid-column: var(--lyte-timelineview-col-number);
}
.lyteTimelineViewWithGrouping .lyteTimelineViewHeaderMonthElem {
  padding: 10px 20px;
  margin-bottom: 0;
}
/* 
.lyteTimelineViewWeekwise .lyteTimelineViewHeaderMonthElem::before {
	content: "";
	position: absolute;
	height: calc(100% - 5px);
	width: 1px;
	background: #ddd;
	left: 0;
	top: calc(100% + 5px);
	z-index: 1;
}
*/
.lyteTimelineViewDaywise .lyteTimelineViewPrimaryHeaderElem {
  justify-content: flex-start;
  border-right: 1px solid #EDF0F4;
  border-left: 0.5px solid #EDF0F4;
}
.lyteTimelineViewHeaderElem {
  grid-row: 2;
  top: 40px;
  border-bottom: 1px solid #EDF0F4;
  justify-content: center;
}
.lyteTimelineViewSecondaryHeaderElem {
  border-right: 1px solid #EDF0F4;
}
.lyteTimelineViewDaywise .lyteTimelineViewSecondaryHeaderElem {
  border-left: 0.5px solid #EDF0F4;
}
.lyteTimelineViewMonthwise .lyteTimelineViewSecondaryHeaderElem,
.lyteTimelineViewWeekwise .lyteTimelineViewSecondaryHeaderElem {
  border-right: 0;
}
.lyteTimelineViewSecondaryHeaderElem::after {
  content: '';
  position: absolute;
  right: 0;
  width: 1px;
  height: 10px;
  background: #EDF0F4;
  display: block;
  bottom: 0;
}
.lyteTimelineViewDaywise .lyteTimelineViewSecondaryHeaderElem::after,
.lyteTimelineViewQuarterwise .lyteTimelineViewSecondaryHeaderElem::after {
  content: none;
}
.lyteTimelineViewEndOfSection + .lyteTimelineViewSecondaryHeaderElem {
  border-right: 1px solid #d6d6d6;
}
.lyteTimelineViewEndOfSection + .lyteTimelineViewSecondaryHeaderElem::after {
  content: none;
}
.lyteTimelineViewDaywise .lyteTimelineViewHeaderElem {
  cursor: pointer;
}
.lyteTimelineViewDaywise .lyteTimelineViewHeaderMonthElem {
  cursor: default;
}
.lyteTimelineViewWithGrouping .lyteTimelineViewHeaderElem {
  top: 30px;
}
/*
.timelineColumnLine {
	grid-column-start: var(--lyte-timelineview-col-number);
	width: 1px;
	background-color: #ddd;
	grid-row: 2 / var(--lyte-timelineview-row-end);
}
.timelineColumnLine.timelineColumnSeparate {
	z-index: 10;
}
*/
.lyteTimelineViewOverlayDiv,
.lyteTimelineViewHeaderRowWrap,
.lyteTimelineViewHeaderRow,
.timelineColumnLinesContainer,
.lyteTimelineViewArrowContainer,
.lyteTimelineViewEventsContainer {
  display: contents;
}
.lyteTimelineViewEventDiv {
  grid-row: var(--lyte-timelineview-row-number);
  grid-column-start: var(--lyte-timelineview-column-start);
  grid-column-end: var(--lyte-timelineview-column-end);
  border-radius: 15px;
  position: relative;
  display: flex;
  z-index: 1;
}
.lyteTimelineViewWithGrouping .lyteTimelineViewEventDiv {
  grid-column-start: calc(var(--lyte-timelineview-column-start));
  grid-column-end: calc(var(--lyte-timelineview-column-end));
}
.lyteTimelineViewGroupbyContainer {
  grid-row: 3;
  grid-column: 1 / var(--lyte-timelineview-col-number);
  display: grid;
  align-items: flex-start;
  gap: 2px;
  align-self: flex-start;
}
.lyteTimelineViewGroupbyAccordion {
  display: grid;
}
.lyteTimelineViewGroupbyAccordionBody {
  display: grid;
  grid-auto-columns: var(--lyte-timelineview-column-size);
  row-gap: 10px;
  grid-auto-rows: var(--lyte-timelineview-row-size);
  transition: height 0.3s ease, margin 0.3s ease;
  margin: 10px 0;
}
.lyteTimelineViewHasMoreEvent .lyteTimelineViewGroupbyAccordionBody {
  margin-bottom: 0;
}
.lyteTimelineViewQuarterwise .lyteTimelineViewGroupbyAccordionBody {
  grid-auto-columns: auto;
}
.lyteTimelineViewHideAccordion .lyteTimelineViewGroupbyAccordionBody {
  contain: paint;
  height: 0px !important;
  margin: 0;
  z-index: 2;
}
.lyteTimelineViewGroupbyElementHeaderWrap {
  grid-column: 1 / var(--lyte-timelineview-col-number);
  grid-row: 1 / 4;
}
.lyteTimelineViewGroupbyElementHeader {
  position: sticky;
  right: 0;
  top: 0;
  z-index: 10;
  background: #fff;
  padding: 10px 20px;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  border-left: 1px solid #D2D9E0;
  border-bottom: 1px solid #D2D9E0;
  margin-left: -1px;
  width: var(--lyte-timelineview-groupby-panel-width);
  height: 60px;
  box-sizing: border-box;
}
.lyteTimelineViewGroupbyElement {
  display: contents;
}
.lyteTimelineViewGroupbyElementFillBg,
.lyteTimelineViewGroupbyElementLabelWrap {
  grid-row: 1;
  grid-column: 1;
  background: #EFF1F5;
  position: sticky;
  top: 60px;
  cursor: pointer;
}
.lyteTimelineViewGroupbyElementFillBg {
  z-index: 3;
  width: 100%;
}
.lyteTimelineViewGroupbyElementLabelWrap {
  right: 0;
  z-index: 8;
  display: inline-flex;
  align-items: center;
  width: var(--lyte-timelineview-groupby-panel-width);
  padding: 10px 15px 10px 20px;
  box-sizing: border-box;
  border-left: 1px solid #D2D9E0;
}
.lyteTimelineViewGroupbyElementLabelWrap::before {
  content: '';
  height: 2px;
  width: 100%;
  position: absolute;
  display: block;
  top: 100%;
  right: 0;
  border-left: 1px solid #bbb;
  background: #fff;
}
.lyteTimelineViewLastAccordion .lyteTimelineViewGroupbyElementLabelWrap::before {
  content: none;
}
.lyteTimelineViewGroupbyAccordionArrow {
  background-image: var(--lyte-sprite-image);
  background-position: -13px -1px;
  width: 10px;
  height: 6px;
  margin-right: auto;
  transform: rotate(-180deg);
  transition: transform 0.3s ease;
  flex-shrink: 0;
}
.lyteTimelineViewHideAccordion .lyteTimelineViewGroupbyAccordionArrow {
  transform: rotate(0deg);
}
.lyteTimelineViewGroupbySubgroup {
  position: sticky;
  right: 0;
  z-index: 7;
  grid-row: 1 / span var(--lyte-timelineview-row-end);
  grid-column: 1 / 3;
  width: calc(var(--lyte-timelineview-groupby-panel-width) - 1px);
  background-color: #fff;
  border-left: 1px solid #D2D9E0;
  margin-left: -1px;
  margin-top: -10px;
  margin-bottom: -2px;
}
.lyteTimelineViewHasMoreEvent .lyteTimelineViewGroupbySubgroup {
  grid-row: 1 / calc(var(--lyte-timelineview-row-end) + 1);
}
.lyteTimelineViewLastAccordion .lyteTimelineViewGroupbySubgroup {
  margin-bottom: 0;
}
.lyteTimeLineViewGroupbyDummyPanel {
  height: calc(100% - 60px);
  width: var(--lyte-timelineview-groupby-panel-width);
  background: #fff;
  position: sticky;
  z-index: 7;
  right: 0;
  border-left: 1px solid #bbb;
  box-sizing: border-box;
}
.lyteTimelineViewLastAccordion.lyteTimelineViewGroupbyAccordion .lyteTimelineViewOverlay {
  margin-bottom: 0;
  background-color: transparent;
}
.lyteTimelineViewBg {
  background-image: repeating-linear-gradient(to left, transparent 1px var(--lyte-timelineview-column-size), #EDF0F4 var(--lyte-timelineview-column-size) var(--lyte-timelineview-column-gridline-temp));
  pointer-events: none;
  grid-column: 1 / span var(--lyte-timelineview-col-number);
  grid-row: 3 / span var(--lyte-timelineview-row-end);
  margin-top: -10px;
  position: relative;
}
.lyteTimelineViewWithGrouping .lyteTimelineViewBg {
  grid-row: 3 / 4;
  grid-column: var(--lyte-timelineview-groupby-column-end) / var(--lyte-timelineview-col-number);
  margin-bottom: -2px;
}
.lyteTimelineViewHasMoreEvent .lyteTimelineViewBg {
  grid-row: 1 / calc(var(--lyte-timelineview-row-end) + 1);
}
.lyteTimelineViewEvent {
  --lyte-timelineview-eventbg: #F7D8C0;
  --lyte-timelineview-resize-color: #db5700;
  --lyte-timelineview-event-text-color: #313949;
  color: var(--lyte-timelineview-event-text-color);
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  border-radius: 20px;
  display: flex;
  align-items: center;
  background-color: var(--lyte-timelineview-eventbg);
}
.lyteTimelineViewEvent lyte-yield[yield-name="timeline-event"] {
  position: sticky;
  padding: 0 15px;
  right: 30px;
  display: inline-block;
  max-width: 100%;
  white-space: nowrap;
}
.lyteTimelineViewEvent lyte-yield.lyteTimelineViewEventAbsoluteText {
  right: 100%;
  position: absolute;
  cursor: text;
  color: #313949;
}
.lyteTimelineViewAbsoluteEvent.lyteTimelineViewEvent lyte-yield,
.lyteTimelineViewAbsoluteEvent .lyteTimelineViewEvent lyte-yield {
  color: #313949;
}
.lyteTimelineViewEvent.LyteTimelineViewGroupBy lyte-yield {
  right: calc(var(--lyte-timelineview-groupby-panel-width) + 30px);
}
.lyteTimelineViewEvent.LyteTimelineViewGroupBy lyte-yield.lyteTimelineViewEventAbsoluteText {
  right: 100%;
}
.lyteTimelineViewArrow {
  display: flex;
  grid-row: 3;
  grid-column: 1/var(--lyte-timelineview-col-number);
  align-items: center;
}
.lyteTimelineViewArrowBox {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 20px;
  height: 20px;
  border-radius: 4px;
  background: rgba(255, 255, 255, 0.5);
  margin-right: 5px;
  flex-shrink: 0;
  position: sticky;
  z-index: 2;
  cursor: pointer;
}
.lyteTimelineViewArrowBox:hover {
  background: #ffffff;
}
.lyteTimelineViewArrowBox::before {
  content: '';
  background-image: var(--lyte-sprite-image);
  background-position: -42px 0;
  width: 6px;
  height: 10px;
}
.lyteTimelineViewRightArrow.lyteTimelineViewHideArrow ~ .lyteTimelineViewArrowSeparator {
  margin-left: auto;
}
.lyteTimelineViewLeftArrow {
  right: calc(100% - 30px);
}
.lyteTimelineViewWithGrouping .lyteTimelineViewRightArrow {
  right: calc(var(--lyte-timelineview-groupby-panel-width) + 10px);
}
.lyteTimelineViewLeftArrow ~ .lyteTimelineViewArrowText {
  right: 40px;
}
.lyteTimelineViewRightArrow.lyteTimelineViewHideArrow ~ .lyteTimelineViewArrowText {
  right: unset;
  left: 40px;
}
.lyteTimelineViewWithGrouping .lyteTimelineViewLeftArrow.lyteTimelineViewHideArrow ~ .lyteTimelineViewArrowText {
  right: calc(var(--lyte-timelineview-groupby-panel-width) + 40px);
}
.lyteTimelineViewRightArrow {
  right: 10px;
}
.lyteTimelineViewArrow .lyteTimelineViewLeftArrow.lyteTimelineViewArrowBox::before {
  transform: rotate(180deg);
}
.lyteTimelineViewRightArrow + .lyteTimelineViewArrowText,
.lyteTimelineViewEventArrow .lyteTimelineViewRightArrow.lyteTimelineViewArrowBox {
  transform: translateX(0);
}
.lyteTimelineViewArrowText {
  position: sticky;
  max-width: 200px;
  z-index: 1;
}
.lyteTimelineViewArrowText.lyteTimelineViewArrowTextHide,
.lyteTimelineViewHideArrow {
  display: none;
}
.LyteTimelineViewGroupBy.event .lyteTimelineViewDue,
.lyteTimelineViewDue {
  position: absolute;
  right: calc(100% - 24px);
  width: 100px;
  z-index: -1;
  display: flex;
  background-color: inherit;
  justify-content: flex-end;
  top: 1px;
  bottom: 1px;
  border-radius: 15px;
  align-items: center;
  padding: 0 10px;
  box-sizing: border-box;
}
.lyteTimelineViewDue::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: #c2bcbc;
  mix-blend-mode: soft-light;
  border-radius: 15px;
  z-index: -1;
}
.lyteTimelineViewDue > span {
  padding: 2px 5px;
  display: block;
  background: #fff;
  font-size: 12px;
  color: #313949;
  border-radius: 10px;
}
.lyteTimelineViewLoadMore {
  grid-row: var(--lyte-timelineview-row-end);
  position: relative;
  background: #F2F7FB;
  border: 1px solid transparent;
  display: flex;
  align-items: center;
  cursor: pointer;
  z-index: 1;
}
.lyteTimelineViewLoadMore:hover {
  background: #E7F2FF80;
  border: 1px solid #B2D2FF;
}
.lyteTimelineViewLoadMoreLabel {
  position: sticky;
  right: calc(50% + var(--lyte-timelineview-groupby-panel-width) / 2);
  transform: translateX(-50%);
  display: inline-block;
  color: #338CF0;
  font-size: 14px;
}
.lyteTimelineViewHideLoadmore {
  display: none;
}
.lyteTimeLineViewNoEnd.draggable-handle-element,
.lyteTimeLineViewNoEnd .lyteTimelineViewEvent {
  border-radius: 0 20px 20px 0;
}
.lyteTimeLineViewNoEnd .lyteTimeLineViewNoEndElem {
  position: absolute;
  width: 100px;
  height: 100%;
  top: 0;
  right: calc(100% + 2px);
  transform: skewX(20deg);
  background: linear-gradient(to left, var(--lyte-timelineview-eventbg) 0px, var(--lyte-timelineview-eventbg) 4px, transparent 4px, transparent 6px, var(--lyte-timelineview-eventbg) 6px, var(--lyte-timelineview-eventbg) 19px, transparent 19px, transparent 21px, var(--lyte-timelineview-eventbg) 21px, var(--lyte-timelineview-eventbg) 34px, transparent 34px, transparent 37px, var(--lyte-timelineview-eventbg) 37px, var(--lyte-timelineview-eventbg) 46px, transparent 46px, transparent 50px, var(--lyte-timelineview-eventbg) 50px, var(--lyte-timelineview-eventbg) 57px, transparent 57px, transparent 63px, var(--lyte-timelineview-eventbg) 63px, var(--lyte-timelineview-eventbg) 68px, transparent 68px, transparent 76px, var(--lyte-timelineview-eventbg) 76px, var(--lyte-timelineview-eventbg) 79px, transparent 79px, transparent 87px, var(--lyte-timelineview-eventbg) 87px, var(--lyte-timelineview-eventbg) 89px, transparent 89px, transparent 99px, var(--lyte-timelineview-eventbg) 99px, var(--lyte-timelineview-eventbg) 100px);
}
.lyteTimeLineViewNoEnd .lyteTimeLineViewNoEndElem::before {
  content: '';
  width: 9px;
  height: 90%;
  background: var(--lyte-timelineview-eventbg);
  position: absolute;
  right: -8px;
}
.lyteTimelineViewEventResizeHandler {
  position: absolute;
  width: 13px;
  cursor: ew-resize;
  z-index: 1;
  top: 3px;
  bottom: 3px;
  visibility: hidden;
  display: flex;
  justify-content: space-between;
  padding: 0 5px;
  box-sizing: border-box;
}
.lyteTimelineViewLeft {
  right: 3px;
  border-radius: 0 20px 20px 0;
}
.lyteTimelineViewRight {
  left: 3px;
  border-radius: 20px 0 0 20px;
}
.lyteTimelineViewResizeHandlerPosInCenter .lyteTimelineViewEventResizeHandler {
  left: unset;
  right: 50%;
  transform: translateX(50%);
}
.lyteTimelineViewShowResizeHandles .lyteTimelineViewEventResizeHandler {
  visibility: visible;
}
.lyteTimelineViewEvent.lyteTimelineViewEventDrag:hover .lyteTimelineViewEventResizeHandler {
  visibility: hidden;
}
.lyteTimelineViewEventResizeHandler::before,
.lyteTimelineViewEventResizeHandler::after {
  content: '';
  width: 1px;
  margin: 5px 0;
  background-color: var(--lyte-timelineview-resize-color);
  border-radius: 2px;
}
.lyteTimelineViewOnResize {
  outline-offset: -1px;
  outline: 1px dashed var(--lyte-timelineview-event-outline-color);
}
.lyteTimelineViewToday {
  grid-column-start: var(--lyte-timelineview-today-column-start);
  display: flex;
  flex-direction: column;
  align-items: center;
  position: sticky;
  top: 0;
  padding-top: 10px;
  box-sizing: border-box;
  grid-row: 1;
  z-index: 6;
  pointer-events: none;
}
.lyteTimelineViewToday.lyteTimelineViewTodayNotInView {
  align-items: flex-start;
}
.lyteTimelineViewTodayLineDiv {
  flex-grow: 1;
  display: flex;
}
.lyteTimelineViewTodayLine {
  width: 1px;
  background: #FF1B1B;
}
.lyteTimelineViewTodayText {
  background: #323949;
  color: #fff;
  font-size: 12px;
  padding: 3px 10px;
  border-radius: 5px;
  position: relative;
  pointer-events: auto;
  white-space: nowrap;
}
.lyteTimelineViewTodayNotInView .lyteTimelineViewTodayText {
  padding: 5px 10px;
  transform: translateX(calc(50% - 0.5px));
}
.lyteTimelineViewQuarterwise .lyteTimelineViewTodayText {
  position: absolute;
  transform: translateX(calc(50% - 0.5px));
}
.lyteTimelineViewQuarterwise .lyteTimelineViewTodayLineDiv {
  position: absolute;
  height: calc(100% - 35px);
  top: 35px;
  z-index: -1;
}
.lyteTimelineViewTodayText::after {
  content: ' ';
  position: absolute;
  left: 50%;
  top: 100%;
  height: 8px;
  width: 8px;
  background: #323949;
  transform: translate(-50%, -50%) rotate(45deg);
}
.lyteTimelineViewGroupbyCount {
  flex-shrink: 0;
  margin: 0 5px;
}
.lyteTimelineViewGroupbyCount .lyteBadge {
  min-width: 20px;
  min-height: 20px;
  padding: 2px 5px;
  box-sizing: border-box;
  background: #fff;
  border: 1px solid #B7D6FB;
  border-radius: 10px;
  position: static;
  transform: unset;
}
.lyteTimelineViewGroupbyCount .lyteBadgeContent {
  font-size: 11px;
  color: #313949;
}
.lyteTimelineViewQuarterwise .lyteTimelineYearHeaderElem {
  grid-column-end: span 12;
  grid-row: 1;
  top: 0;
  padding: 0;
  align-items: flex-end;
  justify-content: flex-start;
  padding-right: 10px;
}
.lyteTimelineViewQuarterwise .lyteTimelineYearHeaderElem > div {
  position: sticky;
  right: 10px;
}
.lyteTimelineViewQuarterwise .lyteTimelineViewHeaderElem {
  width: calc(var(--lyte-timelineview-lineCount) * var(--lyte-timelineview-column-size));
  box-sizing: border-box;
  padding: 0;
}
.lyteTimelineViewQuarterwise .lyteTimelineViewBg {
  grid-row: 3 / span var(--lyte-timelineview-row-end);
}
.lyteTimelineViewQuarterwise .lyteTimelineViewGroupbyAccordion .lyteTimelineViewBg {
  grid-row-start: 1;
}
.lyteTimelineViewQuarterwise .lyteTimelineViewEndOfSection + .lyteTimelineViewSecondaryHeaderElem {
  border-right: 1px solid #d6d6d6;
}
.lyteTimelineViewHoverCardDiv {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 6;
  pointer-events: none;
  border: 1px solid #338CF0;
  display: flex;
  flex-direction: column-reverse;
  border-radius: 5px;
  box-shadow: 0px 0px 10px 0px #0000001A;
  box-sizing: border-box;
  overflow: hidden;
}
.lyteTimelineViewHoverCardHide {
  display: none;
}
.lyteTimelineViewHoverCardLoading {
  width: 100%;
  height: 100px;
  background-color: #EDF0F4;
  align-content: center;
  justify-content: center;
}
.lyteTimelineViewHoverCard {
  width: 100%;
  background-color: #EDF0F4;
}
.lyteTimelineViewDragSourceElem {
  opacity: 0.6;
}
.lyteTimelineViewDragPlaceholder {
  border: 1px dashed #000;
  z-index: 5;
  display: flex;
}
.lyteTimelineViewHeaderElem.lyteTimelineViewHoliday,
.lyteTimelineViewHeaderElem.lyteTimelineViewWeekEnd {
  color: #8B9BB8;
}
.lyteTimelineViewOverlay {
  grid-column-start: var(--lyte-timelineview-col-number);
  grid-row: 3 / span var(--lyte-timelineview-row-end);
  background-color: #F8FAFF;
  margin-top: -10px;
  border-right: 1px solid #d6d6d6;
  border-left: 1px solid #d6d6d6;
  margin-right: 0;
  margin-left: -1px;
  background-image: repeating-linear-gradient(to left, transparent 0px calc(var(--lyte-timelineview-column-size) - 1px), #EDF0F4 calc(var(--lyte-timelineview-column-size) - 1px) var(--lyte-timelineview-column-size));
}
.lyteTimelineViewDaywise .lyteTimelineViewOverlay {
  background-image: none;
}
.lyteTimelineViewOverlay.lyteTimelineViewEvenSection {
  background-color: transparent;
}
.lyteTimelineViewWithGrouping .lyteTimelineViewOverlay {
  grid-row: 3 / 4;
  grid-column-start: var(--lyte-timelineview-col-number);
  margin-bottom: -2px;
}
.lyteTimelineViewGroupbyAccordionBody .lyteTimelineViewOverlay {
  visibility: hidden;
  grid-row: 1;
}
.lyteTimelineViewHasMoreEvent .lyteTimelineViewOverlay {
  grid-row: 1 / calc(var(--lyte-timelineview-row-end) + 1);
}
.lyteTimelineViewOverlay.lyteTimelineViewOddQuarter {
  background-color: transparent;
}
.lyteTimelineViewQuarterwise .lyteTimelineViewOverlay {
  display: grid;
  grid-template-columns: repeat(var(--lyte-timelineview-lineCount), 1fr);
  width: calc(var(--lyte-timelineview-lineCount) * var(--lyte-timelineview-column-size));
  box-sizing: border-box;
  border-left: 0;
  border-right: 1px solid #EDF0F4;
  margin-left: 0;
  margin-right: 0;
  background-image: unset;
}
.lyteTimelineQuarterViewLines {
  grid-column: var(--lyte-timelineView-count);
  width: 1px;
  background: #EDF0F4;
}
.lyteTimelineViewQuarterwise .lyteTimelineViewEvenQuarter + .lyteTimelineViewOddQuarter,
.lyteTimelineViewQuarterwise .lyteTimelineViewOddQuarter + .lyteTimelineViewEvenQuarter {
  border-right: 1px solid #d6d6d6;
}
.lyteTimelineViewNoResultDiv {
  margin-top: 10px;
  display: flex;
  align-items: center;
  grid-row: 3 / span calc(var(--lyte-timelineview-row-end));
}
.lyteTimelineViewNoResultLabel {
  position: sticky;
  right: 50%;
  transform: translateX(-50%);
  color: #777;
  font-size: 18px;
}
.lyteTimelineViewGroupbyContainer .lyteTimelineViewNoResultLabel {
  right: calc(50% - var(--lyte-timelineview-groupby-panel-width) / 2);
}
.lyteTimelineViewLoading {
  grid-column: 1 / var(--lyte-timelineview-col-number);
  grid-row: calc(var(--lyte-timelineview-row-end) + 2);
}
.lyteTimelineViewLoadingYield,
.lyteTimelineViewLoading lyte-loader {
  position: sticky;
  right: 50%;
  transform: translateX(50%);
  display: block;
  width: 30px;
}
.lyteTimelineViewGroupbyContainer .lyteTimelineViewLoading {
  grid-row: var(--lyte-timelineview-row-end);
}
.lyteTimelineViewGroupbyContainer .lyteTimelineViewLoadingYield,
.lyteTimelineViewGroupbyContainer .lyteTimelineViewLoading lyte-loader {
  right: calc(50% + var(--lyte-timelineview-groupby-panel-width) / 2);
}
.lyteTimelineViewLoading .ltexitdiv {
  display: none;
}
.lyteTimelineViewLoading .ltspindiv {
  height: auto;
}
.lyteTimelineViewLoading .ltLoaderSpin {
  width: 28px;
  height: 28px;
}
.lyteTimelineViewNoRecordFound.lyteTimelineViewGroupbyAccordionBody {
  margin-top: 0;
}
.lyteTimelineViewGroupbyAccordionBody .lyteTimelineViewNoResultDiv {
  grid-row: 1;
}
.lyteTimelineViewOnEventResize * {
  cursor: ew-resize;
}
.lyteTimelineViewOnEventResize .draggable-element {
  cursor: ew-resize;
}
.lyteTimelineViewDisableResize.lyteTimelineViewEventResizeHandler {
  display: none;
}
.lyteTimelineViewDisableUserSelect,
.lyteTimelineViewDisableUserSelect * {
  -webkit-user-select: none;
  user-select: none;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
.lyteCropArea,
.displayImage,
.lyteCropBox {
  position: relative;
}
.lyteCropArea {
  background: var(--lyte-cropper-crop-area-bg);
  direction: ltr;
}
.lyteCropBox {
  height: 100%;
  width: 100%;
  overflow: hidden;
}
.displayArea,
.displayImageDiv {
  position: absolute;
}
.lyteCropFixedImage {
  position: absolute;
  transform: rotate(0deg);
  left: 0;
  top: 0;
}
.lyteCropFixedDiv {
  height: 100%;
}
.lyteCropTopLeftCorner,
.lyteCropTopRightCorner,
.lyteCropBottomRightCorner,
.lyteCropBottomLeftCorner {
  width: 10px;
  height: 10px;
  background: var(--lyte-cropper-resize-handle-bg);
  z-index: 16;
  position: absolute;
}
.lyteCropTopLeftCorner {
  top: -5px;
  left: -5px;
  cursor: nwse-resize;
}
.lyteCropTopRightCorner {
  top: -5px;
  right: -5px;
  cursor: nesw-resize;
}
.lyteCropBottomRightCorner {
  bottom: -5px;
  right: -5px;
  cursor: nwse-resize;
}
.lyteCropBottomLeftCorner {
  bottom: -5px;
  left: -5px;
  cursor: nesw-resize;
}
.lyteCropTopEdge,
.lyteCropBottomEdge,
.lyteCropRightEdge,
.lyteCropLeftEdge {
  position: absolute;
  z-index: 15;
  display: flex;
}
.lyteCropTopEdge,
.lyteCropBottomEdge {
  left: 0;
  right: 0;
  height: 10px;
  justify-content: center;
  cursor: ns-resize;
}
.lyteCropRightEdge,
.lyteCropLeftEdge {
  top: 0;
  bottom: 0;
  width: 10px;
  align-items: center;
  cursor: ew-resize;
}
.lyteCropTopEdge {
  top: -5px;
}
.lyteCropBottomEdge {
  bottom: -5px;
}
.lyteCropRightEdge {
  right: -5px;
}
.lyteCropLeftEdge {
  left: -5px;
}
.lyteCropRightSpan,
.lyteCropLeftSpan,
.lyteCropBottomSpan,
.lyteCropTopSpan {
  width: 10px;
  height: 10px;
  background: var(--lyte-cropper-resize-handle-bg);
  pointer-events: none;
}
.lyteCropDivImage {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  overflow: hidden;
}
.lyteCropDivImageImg {
  position: absolute;
  z-index: 10;
}
.lyteCropCropper {
  background: rgba(255, 255, 255, 0.3);
  cursor: move;
  position: absolute;
  top: 0;
  left: 0;
}
.lyteCropperInfoBox {
  position: absolute;
  z-index: 100;
}
.lyteCropOpacityDiv {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: var(--lyte-cropper-opacitydiv-bg);
  opacity: 0.9;
  transition: opacity 0.1s ease;
}
.lytecropVerGrid1,
.lytecropVerGrid2,
.lytecropHorGrid1,
.lytecropHorGrid2 {
  position: absolute;
  pointer-events: none;
  opacity: 0;
  z-index: 12;
  transition: opacity 0.3s ease;
}
.lytecropVerGrid1,
.lytecropVerGrid2 {
  border-right: 1px dashed var(--lyte-cropper-gridline-color);
  top: 0;
  bottom: 0;
}
.lytecropHorGrid1,
.lytecropHorGrid2 {
  border-top: 1px dashed var(--lyte-cropper-gridline-color);
  right: 0;
  left: 0;
}
.lytecropVerGrid1 {
  right: 33%;
}
.lytecropVerGrid2 {
  right: 66%;
}
.lytecropHorGrid1 {
  top: 33%;
}
.lytecropHorGrid2 {
  top: 66%;
}
.lytePSParent {
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
}
.lytePSBackImage,
.lytePSFrontImage {
  position: absolute;
  pointer-events: none;
}
.lytePSFreezeLayer {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  background: var(--lyte-cropper-profilesetter-freeze-bg);
  opacity: 0.5;
}
.lytePSvisualArea {
  position: absolute;
  overflow: hidden;
  border-radius: 10px;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
.draggable-handle-element {
  cursor: move;
}
.lyteSortableParent .lyteDraggablePlaceholder {
  background: var(--lyte-draggable-placeholder-bg);
  border: 1px solid var(--lyte-draggable-placeholder-border-color);
  box-sizing: border-box;
}
.lyteSortableParent .lyteDraggableDisabledPlaceholder {
  background: var(--lyte-draggable-placeholder-disabled-bg);
  border: 1px solid var(--lyte-draggable-placeholder-disabled-border-color);
  box-sizing: border-box;
}
.stopDefaultMove {
  touch-action: none;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
:root {
  --lyte-landmark-section-role-color: #0984E3;
  --lyte-landmark-banner-role-color: brown;
  --lyte-landmark-complementary-role-color: green;
  --lyte-landmark-contentinfo-role-color: #E74C3C;
  --lyte-landmark-form-role-color: #000;
  --lyte-landmark-main-role-color: #F2A62E;
  --lyte-landmark-navigation-role-color: #3c98dd;
  --lyte-landmark-search-role-color: #da3e3e;
  --lyte-landmark-region-role-color: #df19df;
}
.lyteLandmarkMenuButtonWrap {
  display: flex;
  align-items: center;
  position: fixed;
  top: 20px;
  left: 20px;
  background: var(--lyte-theme-body-bg);
  padding: 10px;
  border-radius: 5px;
  z-index: 20;
  box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.1);
  gap: 5px;
}
.lyteLandmarkDragIcon {
  display: flex;
  padding: 5px;
  gap: 3px;
}
.lyteLandmarkDragIcon::before,
.lyteLandmarkDragIcon::after {
  content: '';
  -webkit-mask-image: var(--lyte-sprite-image);
  -webkit-mask-position: -294px -4px;
  mask-image: var(--lyte-sprite-image);
  mask-position: -294px -4px;
  width: 3px;
  height: 13px;
  background-color: #777;
}
.lyteLandmarkDragIcon:hover::before,
.lyteLandmarkDragIcon:hover::after {
  background: #333;
}
.lyteLandmarkButton lyte-icon.dropdown {
  display: inline-block;
  vertical-align: middle;
  background-image: var(--lyte-sprite-image);
  background-position: -1px -2px;
  width: 8px;
  height: 4px;
  opacity: 0.5;
  margin-left: 5px;
}
.lyteLandmarkButton.lyteMenuSelected .lyte-button,
.lyteLandmarkButtonHighlight .lyte-button {
  border: 1px solid #7fceef;
}
.ltLandmarkRoot [lt-prop-landmark][role] {
  position: relative;
  /* outline-offset: calc(-1 * var(--lyte-landmark-border-size)); */
}
.ltLandmarkRoot .ltLandmarkAbsoluteElem[lt-prop-landmark][role] {
  position: absolute;
}
.ltLandmarkRoot [lt-prop-landmark][role="section"] {
  outline: var(--lyte-landmark-border-size) solid var(--lyte-landmark-section-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role="banner"] {
  outline: var(--lyte-landmark-border-size) solid var(--lyte-landmark-banner-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role="complementary"] {
  outline: var(--lyte-landmark-border-size) solid var(--lyte-landmark-complementary-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role="contentinfo"] {
  outline: var(--lyte-landmark-border-size) solid var(--lyte-landmark-contentinfo-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role="form"] {
  outline: var(--lyte-landmark-border-size) solid var(--lyte-landmark-form-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role="main"] {
  outline: var(--lyte-landmark-border-size) solid var(--lyte-landmark-main-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role="navigation"] {
  outline: var(--lyte-landmark-border-size) solid var(--lyte-landmark-navigation-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role="search"] {
  outline: var(--lyte-landmark-border-size) solid var(--lyte-landmark-search-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role="region"] {
  outline: var(--lyte-landmark-border-size) solid var(--lyte-landmark-region-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role]::after {
  content: attr(landmark-display-label);
  position: absolute;
  font-size: 10px;
  top: 0;
  right: 0;
  padding: 2px 4px;
  color: #fff;
}
.ltLandmarkRoot [lt-prop-landmark][role="section"]::after {
  background-color: var(--lyte-landmark-section-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role="banner"]::after {
  background-color: var(--lyte-landmark-banner-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role="complementary"]::after {
  background-color: var(--lyte-landmark-complementary-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role="contentinfo"]::after {
  background-color: var(--lyte-landmark-contentinfo-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role="form"]::after {
  background-color: var(--lyte-landmark-form-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role="main"]::after {
  background-color: var(--lyte-landmark-main-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role="navigation"]::after {
  background-color: var(--lyte-landmark-navigation-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role="search"]::after {
  background-color: var(--lyte-landmark-search-role-color);
}
.ltLandmarkRoot [lt-prop-landmark][role="region"]::after {
  background-color: var(--lyte-landmark-region-role-color);
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/*  Mentions Input Related CSS Begins   */
.lyteMIWrapper {
  width: 400px;
  position: relative;
  background: var(--lyte-mentionsinput-bg);
  border-radius: 2px;
}
.lyteMIWrapper textarea {
  font-family: var(--lyte-primary-font);
  font-size: var(--lyte-mentionsinput-textarea-font-size);
  line-height: 22px;
  height: 40px;
  min-height: 40px;
  display: block;
  padding: 8px;
  color: var(--lyte-mentionsinput-text-color);
  overflow: hidden;
  background: transparent;
  position: relative;
  outline: 0;
  resize: none;
  box-sizing: border-box;
}
.lyteMIWrapper textarea::placeholder {
  color: var(--lyte-mentionsinput-placeholder-text-color);
}
.lyteMIOffsetDiv {
  position: fixed;
  visibility: hidden;
  top: -9999px;
  left: -9999px;
}
.lyteMIDropdown {
  font-family: var(--lyte-primary-font);
  display: none;
  background: var(--lyte-mentionsinput-bg);
  border: 1px solid var(--lyte-mentionsinput-border-color);
  position: absolute;
  z-index: var(--lyte-mentionsinput-zindex);
  margin-top: -2px;
  border-radius: 0 0 2px 2px;
  box-shadow: var(--lyte-mentionsinput-boxshadow-color);
  color: var(--lyte-mentionsinput-text-color);
  box-sizing: border-box;
  overflow: auto;
}
.lyteMIDropdown ul {
  margin: 0;
  padding: 5px 0;
  max-height: 300px;
}
.lyteMIDropdown lyte-mentions-item {
  background: var(--lyte-mentionsinput-bg);
  margin: 0;
  font-family: var(--lyte-primary-font);
  overflow: hidden;
  cursor: pointer;
  white-space: nowrap;
  font-size: var(--lyte-mentionsinput-dropdown-item-font-size);
  padding: 5px 10px;
  text-align: right;
  display: flex;
  align-items: center;
}
.lyteMIDropdown lyte-mentions-item img {
  width: 25px;
  height: 25px;
  border-radius: 50%;
  float: right;
  margin-left: 10px;
}
.lyteMIDropdown lyte-mentions-item em {
  font-weight: bold;
  font-style: normal;
}
.lyteMIDropdown lyte-mentions-item:hover,
.lyteMIDropdown lyte-mentions-item.lyteMIActive {
  background: var(--lyte-mentionsinput-active-elem-bg);
}
.lyteMIDropdown lyte-mentions-item b {
  background: var(--lyte-mentionsinput-highlight-elem-bg);
  font-weight: normal;
}
.lyteMIDisplayBlock {
  display: block;
}
.lyteMIHide {
  visibility: hidden;
}
.lyteMIAddOverflow {
  overflow: auto;
}
.lyteMentions {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 8px;
  color: var(--lyte-mentionsinput-bg);
  overflow: hidden;
  white-space: pre-wrap;
  word-wrap: break-word;
  text-align: right;
  line-height: 22px;
  pointer-events: none;
}
.lyteMIWithCloseIcon .lyteMentions {
  z-index: 1;
}
.lyteInput .lyteMentions {
  padding-right: 0;
}
.lyteMentionsNormalTextarea {
  top: 1px;
  left: 1px;
  bottom: 1px;
  right: 1px;
}
.lyteMentionsNormalTextarea + textarea {
  border: 1px solid var(--lyte-mentionsinput-border-color);
  border-radius: 2px;
  width: 100%;
}
.lyteMentionsNormalTextarea + textarea:hover {
  border: 1px solid #c1c1c1;
}
.lyteMentionsNormalTextarea + textarea:focus {
  border: 1px solid #7fceef;
}
.lyteMentions .lyteMentionsInnerDiv {
  color: transparent;
  white-space: pre-wrap;
  position: relative;
}
.lyteMentions .lyteMentionsStrongDiv {
  font-weight: normal;
  background: var(--lyte-mentionsinput-selected-val-bg);
  padding: 2px 0;
  line-height: 16px;
  position: relative;
  color: #111;
  pointer-events: all;
}
.lyteMentionsCustomWrapper {
  position: absolute;
  top: -100px;
  left: -100px;
}
.lyteBodyWrapper {
  overflow: hidden;
}
.lyteMIWrapper .lyteCloseIcon {
  height: 10px;
  width: 10px;
  position: absolute;
  right: 0;
  top: 0;
  background-color: #0984E3;
  z-index: 1;
  display: none;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  transform: translate(40%, -40%);
  cursor: pointer;
}
.lyteMIWrapper .lyteCloseIcon::after {
  content: "";
  -webkit-mask: var(--lyte-sprite-image) no-repeat -3px -15px;
  mask: var(--lyte-sprite-image) no-repeat -3px -15px;
  background-color: #fff;
  width: 6px;
  height: 6px;
  display: inline-block;
}
.lyteMentionsStrongDiv:hover .lyteCloseIcon {
  display: inline-flex;
}
.lyteMIForInput {
  overflow: auto;
  scrollbar-width: none;
}
.lyteMIForInput::-webkit-scrollbar {
  display: none;
}
.lyteMIForInput .lyteMentions {
  width: max-content;
}
.lyteMIForInput .lyteMentionsStrongDiv {
  vertical-align: top;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/*  Mentions Input Related CSS ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* CSS Common for all scrollbars */
.lyteScrollBar {
  overflow: hidden !important;
  position: relative !important;
  width: 100%;
  height: 100%;
  outline: none;
  box-sizing: border-box;
  overflow-anchor: none;
  -ms-overflow-style: none;
}
.lyteScrollContainer {
  position: absolute;
  border-radius: 4px;
  z-index: var(--lyte-scrollbar-zindex);
  overflow: hidden;
}
.lyteScrollContainer:hover {
  background: #eee;
  opacity: 0.9;
}
.lyteScrollContainer .lyteScrollDiv:hover {
  background: #999;
}
.lyteScrollContainer.lyteScrollContainerY {
  width: 8px;
  top: 0px;
  bottom: 0px;
  left: 0px;
  right: auto;
}
.lyteScrollContainer.lyteScrollContainerX {
  height: 8px;
  top: auto;
  bottom: 0px;
  left: 0px;
  right: 0px;
}
.lyteScrollContainer .lyteScrollDiv {
  background: var(--lyte-scrollbar-scroller-div-bg);
  position: relative;
  border-radius: 5px;
}
.lyteScrollContainerY .lyteScrollDiv {
  width: 100%;
}
.lyteScrollContainerX .lyteScrollDiv {
  height: 100%;
}
.lyteScrollContainer.lyteScrollContainerX.top {
  top: 0px;
  bottom: auto;
}
.lyteScrollContainer.lyteScrollContainerY.left {
  right: 0px;
  left: auto;
}
@supports (-ms-overflow-style: none) {
  .lyteScrollBar {
    overflow: auto !important;
  }
}
@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  .lyteScrollBar {
    overflow: auto !important;
  }
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/scrollbar.less file
 */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* searchplugin Styles */
.lyteSearchHidden {
  display: none !important;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
.lyteSelectionWrapperBox {
  position: relative;
  overflow: hidden;
  cursor: crosshair;
  user-select: none;
}
.lyteSelectorBackImage {
  display: block;
}
.lyteSelectionBox {
  position: absolute;
  cursor: move;
  border: 1px solid var(--lyte-selector-selectionbox-border-color);
  z-index: 10;
  box-sizing: border-box;
}
.lyteSelectorActiveBox {
  z-index: 15;
  border: 1px solid var(--lyte-selector-selectionbox-active-border-color);
}
.lyteSelectionFreezeLayer {
  position: absolute;
  margin: auto;
  user-select: none;
  background: var(--lyte-selector-freezelayer-bg);
  opacity: 0.3;
  cursor: crosshair;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
}
.lyteSelectorHandles {
  width: 8px;
  height: 8px;
  background: var(--lyte-selector-resize-handle-bg);
  position: absolute;
  display: none;
  border: 1px solid var(--lyte-selector-resize-handle-border-color);
}
.lyteTLCorner {
  top: -5px;
  left: -5px;
  cursor: nwse-resize;
}
.lyteTRCorner {
  top: -5px;
  right: -5px;
  cursor: nesw-resize;
}
.lyteBRCorner {
  bottom: -5px;
  right: -5px;
  cursor: nwse-resize;
}
.lyteBLCorner {
  bottom: -5px;
  left: -5px;
  cursor: nesw-resize;
}
.lyteTEdge {
  top: -5px;
  left: calc(50% - 5px);
  cursor: ns-resize;
}
.lyteBEdge {
  bottom: -5px;
  left: calc(50% - 5px);
  cursor: ns-resize;
}
.lyteREdge {
  right: -5px;
  top: calc(50% - 5px);
  cursor: ew-resize;
}
.lyteLEdge {
  left: -5px;
  top: calc(50% - 5px);
  cursor: ew-resize;
}
.lyteSelectorDeleteBtn {
  position: absolute;
  width: 15px;
  height: 15px;
  top: -18px;
  left: -18px;
  display: none;
  cursor: pointer;
  border-radius: 50%;
  background: var(--lyte-selector-delete-btn-bg);
  padding: 1px;
}
.lyteSelectorDeleteBtn::after {
  content: '';
  display: block;
  background-image: var(--lyte-sprite-image);
  background-position: -187px -38px;
  width: 11px;
  height: 13px;
  margin: 1px auto;
}
.lyteSelectorDeleteBtn:hover::after {
  background-position: -209px -38px;
}
.lyteSelectorWorkArea {
  position: absolute;
  display: none;
}
.lyteSelectorActiveBox .lyteSelectorHandles,
.lyteSelectorActiveBox .lyteSelectorDeleteBtn,
.lyteSelectorActiveBox .lyteSelectorWorkArea {
  display: block;
}
.lyteSelectorLabel {
  position: absolute;
  width: 100%;
  color: var(--lyte-selector-label-text-color);
  font-size: var(--lyte-selector-label-font-size);
}
.lyteSelectorLabelTop {
  top: 0;
  transform: translateY(-100%);
}
.lyteSelectorLabelBottom {
  top: 100%;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
.lyteSortableParent .lyteSortablePlaceholder:hover,
.lyteSortableParent .lyteSortablePlaceholder {
  background: var(--lyte-sortable-placeholder-bg);
  border: 1px solid var(--lyte-sortable-placeholder-border-color);
  box-sizing: border-box;
}
.lyteSortableParent .lyteSortableDisabledPlaceholder:hover,
.lyteSortableParent .lyteSortableDisabledPlaceholder {
  background: var(--lyte-sortable-placeholder-disabled-bg);
  border: 1px solid var(--lyte-sortable-placeholder-disabled-border-color);
}
.nullifyTransition {
  transition-duration: 0s;
}
.lyteSortableDisablePE {
  pointer-events: none;
}
.lyteSortableDummyTr {
  opacity: 0 !important;
  box-sizing: border-box !important;
  pointer-events: none !important;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
.lyteFindHighlight {
  background: #ff0;
}
/* Default theme imported */
/* Loading theme in configuration */
:root {
  --lyte-follower-bg: #222;
  --lyte-follower-text-color: #fff;
  --lyte-follower-zindex: var(--lyte-level5-zindex);
}
/* rtl files loading */
.lyteFollowerWrapper {
  position: absolute;
  font-family: var(--lyte-primary-font);
  font-size: 13px;
  padding: 3px 8px;
  background: var(--lyte-follower-bg);
  color: var(--lyte-follower-text-color);
  border-radius: 2px;
  z-index: var(--lyte-follower-zindex);
}
.lyteFollowerContent {
  white-space: pre-wrap;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
.lyteResizeElement {
  position: relative;
}
.lyteResizeHandle {
  position: absolute;
  width: 8px;
  height: 8px;
  background: #5ba1e5;
  transform: translate(50%, -50%);
  display: none;
}
.lyteResizeSelected .lyteResizeHandle {
  display: block;
}
.lyteResizeN {
  top: 0;
  right: 50%;
}
.lyteResizeNW {
  top: 0;
  right: 0%;
}
.lyteResizeNE {
  top: 0;
  right: 100%;
}
.lyteResizeS {
  right: 50%;
  top: 100%;
}
.lyteResizeSW {
  right: 0%;
  top: 100%;
}
.lyteResizeSE {
  right: 100%;
  top: 100%;
}
.lyteResizeW {
  right: 0;
  top: 50%;
}
.lyteResizeE {
  right: 100%;
  top: 50%;
}
.lyteResizeInfoDiv {
  position: absolute;
  display: block;
  border: 1px solid #d6d6d6;
  padding: 8px;
  pointer-events: none;
  z-index: var(--lyte-level5-zindex);
}
.lyteResizeCursorNE,
.lyteResizeCursorSW {
  cursor: nwse-resize;
}
.lyteResizeCursorNW,
.lyteResizeCursorSE {
  cursor: nesw-resize;
}
.lyteResizeCursorN,
.lyteResizeCursorS {
  cursor: ns-resize;
}
.lyteResizeCursorW,
.lyteResizeCursorE {
  cursor: ew-resize;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
.lyteZoomContainer {
  position: absolute;
  display: none;
  padding: 10px;
  z-index: 1080;
  background: #ececec;
  border: 1px solid #212121;
  color: #000;
  border-radius: 5px;
  font-size: 60px;
  outline: 1px solid #555;
  word-wrap: break-word;
  height: fit-content;
}
.lyteZoomContainer.showZoomContainer {
  display: block;
}
.lyteFullScreenActive > *:not(.lyteFullScreenTraverse):not(.lyteFullScreenElement):not(.lyteTooltip):not(lyte-wormhole):not(lyte-menu-box):not(lyte-drop-box):not(.dateSelectcal):not(lyte-colorbox-container),
.lyteFullScreenTraverse > *:not(.lyteFullScreenTraverse):not(.lyteFullScreenElement) {
  display: none !important;
}
.lyteFullScreenTraverse {
  display: block !important;
  position: absolute;
  top: 0px !important;
  right: 0px !important;
  bottom: 0px !important;
  left: 0px !important;
  box-sizing: border-box !important;
  min-width: 0px !important;
  max-width: none !important;
  min-height: 0px !important;
  max-height: none !important;
  width: 100% !important;
  height: 100% !important;
  transform: none !important;
  margin: 0px !important;
  padding: 0px !important;
  overflow: visible !important;
}
.lyteFullScreenElement {
  display: block !important;
  position: absolute;
  width: 100% !important;
  height: 100% !important;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Radiobutton CSS BEGINS */
.lyteRadioBtnGroupHorizontal {
  display: flex;
  flex-direction: row;
}
.lyteRadioBtnGroupVertical {
  display: flex;
  flex-direction: column;
}
.lyteRadioBtnGroupReadOnly {
  pointer-events: none;
}
.lyteRadioBtnGroupHorizontal lyte-radiobutton {
  margin-inline-end: 10px;
}
.lyteRadioBtnGroupHorizontal lyte-radiobutton:last-of-type {
  margin-inline-end: 0;
}
.lyteRadioBtnGroupVertical lyte-radiobutton {
  margin-bottom: 8px;
}
.lyteRadioBtnGroupVertical lyte-radiobutton:last-of-type {
  margin-bottom: 0;
}
.lyteRadioGroupFieldSet {
  display: flex;
  border: 0;
}
.lyteRadioGroupLegend {
  font-family: var(--lyte-primary-font);
  font-size: 15px;
  margin-bottom: 10px;
  color: #555;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
.lyteCBoxGroupHorizontal {
  display: flex;
  flex-direction: row;
}
.lyteCBoxGroupVertical {
  display: flex;
  flex-direction: column;
}
.lyteCBoxGroupHorizontal lyte-checkbox {
  margin-inline-end: 10px;
}
.lyteCBoxGroupHorizontal lyte-checkbox:last-of-type {
  margin-inline-end: 0;
}
.lyteCBoxGroupVertical lyte-checkbox {
  margin-bottom: 8px;
}
.lyteCBoxGroupVertical lyte-checkbox:last-of-type {
  margin-bottom: 0;
}
.lyteCBoxGroupFieldSet {
  display: flex;
  border: 0;
}
.lyteCBoxGroupLegend {
  font-family: var(--lyte-primary-font);
  font-size: 15px;
  margin-bottom: 10px;
  color: #555;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* tag styles BEGINS */
lyte-tag {
  position: relative;
  display: block;
}
lyte-tag-label {
  padding-bottom: 5px;
}
lyte-tag lyte-dropdown {
  width: 100%;
  display: inline-block;
}
lyte-tag-description {
  opacity: 0.4;
  font-size: var(--lyte-tag-description-font-size);
  white-space: nowrap;
}
.lyteTagDropdown lyte-drop-item {
  padding-right: 10px;
  display: flex;
  flex-direction: column;
}
.lyteTagDropdown lyte-drop-item.lyteDropdownActive {
  display: none;
}
lyte-tag lyte-dropdown .lyteTagInputLi {
  background: #fff;
  border: 0;
  padding: 0;
  margin: 0;
  width: auto;
  max-width: 100%;
}
lyte-tag lyte-dropdown .lyteTagInputLi input {
  max-width: 100%;
}
lyte-tag .lyteTagItem {
  display: block;
  max-width: 100%;
  -ms-word-wrap: break-word;
  overflow-wrap: break-word;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}
lyte-tag .lyteTagRemoveIcon lyte-drop-button::after {
  display: none;
}
.lyteTagDropdown .lyteTagHidden {
  display: none;
}
.lyteTagDropdown .lyteTagGroupHidden {
  display: none;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* tag styles ENDS */
@media (prefers-reduced-motion: reduce) {
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteContextualAnimation lyte-connect-item,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteContextualAnimation lyte-connection-content,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteProgressBar .lyteProgressStatus,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteGridstackHandler,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteCBoxItem,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteVideoSubtitleWrapper,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteVideoControls,
  body:not(.lyteUICompOverrideSystemReducedAnim) lyte-tree,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteTourTargetBackground,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteTourContainer,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteRadioSlider::before,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteRadioSwitch .on-btn,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteRadioLayer .lyteRadioCheck,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lytePopover.lyteZoom,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteModal,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteMessageBox,
  body:not(.lyteUICompOverrideSystemReducedAnim) lyte-menu-box.lyteAnimate lyte-menu-body,
  body:not(.lyteUICompOverrideSystemReducedAnim) lyte-menu-box.lyteAnimate,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteExpTableAccordionAnimation .lyteExpTableAccordionContent .lyteExpressAccordionTdChild,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteExpTableAccordionAnimation .lyteExpTableAccordionContent lyte-td-wrap,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteExpTableAccordionAnimation .lyteExpTableAccordionContent td,
  body:not(.lyteUICompOverrideSystemReducedAnim) lyte-lb-collapse,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteLBLeftChildWrap,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteLBRightChildWrap,
  body:not(.lyteUICompOverrideSystemReducedAnim) lyte-drop-box.lyteAnimate lyte-drop-body,
  body:not(.lyteUICompOverrideSystemReducedAnim) lyte-drop-box.lyteAnimate,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteDrawerInlineBody.lyteDrawerMiniVariant .lyteDrawerPanel,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteDrawerInlineBody.lyteDrawerInlineDisplace .lyteDrawerContent,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteDrawerInlineBody .lyteDrawerPanel,
  body:not(.lyteUICompOverrideSystemReducedAnim) #lyteDateSelect,
  body:not(.lyteUICompOverrideSystemReducedAnim) .dateSelectcal .specificDate,
  body:not(.lyteUICompOverrideSystemReducedAnim) .dateSelectcal .customRange,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteCBoxAnimateOnUp,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteCBoxMoveRightWithTransition,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteCBoxMoveLeftWithTransition,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteCBoxCurrentItem,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteColorboxThumbInnerWrapper,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteCheckSlider::before,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteCheckSwitch .on-btn,
  body:not(.lyteUICompOverrideSystemReducedAnim) lyte-carousel-item,
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteAvatarSlideAnim,
  body:not(.lyteUICompOverrideSystemReducedAnim) .alertPopup,
  body:not(.lyteUICompOverrideSystemReducedAnim) lyte-accordion-body {
    transition-duration: 0.0001s !important;
  }
  body:not(.lyteUICompOverrideSystemReducedAnim) .lyteAvatarLoading {
    animation: none;
  }
}
.lyteUICompReducedAnim .lyteContextualAnimation lyte-connect-item,
.lyteUICompReducedAnim .lyteContextualAnimation lyte-connection-content,
.lyteUICompReducedAnim .lyteProgressBar .lyteProgressStatus,
.lyteUICompReducedAnim .lyteGridstackHandler,
.lyteUICompReducedAnim .lyteCBoxItem,
.lyteUICompReducedAnim .lyteVideoSubtitleWrapper,
.lyteUICompReducedAnim .lyteVideoControls,
.lyteUICompReducedAnim lyte-tree,
.lyteUICompReducedAnim .lyteTourTargetBackground,
.lyteUICompReducedAnim .lyteTourContainer,
.lyteUICompReducedAnim .lyteRadioSlider::before,
.lyteUICompReducedAnim .lyteRadioSwitch .on-btn,
.lyteUICompReducedAnim .lyteRadioLayer .lyteRadioCheck,
.lyteUICompReducedAnim .lytePopover.lyteZoom,
.lyteUICompReducedAnim .lyteModal,
.lyteUICompReducedAnim .lyteMessageBox,
.lyteUICompReducedAnim lyte-menu-box.lyteAnimate lyte-menu-body,
.lyteUICompReducedAnim lyte-menu-box.lyteAnimate,
.lyteUICompReducedAnim .lyteExpTableAccordionAnimation .lyteExpTableAccordionContent .lyteExpressAccordionTdChild,
.lyteUICompReducedAnim .lyteExpTableAccordionAnimation .lyteExpTableAccordionContent lyte-td-wrap,
.lyteUICompReducedAnim .lyteExpTableAccordionAnimation .lyteExpTableAccordionContent td,
.lyteUICompReducedAnim lyte-lb-collapse,
.lyteUICompReducedAnim .lyteLBLeftChildWrap,
.lyteUICompReducedAnim .lyteLBRightChildWrap,
.lyteUICompReducedAnim lyte-drop-box.lyteAnimate lyte-drop-body,
.lyteUICompReducedAnim lyte-drop-box.lyteAnimate,
.lyteUICompReducedAnim .lyteDrawerInlineBody.lyteDrawerMiniVariant .lyteDrawerPanel,
.lyteUICompReducedAnim .lyteDrawerInlineBody.lyteDrawerInlineDisplace .lyteDrawerContent,
.lyteUICompReducedAnim .lyteDrawerInlineBody .lyteDrawerPanel,
.lyteUICompReducedAnim #lyteDateSelect,
.lyteUICompReducedAnim .dateSelectcal .specificDate,
.lyteUICompReducedAnim .dateSelectcal .customRange,
.lyteUICompReducedAnim .lyteCBoxAnimateOnUp,
.lyteUICompReducedAnim .lyteCBoxMoveRightWithTransition,
.lyteUICompReducedAnim .lyteCBoxMoveLeftWithTransition,
.lyteUICompReducedAnim .lyteCBoxCurrentItem,
.lyteUICompReducedAnim .lyteColorboxThumbInnerWrapper,
.lyteUICompReducedAnim .lyteCheckSlider::before,
.lyteUICompReducedAnim .lyteCheckSwitch .on-btn,
.lyteUICompReducedAnim lyte-carousel-item,
.lyteUICompReducedAnim .lyteAvatarSlideAnim,
.lyteUICompReducedAnim .alertPopup,
.lyteUICompReducedAnim lyte-accordion-body {
  transition-duration: 0.0001s !important;
}
.lyteUICompReducedAnim .lyteAvatarLoading {
  animation: none;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
.lyteNotificationCenter {
  position: absolute;
  display: flex;
  flex-direction: column;
  right: 15px;
  top: 30px;
  z-index: var(--lyte-level3-zindex);
  transition: top 0.3s linear;
}
.lyteNotificationPopUpCenterWrapper {
  width: 350px;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  height: auto;
  transition: transform 0.3s linear, height 0.3s linear;
}
.lyteNotificationParentContainer {
  width: 350px;
  position: relative;
  display: flex;
  flex-direction: column;
  transition: height 0.3s linear, margin 0.3s linear;
  gap: 10px;
  overflow: hidden;
  margin-top: 5px;
}
.lyteNotificationCenterWrapper {
  width: 350px;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  height: auto;
  transition: transform 0.3s linear, height 0.3s linear;
}
.lyteNotificationPopUpItem,
.lyteNotificationItem {
  position: relative;
  border: 1px solid #0984E333;
  background-color: #EBF6FF;
  border-radius: 5px;
  width: 350px;
  transition: top 0.3s linear, transform 0.3s linear, height 0.3s linear, margin 0.3s linear, opacity 0.3s linear;
  top: 0;
  right: 0;
  padding: 15px 50px 15px 20px;
  box-shadow: 0px 3px 6px 0px #CFDCE6B2;
  box-sizing: border-box;
  margin-bottom: 10px;
  opacity: 0;
  transform: translateX(0);
}
.lyteNotificationPopUpItemActive {
  transform: scale(0);
}
.lyteNotificationFadeItemActive {
  opacity: 1;
}
.lyteNotificationSlideItemActive {
  transform: translateX(120%);
}
.lyteNotificationItem:last-child {
  margin-bottom: 0;
}
.lyteNotificationItemOverlap {
  position: absolute;
}
.lyteNotificationbtnWrapper {
  display: flex;
  justify-content: flex-end;
  gap: 10px;
  height: auto;
  transition: width 0.3s linear, height 0.3s linear, margin 0.3s linear;
}
.lyteNotificationbtnWrapper lyte-button {
  flex-shrink: 0;
  cursor: pointer;
}
.lyteNotificationbtnWrapper button {
  font-size: 12px;
  border-radius: 5px;
}
.lyteNotificationPopCloseIcon,
.lyteNotificationCloseIcon {
  -webkit-mask: var(--lyte-sprite-image) no-repeat -323px -161px;
  mask: var(--lyte-sprite-image) no-repeat -323px -161px;
  background-color: #666;
  width: 12px;
  height: 12px;
  cursor: pointer;
  display: none;
  position: absolute;
  right: 20px;
  top: 15px;
}
.lyteNotificationPopUpItem:hover .lyteNotificationPopCloseIcon,
.lyteNotificationItem:hover .lyteNotificationCloseIcon {
  display: block;
}
.lyteNotificationCancelBtn button {
  font-size: 0;
  padding: 6px;
}
.lyteNotificationPopCancelBtn button {
  border-radius: 50%;
  background-color: #f2f2f2;
  position: relative;
  left: 320px;
  font-size: 0;
  padding: 6px;
  margin: 5px;
}
.lyteNotificationPopCancelBtn button::after,
.lyteNotificationCancelBtn button::after {
  content: "";
  display: inline-block;
  -webkit-mask: var(--lyte-sprite-image) no-repeat -323px -161px;
  mask: var(--lyte-sprite-image) no-repeat -323px -161px;
  background-color: #666;
  width: 12px;
  height: 12px;
}
.lyteNotificationHideBtnWrapper {
  display: none;
}
.lyteNotificationSlideOut {
  transform: translateX(100%);
}
.newNotificationAdded {
  transform: translateX(calc(100% + 20px)) !important;
  opacity: 1;
}
.showPanelActive {
  transform: translateX(calc(100% + 20px)) !important;
  opacity: 0;
}
.lyteNotificationClosedClearIcon {
  -webkit-mask: var(--lyte-sprite-image) no-repeat -323px -161px;
  mask: var(--lyte-sprite-image) no-repeat -323px -161px;
  background-color: #fff;
  width: 12px;
  height: 12px;
  display: inline-block;
}
.lyteNotificationClearWrapper {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  position: absolute;
  z-index: 20;
  top: -10px;
  display: none;
  right: -8px;
  justify-content: center;
  cursor: pointer;
  box-shadow: -0.5px 0 5px 0.5px #c1c0c0cc;
  background: #052f404a;
}
.lyteNotificationClosed:hover .lyteNotificationClearWrapper {
  display: block;
  display: flex;
  justify-content: center;
  align-items: center;
}
.lyteNotificationClosed:hover {
  overflow: visible;
}
.lyteNotificationClosed:hover .lyteNotificationCloseIcon {
  display: none;
}
.lyteNotificationClear {
  transform: translateX(calc(100% + 20px));
}
.lyteNotificationHideClear {
  display: none !important;
}
.lyteNotificationBtnWrapperHidden {
  height: 0 !important;
  width: 0;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
.lyteOrgTreeWrapper {
  cursor: pointer;
  max-width: 100%;
  overflow: auto hidden;
  position: relative;
  display: inline-grid;
  grid-auto-flow: column;
}
.lyteOrgTreeColumn {
  display: flex;
  flex-direction: column;
  height: 500px;
  overflow: auto;
  margin: 0 -1px;
}
.lyteOrgTreeExpandedColumn {
  width: 300px;
}
.lyteOrgTreeShrinkedColumn {
  width: 150px;
}
.lyteOrgTreeElementsWrap {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  padding: 20px 0;
  border-left: 1px solid #ccc;
}
.lyteOrgTreeChildDropZone {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}
.lyteOrgTreeElements {
  width: 60%;
  height: 50px;
  border-radius: 15px;
  margin: 0px auto;
  border: solid 1px #ccc;
  display: flex;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
  z-index: 1;
  background-color: #fff;
  flex-shrink: 0;
}
.lyteOrgTreeShrinkedColumn .lyteOrgTreeElements {
  width: 50px;
  overflow: auto;
}
.lyteOrgTreeActiveElement {
  border: 1px solid #0088ff;
  z-index: 50;
}
.lyteOrgTreeBadgeWrapper {
  min-width: 30px;
  position: absolute;
  right: 15px;
}
.lyteOrgTreeChildrenCountBadge {
  height: 20px;
  min-width: 30px;
  margin: 0px auto;
  border: solid 1px #ccc;
  display: flex;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
  z-index: 1;
  background-color: #fff;
}
.lyteOrgTreeActiveWrap .lyteOrgTreeChildrenCountBadge {
  background-color: #0088ff;
  border-color: #0088ff;
  color: #fff;
  z-index: 100;
}
.lyteOrgTreeVerticalConnect {
  position: absolute;
  width: 2px;
  background-color: #0088ff;
  z-index: 10;
}
.lyteOrgTreeVerticalBorder {
  position: absolute;
  width: 1px;
  top: 20px;
  bottom: 0;
}
.lyteOrgTreeLeftHorizontalConnect,
.lyteOrgTreeRightHorizontalConnect {
  height: 1px;
  flex-grow: 1;
  top: calc(50% - 1px);
  z-index: -1;
}
.lyteOrgTreeLeftHorizontalConnect {
  left: 0;
  background-color: #ccc;
}
.lyteOrgTreeRightHorizontalConnect {
  right: 0;
}
.lyteOrgTreeColumn::-webkit-scrollbar {
  display: none;
}
.lyteOrgTreeColumn {
  -ms-overflow-style: none;
  scrollbar-width: none;
}
.lyteOrgTreeLoadMoreWrap,
.lyteOrgTreeScrollTopWrap {
  position: sticky;
  z-index: 100;
  display: none;
  transition-duration: 0.3s;
}
.lyteOrgTreeLoadMoreWrap {
  bottom: 0;
  top: unset;
  margin-top: auto;
}
.lyteOrgTreeScrollTopWrap {
  margin-top: 0;
  top: 0;
}
.lyteOrgTreeColumn:hover .lyteOrgTreeLoadMoreWrap,
.lyteOrgTreeColumn:hover .lyteOrgTreeScrollTopWrap {
  display: flex;
}
.lyteOrgTreeLoadMore,
.lyteOrgTreeTopScroll {
  width: 100%;
  height: 20px;
  top: 0;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #fff;
}
.lyteOrgTreeLoadMore {
  top: unset;
  bottom: 0;
}
.lyteOrgTreeChildPlaceHolder {
  width: 100%;
  height: 100%;
  display: none;
  background: #808080;
  z-index: 10000;
  position: absolute;
  pointer-events: none;
}
.lyteOrgTreeChildPlaceHolderActive {
  display: inline-block;
}
.lyteOrgTreeSiblingPlaceHolder {
  width: 100%;
  height: 50px;
  display: inline-block;
  background: #f5deb3;
  flex-shrink: 0;
}
.clonedElem {
  position: absolute;
  margin: 0;
  z-index: 10000;
  pointer-events: none;
}
.lyteOrgTreeConnectorSvg {
  position: absolute;
  pointer-events: none;
}
.lyteOrgTreeLoadMore::after,
.lyteOrgTreeTopScroll::after {
  content: "";
  width: 10px;
  height: 10px;
  display: block;
  transform: rotate(45deg);
  border-left: 1px solid #000;
  border-top: 1px solid #000;
}
.lyteOrgTreeLoadMore::after {
  transform: rotate(-135deg);
}
.lyteOrgTreeBadgeWrapper + .lyteOrgTreeRightHorizontalConnect {
  background-color: #ccc;
  margin-right: 15px;
}
.lyteOrgTreeActiveWrap .lyteOrgTreeLeftHorizontalConnect,
.lyteOrgTreeActiveWrap .lyteOrgTreeRightHorizontalConnect {
  background-color: #0088ff;
  height: 2px;
  margin-right: 0;
  border-color: #0088ff;
}
.lyteOrgTreeColumn > div:nth-last-child(4)::after,
.lyteOrgTreeScrollTopWrap + .lyteOrgTreeElementsWrap::before {
  content: "";
  display: block;
  width: 1px;
  height: calc(50% - 0.5px);
  position: absolute;
  z-index: 10;
  background-color: #fff;
  left: -1px;
}
.lyteOrgTreeScrollTopWrap + .lyteOrgTreeElementsWrap::before {
  top: 0;
}
.lyteOrgTreeColumn > div:nth-last-child(4)::after {
  bottom: 0;
}
.lyteOrgTreeWrapper div:first-of-type .lyteOrgTreeElementsWrap {
  border-left: 0;
}
div.lyteOrgTreeColumn:first-of-type {
  margin-left: 0;
}
div.lyteOrgTreeColumn:last-of-type {
  margin-right: 0;
}

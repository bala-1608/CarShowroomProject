var fs = require('fs-extra');
var babel = require('babel-core');
var UglifyES = require("uglify-es");
var env = require("babel-preset-env");

[
    'component',
    'router',
    'data',
    'rc',
    'cs'
].forEach(function(folder) {
    if(!fs.existsSync(folder)) {
        fs.mkdirSync(folder);
    }
});

copyFile('bower_components/lyte-component/lyte-compile.js','lyte-compile.js');
copyFile('bower_components/lyte-component/lyte-compile-advanced.js','lyte-compile-advanced.js');
copyFile('bower_components/lyte-component/lyte-ide-override.js','lyte-ide-override.js');

// var lyte_security = concatFiles([
//         'ZohoSecurity/js/security-core.min.js',
//         'ZohoSecurity/js/security-html-sanitizer.min.js',
//         'ZohoSecurity/js/security-encoder.min.js'
// ]),
// lyte_security_core = readFileSync("ZohoSecurity/js/security-core.min.js"),
// lyte_security_html_sanitizer = readFileSync("ZohoSecurity/js/security-html-sanitizer.min.js"),
// lyte_security_encoder = readFileSync("ZohoSecurity/js/security-encoder.min.js");

// lyte_security_core = ";if(!window.ZSEC) {" + lyte_security_core + "};";
// lyte_security_hold_dompurify = "window.DOMPurifyCopy = window.DOMPurify ? window.DOMPurify : undefined;"
// lyte_security_html_sanitizer = ";if(!window.ZSEC.HTMLPurifier) {" + lyte_security_html_sanitizer + "};";
// lyte_security_save_dompurify = ";if(window.DOMPurifyCopy) { window.DOMPurify = window.DOMPurifyCopy; window.DOMPurifyCopy = undefined; };";
// lyte_security_encoder = ";if(!window.ZSEC.Encoder) {" + lyte_security_encoder + "};";

// var lyte_security = lyte_security_core + lyte_security_hold_dompurify + lyte_security_html_sanitizer + lyte_security_save_dompurify + lyte_security_encoder;
// lyte_security = lyte_security.replace(/"use strict";/g, "");
// var lyte_security = readFileSync("ZohoSecurity/lyte-component-security.js")
let {bundle} = require("../SecurityConf/bundle");
bundle(function(){
        let lyte_security = readFileSync('SecurityConf/dist/lyte-security.js');
        var lyte = concatFiles(['lyte-polyfills.js','lyte-core.js']),
        router = readFileSync('bower_components/lyte-router/lyte-router.js'),
        r,r_es5;

        writeFile('router/lyte-r.js',(r = lyte + router));
        writeFile('router/lyte-r-es5.js',(r_es5 = transpile(lyte+router)));
        writeFile('router/lyte-r.min.js',UglifyES.minify(r).code);
        writeFile('router/lyte-r-es5.min.js',UglifyES.minify(r_es5).code);

        var component = readFileSync('bower_components/lyte-component/lyte-component.js'),
        c,c_es5,ssrFlag = fs.existsSync("bower_components/lyte-component/lyte-component-ssr.js");
        if(ssrFlag){
                ssr = readFileSync('bower_components/lyte-component/lyte-component-ssr.js');
                writeFile('component/lyte-c-ssr.js',lyte_security + (c = lyte + ssr));
                writeFile('component/lyte-c-ssr-es5.js',lyte_security + (c_es5 = transpile(lyte + ssr)));
                writeFile('component/lyte-c-ssr.min.js',lyte_security + UglifyES.minify(c).code);
                writeFile('component/lyte-c-ssr-es5.min.js',lyte_security + UglifyES.minify(c_es5).code);
        }
        writeFile('component/lyte-c.js',lyte_security + (c = lyte + component));
        writeFile('component/lyte-c-es5.js',lyte_security + (c_es5 = transpile(lyte + component)));
        writeFile('component/lyte-c.min.js',lyte_security + UglifyES.minify(c).code);
        writeFile('component/lyte-c-es5.min.js',lyte_security + UglifyES.minify(c_es5).code);


        var store = readFileSync('bower_components/lyte-data/lyte-data-store.js'),
        s,s_es5;
        writeFile('data/lyte-d.js',(s = lyte + store));
        writeFile('data/lyte-d-es5.js',(s_es5 = transpile(lyte + store)));
        writeFile('data/lyte-d.min.js',UglifyES.minify(s).code);
        writeFile('data/lyte-d-es5.min.js',UglifyES.minify(s_es5).code);

        copyFile('bower_components/lyte-data/lyte-idb.js','data/lyte-idb.js');
        copyFile('bower_components/lyte-data/lyte-idb.min.js','data/lyte-idb.min.js');
        copyFile('bower_components/lyte-data/lyte-idb-worker.js','data/lyte-idb-worker.js');
        copyFile('bower_components/lyte-data/lyte-idb-worker.min.js','data/lyte-idb-worker.min.js');

        var rc,rc_es5;
        if(ssrFlag){
                writeFile('rc/lyte-rc-ssr.js',lyte_security + (rc = lyte + router + ssr));
                writeFile('rc/lyte-rc-ssr-es5.js',lyte_security + (rc_es5 = transpile(lyte + router + ssr)));
                writeFile('rc/lyte-rc-ssr.min.js',lyte_security + UglifyES.minify(rc).code);
                writeFile('rc/lyte-rc-ssr-es5.min.js',lyte_security + UglifyES.minify(rc_es5).code);
        }
        writeFile('rc/lyte-rc.js',lyte_security + (rc = lyte + router + component));
        writeFile('rc/lyte-rc-es5.js',lyte_security + (rc_es5 = transpile(lyte + router + component)));
        writeFile('rc/lyte-rc.min.js',lyte_security + UglifyES.minify(rc).code);
        writeFile('rc/lyte-rc-es5.min.js',lyte_security + UglifyES.minify(rc_es5).code);

        var cs,cs_es5;
        if(ssrFlag){
                writeFile('cs/lyte-cs-ssr.js',lyte_security + (cs = lyte + ssr + store));
                writeFile('cs/lyte-cs-ssr-es5.js',lyte_security + (cs = transpile(lyte + ssr + store)));
                writeFile('cs/lyte-cs-ssr.min.js',lyte_security + UglifyES.minify(cs).code);
                writeFile('cs/lyte-cs-ssr-es5.min.js',lyte_security + UglifyES.minify(cs_es5).code);
        }
        writeFile('cs/lyte-cs.js',lyte_security + (cs = lyte + component + store));
        writeFile('cs/lyte-cs-es5.js',lyte_security + (cs = transpile(lyte + component + store)));
        writeFile('cs/lyte-cs.min.js',lyte_security + UglifyES.minify(cs).code);
        writeFile('cs/lyte-cs-es5.min.js',lyte_security + UglifyES.minify(cs_es5).code);

        var rcs,rcs_es5;
        if(ssrFlag){
                writeFile('lyte-ssr.js',lyte_security + (rcs = lyte + router + ssr + store));
                writeFile('lyte-ssr-es5.js',lyte_security + (rcs_es5 = transpile(lyte + router + ssr + store)));
                writeFile('lyte-ssr.min.js',lyte_security + UglifyES.minify(rcs).code);
                writeFile('lyte-ssr-es5.min.js',lyte_security + UglifyES.minify(rcs_es5).code);  
        }
        writeFile('lyte.js',lyte_security + (rcs = lyte + router + component + store));
        writeFile('lyte-es5.js',lyte_security + (rcs_es5 = transpile(lyte + router + component + store)));
        writeFile('lyte.min.js',lyte_security + UglifyES.minify(rcs).code);
        writeFile('lyte-es5.min.js',lyte_security + UglifyES.minify(rcs_es5).code);
});
var temp_min;
writeFile("template.min.js",(temp_min = UglifyES.minify(readFileSync('bower_components/tp/thirdparty_packages/javascript/template/v_1_2_0/template_1_2_0/template.js')).code));

var web_platform = readFileSync('bower_components/tp/thirdparty_packages/javascript/webcomponents_platform/v1_0_0/webcomponents_platform_master/webcomponents-platform.js');
web_platform = web_platform.replace(/getOwnPropertyNames/,"keys");
var web_platform_min = UglifyES.minify(web_platform).code;
var poly = concatFiles([
        'bower_components/tp/thirdparty_packages/javascript/dom4/v_1_8_5/dom4_1_8_5/src/dom4.js',
        'bower_components/tp/thirdparty_packages/javascript/es6_collections/v_0_5_6/es6_collections_0_5_6/es6-collections.js',
        'bower_components/tp/thirdparty_packages/javascript/es6_promise/v4_1_1/es6_promise_master/dist/es6-promise.min.js'
]);
var startindex = poly.indexOf("try { new Event('_'); }");
var endindex = poly.indexOf("try { new KeyboardEvent('_', {}); }");
var event_temp_ie = "try { new Event('_'); } catch (o_O) { /* jshint -W022 */ o_O = (function ($Event) { function Event(type, init) { enoughArguments(arguments.length, 'Event');var out = document.createEvent('Event');if (!init) init = {};out.initEvent(type,!!init.bubbles,!!init.cancelable);return out;} Event.prototype = $Event.prototype;return Event;}(window.Event || function Event() {}));if(window.Event){ var ev_nt = window.Event;Object.keys(ev_nt).forEach(function(item, ind){ o_O[item] = ev_nt[item];});} defineProperty(window, 'Event', {value: o_O});if (Event !== o_O) Event = o_O;}    ";
var changed_poly = poly.substring(0,startindex) +event_temp_ie+ poly.substring(endindex);
var poly_min = UglifyES.minify(changed_poly).code;
var promiseCheck = "if(typeof window.Promise == 'undefined'){window.Promise=window.ES6Promise;}";
var cus_ele = readFileSync("bower_components/tp/thirdparty_packages/javascript/custom_elements/v1_0_8/custom_elements_1_0_8/custom-elements.min.js");
var from_ind = cus_ele.indexOf('u(Node.prototype,"cloneNode",function(a){a=I.call(this,a);this.ownerDocument.__CE_hasRegistry?C(b,a):x(b,a);\nreturn a});');
var to_ind = cus_ele.indexOf('u(Node.prototype,"removeChild",function(a)');
var lyte_cloneNode = 'u(Node.prototype,"cloneNode",function(a,lyte_check){a=I.call(this,a);if(!lyte_check){this.ownerDocument.__CE_hasRegistry?C(b,a):x(b,a);}\nreturn a});';
cus_ele = cus_ele.substring(0,from_ind) +lyte_cloneNode+ cus_ele.substring(to_ind);
var arr = cus_ele.split("\n");
arr.splice(arr.length-2,1);
writeFile('custom-elements.min.js',arr.join("\n"));
writeFile('polyfill-bundle.js',poly_min + promiseCheck + web_platform_min + temp_min +arr.join("\n"));
copyFile('bower_components/tp/thirdparty_packages/javascript/webcomponentsjs/v_2_6_0/webcomponentsjs_2_6_0/custom-elements-es5-adapter.js','custom-elements-es5-adapter.js');
copyFile('bower.json','test.json');

function copyFile(src,dest) {
        fs.copyFile(src, dest , fs.constants.COPYFILE_FICLONE , function(err) {
                if(err){
                        throw err;
                }
        });
}

function readFileSync(file) {
        return fs.readFileSync(file, 'utf8');
}

function writeFile(file,content) {
        fs.writeFile(file,content, function(err) {
                if(err)
                {
                        throw err;
                }
        });
}

function transpile(content) {
        return babel.transform(content,{ast:false,presets : [env],compact: false,plugins: ["transform-remove-strict-mode"]}).code;
}

function concatFiles(arr) {
        var result = "";
        arr.forEach(function(file) {
                if(fs.existsSync(file)) {
                        result = result + readFileSync(file);
                } else {
                        throw Error(file +" missing.");
                }
        });
        return result;
}